#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MagicLeapAR

#include "Basic.hpp"

#include "MagicLeapAR_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AugmentedReality_structs.hpp"


namespace SDK::Params
{

// Function MagicLeapAR.LuminARSessionFunctionLibrary.StartLuminARSession
// 0x0028 (0x0028 - 0x0000)
struct LuminARSessionFunctionLibrary_StartLuminARSession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0008(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class ULuminARSessionConfig*                  Configuration;                                     // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LuminARSessionFunctionLibrary_StartLuminARSession) == 0x000008, "Wrong alignment on LuminARSessionFunctionLibrary_StartLuminARSession");
static_assert(sizeof(LuminARSessionFunctionLibrary_StartLuminARSession) == 0x000028, "Wrong size on LuminARSessionFunctionLibrary_StartLuminARSession");
static_assert(offsetof(LuminARSessionFunctionLibrary_StartLuminARSession, WorldContextObject) == 0x000000, "Member 'LuminARSessionFunctionLibrary_StartLuminARSession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LuminARSessionFunctionLibrary_StartLuminARSession, LatentInfo) == 0x000008, "Member 'LuminARSessionFunctionLibrary_StartLuminARSession::LatentInfo' has a wrong offset!");
static_assert(offsetof(LuminARSessionFunctionLibrary_StartLuminARSession, Configuration) == 0x000020, "Member 'LuminARSessionFunctionLibrary_StartLuminARSession::Configuration' has a wrong offset!");

// Function MagicLeapAR.LuminARFrameFunctionLibrary.GetLightEstimation
// 0x0014 (0x0014 - 0x0000)
struct LuminARFrameFunctionLibrary_GetLightEstimation final
{
public:
	struct FLuminARLightEstimate                  OutLightEstimate;                                  // 0x0000(0x0014)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LuminARFrameFunctionLibrary_GetLightEstimation) == 0x000004, "Wrong alignment on LuminARFrameFunctionLibrary_GetLightEstimation");
static_assert(sizeof(LuminARFrameFunctionLibrary_GetLightEstimation) == 0x000014, "Wrong size on LuminARFrameFunctionLibrary_GetLightEstimation");
static_assert(offsetof(LuminARFrameFunctionLibrary_GetLightEstimation, OutLightEstimate) == 0x000000, "Member 'LuminARFrameFunctionLibrary_GetLightEstimation::OutLightEstimate' has a wrong offset!");

// Function MagicLeapAR.LuminARFrameFunctionLibrary.GetTrackingState
// 0x0001 (0x0001 - 0x0000)
struct LuminARFrameFunctionLibrary_GetTrackingState final
{
public:
	ELuminARTrackingState                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LuminARFrameFunctionLibrary_GetTrackingState) == 0x000001, "Wrong alignment on LuminARFrameFunctionLibrary_GetTrackingState");
static_assert(sizeof(LuminARFrameFunctionLibrary_GetTrackingState) == 0x000001, "Wrong size on LuminARFrameFunctionLibrary_GetTrackingState");
static_assert(offsetof(LuminARFrameFunctionLibrary_GetTrackingState, ReturnValue) == 0x000000, "Member 'LuminARFrameFunctionLibrary_GetTrackingState::ReturnValue' has a wrong offset!");

// Function MagicLeapAR.LuminARFrameFunctionLibrary.LuminARLineTrace
// 0x0078 (0x0078 - 0x0000)
struct LuminARFrameFunctionLibrary_LuminARLineTrace final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<ELuminARLineTraceChannel>                TraceChannels;                                     // 0x0010(0x0050)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FARTraceResult>                 OutHitResults;                                     // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LuminARFrameFunctionLibrary_LuminARLineTrace) == 0x000008, "Wrong alignment on LuminARFrameFunctionLibrary_LuminARLineTrace");
static_assert(sizeof(LuminARFrameFunctionLibrary_LuminARLineTrace) == 0x000078, "Wrong size on LuminARFrameFunctionLibrary_LuminARLineTrace");
static_assert(offsetof(LuminARFrameFunctionLibrary_LuminARLineTrace, WorldContextObject) == 0x000000, "Member 'LuminARFrameFunctionLibrary_LuminARLineTrace::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LuminARFrameFunctionLibrary_LuminARLineTrace, ScreenPosition) == 0x000008, "Member 'LuminARFrameFunctionLibrary_LuminARLineTrace::ScreenPosition' has a wrong offset!");
static_assert(offsetof(LuminARFrameFunctionLibrary_LuminARLineTrace, TraceChannels) == 0x000010, "Member 'LuminARFrameFunctionLibrary_LuminARLineTrace::TraceChannels' has a wrong offset!");
static_assert(offsetof(LuminARFrameFunctionLibrary_LuminARLineTrace, OutHitResults) == 0x000060, "Member 'LuminARFrameFunctionLibrary_LuminARLineTrace::OutHitResults' has a wrong offset!");
static_assert(offsetof(LuminARFrameFunctionLibrary_LuminARLineTrace, ReturnValue) == 0x000070, "Member 'LuminARFrameFunctionLibrary_LuminARLineTrace::ReturnValue' has a wrong offset!");

}


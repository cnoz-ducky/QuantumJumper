#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tooltip_GameMode

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"


namespace SDK::Params
{

// Function BP_Tooltip_GameMode.BP_Tooltip_GameMode_C.ExecuteUbergraph_BP_Tooltip_GameMode
// 0x0038 (0x0038 - 0x0000)
struct BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameModeType                                 K2Node_CustomEvent_GameModeType;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATWTutorialTooltipManager*              K2Node_DynamicCast_AsTWTutorial_Tooltip_Manager;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLocks_LocksPassed;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EGameModeType GameModeType)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode) == 0x000008, "Wrong alignment on BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode");
static_assert(sizeof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode) == 0x000038, "Wrong size on BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, EntryPoint) == 0x000000, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, K2Node_CustomEvent_GameModeType) == 0x000010, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::K2Node_CustomEvent_GameModeType' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, K2Node_DynamicCast_AsTWTutorial_Tooltip_Manager) == 0x000018, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::K2Node_DynamicCast_AsTWTutorial_Tooltip_Manager' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, CallFunc_CheckLocks_LocksPassed) == 0x000021, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::CallFunc_CheckLocks_LocksPassed' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_Tooltip_GameMode_C_ExecuteUbergraph_BP_Tooltip_GameMode::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_Tooltip_GameMode.BP_Tooltip_GameMode_C.OnGameMode
// 0x0001 (0x0001 - 0x0000)
struct BP_Tooltip_GameMode_C_OnGameMode final
{
public:
	EGameModeType                                 GameModeType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Tooltip_GameMode_C_OnGameMode) == 0x000001, "Wrong alignment on BP_Tooltip_GameMode_C_OnGameMode");
static_assert(sizeof(BP_Tooltip_GameMode_C_OnGameMode) == 0x000001, "Wrong size on BP_Tooltip_GameMode_C_OnGameMode");
static_assert(offsetof(BP_Tooltip_GameMode_C_OnGameMode, GameModeType) == 0x000000, "Member 'BP_Tooltip_GameMode_C_OnGameMode::GameModeType' has a wrong offset!");

// Function BP_Tooltip_GameMode.BP_Tooltip_GameMode_C.CheckLocks
// 0x0006 (0x0006 - 0x0000)
struct BP_Tooltip_GameMode_C_CheckLocks final
{
public:
	bool                                          LocksPassed;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckLocks_LocksPassed;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Tooltip_GameMode_C_CheckLocks) == 0x000001, "Wrong alignment on BP_Tooltip_GameMode_C_CheckLocks");
static_assert(sizeof(BP_Tooltip_GameMode_C_CheckLocks) == 0x000006, "Wrong size on BP_Tooltip_GameMode_C_CheckLocks");
static_assert(offsetof(BP_Tooltip_GameMode_C_CheckLocks, LocksPassed) == 0x000000, "Member 'BP_Tooltip_GameMode_C_CheckLocks::LocksPassed' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_CheckLocks, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Tooltip_GameMode_C_CheckLocks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_CheckLocks, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'BP_Tooltip_GameMode_C_CheckLocks::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_CheckLocks, CallFunc_CheckLocks_LocksPassed) == 0x000003, "Member 'BP_Tooltip_GameMode_C_CheckLocks::CallFunc_CheckLocks_LocksPassed' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_CheckLocks, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_Tooltip_GameMode_C_CheckLocks::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Tooltip_GameMode_C_CheckLocks, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_Tooltip_GameMode_C_CheckLocks::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


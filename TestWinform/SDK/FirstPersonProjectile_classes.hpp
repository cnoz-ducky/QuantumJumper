#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FirstPersonProjectile

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FirstPersonProjectile.FirstPersonProjectile_C
// 0x0018 (0x0478 - 0x0460)
#pragma pack(push, 0x1)
class alignas(0x08) AFirstPersonProjectile_C : public ATimeWatchProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_BulletTrail_C*                     BPC_BulletTrail;                                   // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRewindableTrail;                                // 0x0470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_FirstPersonProjectile(int32 EntryPoint);
	void ReceiveBeginPlay();
	void BP_Initialize();
	void OnImpactEvent(const struct FHitResult& HitResult);
	void BP_UpdateCosmetics();
	void InitializeTrails();

	bool BP_IsReadyToBeDestroyed() const;
	void BP_OnSetEnabled(bool NewState) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FirstPersonProjectile_C">();
	}
	static class AFirstPersonProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFirstPersonProjectile_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AFirstPersonProjectile_C) == 0x000008, "Wrong alignment on AFirstPersonProjectile_C");
static_assert(sizeof(AFirstPersonProjectile_C) == 0x000478, "Wrong size on AFirstPersonProjectile_C");
static_assert(offsetof(AFirstPersonProjectile_C, UberGraphFrame) == 0x000460, "Member 'AFirstPersonProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFirstPersonProjectile_C, BPC_BulletTrail) == 0x000468, "Member 'AFirstPersonProjectile_C::BPC_BulletTrail' has a wrong offset!");
static_assert(offsetof(AFirstPersonProjectile_C, UseRewindableTrail) == 0x000470, "Member 'AFirstPersonProjectile_C::UseRewindableTrail' has a wrong offset!");

}


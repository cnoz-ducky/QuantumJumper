#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_Playbook

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "NGDUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WC_Playbook.WC_Playbook_C
// 0x0020 (0x0268 - 0x0248)
class UWC_Playbook_C final : public UNGDWidgetContainer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas;                                            // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RenderTarget;                                      // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicTexture;                                    // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WC_Playbook(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void EnablePlaybook(const bool& NewState);
	void Construct();
	void SetRenderTarget(const class UTextureRenderTarget2D*& TextureTarget2D);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WC_Playbook_C">();
	}
	static class UWC_Playbook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWC_Playbook_C>();
	}
};
static_assert(alignof(UWC_Playbook_C) == 0x000008, "Wrong alignment on UWC_Playbook_C");
static_assert(sizeof(UWC_Playbook_C) == 0x000268, "Wrong size on UWC_Playbook_C");
static_assert(offsetof(UWC_Playbook_C, UberGraphFrame) == 0x000248, "Member 'UWC_Playbook_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWC_Playbook_C, Canvas) == 0x000250, "Member 'UWC_Playbook_C::Canvas' has a wrong offset!");
static_assert(offsetof(UWC_Playbook_C, RenderTarget) == 0x000258, "Member 'UWC_Playbook_C::RenderTarget' has a wrong offset!");
static_assert(offsetof(UWC_Playbook_C, DynamicTexture) == 0x000260, "Member 'UWC_Playbook_C::DynamicTexture' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SelectedWeaponInfo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function SelectedWeaponInfo.SelectedWeaponInfo_C.ExecuteUbergraph_SelectedWeaponInfo
// 0x0010 (0x0010 - 0x0000)
struct SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo) == 0x000008, "Wrong alignment on SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo");
static_assert(sizeof(SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo) == 0x000010, "Wrong size on SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo");
static_assert(offsetof(SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo, EntryPoint) == 0x000000, "Member 'SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'SelectedWeaponInfo_C_ExecuteUbergraph_SelectedWeaponInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function SelectedWeaponInfo.SelectedWeaponInfo_C.ChangeTextSize
// 0x0060 (0x0060 - 0x0000)
struct SelectedWeaponInfo_C_ChangeTextSize final
{
public:
	class UTextBlock*                             Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Size;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0050)(HasGetValueTypeHash)
};
static_assert(alignof(SelectedWeaponInfo_C_ChangeTextSize) == 0x000008, "Wrong alignment on SelectedWeaponInfo_C_ChangeTextSize");
static_assert(sizeof(SelectedWeaponInfo_C_ChangeTextSize) == 0x000060, "Wrong size on SelectedWeaponInfo_C_ChangeTextSize");
static_assert(offsetof(SelectedWeaponInfo_C_ChangeTextSize, Text) == 0x000000, "Member 'SelectedWeaponInfo_C_ChangeTextSize::Text' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_ChangeTextSize, Size) == 0x000008, "Member 'SelectedWeaponInfo_C_ChangeTextSize::Size' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_ChangeTextSize, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'SelectedWeaponInfo_C_ChangeTextSize::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function SelectedWeaponInfo.SelectedWeaponInfo_C.OnRefreshOwnerData
// 0x0030 (0x0030 - 0x0000)
struct SelectedWeaponInfo_C_OnRefreshOwnerData final
{
public:
	class ATimeWatchCharacter*                    Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCharacterSKU_ReturnValue;              // 0x0010(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        CallFunc_GetWeapon_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPassiveAbility_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SelectedWeaponInfo_C_OnRefreshOwnerData) == 0x000008, "Wrong alignment on SelectedWeaponInfo_C_OnRefreshOwnerData");
static_assert(sizeof(SelectedWeaponInfo_C_OnRefreshOwnerData) == 0x000030, "Wrong size on SelectedWeaponInfo_C_OnRefreshOwnerData");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, Owner) == 0x000000, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::Owner' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_GetCharacterSKU_ReturnValue) == 0x000010, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_GetCharacterSKU_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_GetWeapon_ReturnValue) == 0x000020, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_GetSlotIndex_ReturnValue) == 0x000028, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_GetSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_HasPassiveAbility_ReturnValue) == 0x00002D, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_HasPassiveAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnRefreshOwnerData, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'SelectedWeaponInfo_C_OnRefreshOwnerData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function SelectedWeaponInfo.SelectedWeaponInfo_C.OnWeaponSet
// 0x0010 (0x0010 - 0x0000)
struct SelectedWeaponInfo_C_OnWeaponSet final
{
public:
	class ATemporalWeapon*                        CallFunc_GetWeapon_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SelectedWeaponInfo_C_OnWeaponSet) == 0x000008, "Wrong alignment on SelectedWeaponInfo_C_OnWeaponSet");
static_assert(sizeof(SelectedWeaponInfo_C_OnWeaponSet) == 0x000010, "Wrong size on SelectedWeaponInfo_C_OnWeaponSet");
static_assert(offsetof(SelectedWeaponInfo_C_OnWeaponSet, CallFunc_GetWeapon_ReturnValue) == 0x000000, "Member 'SelectedWeaponInfo_C_OnWeaponSet::CallFunc_GetWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnWeaponSet, CallFunc_GetSlotIndex_ReturnValue) == 0x000008, "Member 'SelectedWeaponInfo_C_OnWeaponSet::CallFunc_GetSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SelectedWeaponInfo_C_OnWeaponSet, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'SelectedWeaponInfo_C_OnWeaponSet::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SelectedWeaponInfo.SelectedWeaponInfo_C.SetIconPrimaryWeaponSwitchVisibility
// 0x0001 (0x0001 - 0x0000)
struct SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility) == 0x000001, "Wrong alignment on SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility");
static_assert(sizeof(SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility) == 0x000001, "Wrong size on SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility");
static_assert(offsetof(SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility, Value) == 0x000000, "Member 'SelectedWeaponInfo_C_SetIconPrimaryWeaponSwitchVisibility::Value' has a wrong offset!");

}


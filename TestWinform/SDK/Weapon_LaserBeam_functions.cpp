#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_LaserBeam

#include "Basic.hpp"

#include "Weapon_LaserBeam_classes.hpp"
#include "Weapon_LaserBeam_parameters.hpp"


namespace SDK
{

// Function Weapon_LaserBeam.Weapon_LaserBeam_C.ExecuteUbergraph_Weapon_LaserBeam
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_LaserBeam_C::ExecuteUbergraph_Weapon_LaserBeam(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "ExecuteUbergraph_Weapon_LaserBeam");

	Params::Weapon_LaserBeam_C_ExecuteUbergraph_Weapon_LaserBeam Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFluxCapacitorStates                    OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFluxCapacitorStates                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_LaserBeam_C::CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "CustomEvent");

	Params::Weapon_LaserBeam_C_CustomEvent Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.OnSoundEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ELaserSoundEventType                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTimeGoingForward                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWeapon_LaserBeam_C::OnSoundEvent(ELaserSoundEventType Type, bool IsTimeGoingForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "OnSoundEvent");

	Params::Weapon_LaserBeam_C_OnSoundEvent Parms{};

	Parms.Type = Type;
	Parms.IsTimeGoingForward = IsTimeGoingForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.OnImpactStateChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWeapon_LaserBeam_C::OnImpactStateChange(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "OnImpactStateChange");

	Params::Weapon_LaserBeam_C_OnImpactStateChange Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWeapon_LaserBeam_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFirstPerson                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWeapon_LaserBeam_C::OnStateChanged(bool bIsFirstPerson, bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "OnStateChanged");

	Params::Weapon_LaserBeam_C_OnStateChanged Parms{};

	Parms.bIsFirstPerson = bIsFirstPerson;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.UpdateVFXs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFirstPerson                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWeapon_LaserBeam_C::UpdateVFXs(bool IsFirstPerson, bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "UpdateVFXs");

	Params::Weapon_LaserBeam_C_UpdateVFXs Parms{};

	Parms.IsFirstPerson = IsFirstPerson;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weapon_LaserBeam.Weapon_LaserBeam_C.FakeTimeDilationSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFluxCapacitorStates                    GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeapon_LaserBeam_C::FakeTimeDilationSound(EFluxCapacitorStates GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weapon_LaserBeam_C", "FakeTimeDilationSound");

	Params::Weapon_LaserBeam_C_FakeTimeDilationSound Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}

}


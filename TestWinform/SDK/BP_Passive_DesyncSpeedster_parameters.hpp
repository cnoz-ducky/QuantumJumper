#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Passive_DesyncSpeedster

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.ExecuteUbergraph_BP_Passive_DesyncSpeedster
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem_2;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             K2Node_Event_AbilityDataHandle_1;                  // 0x0010(0x0020)(ConstParm)
	bool                                          K2Node_Event_bShouldTriggerLogic_1;                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem_1;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             K2Node_Event_AbilityDataHandle;                    // 0x0040(0x0020)(ConstParm)
	bool                                          K2Node_Event_bShouldTriggerLogic;                  // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTWAbilityExecutionData                CallFunc_GetAbilityExecutionData_ReturnValue;      // 0x0068(0x0028)(NoDestructor, ContainsInstancedReference)
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem;                    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWAbilitiesComponent*                  K2Node_Event_Caster_AbilityComp;                   // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchCharacter*                    K2Node_CustomEvent_Character;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewHealth;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster) == 0x000008, "Wrong alignment on BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster) == 0x0000B0, "Wrong size on BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, EntryPoint) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_InTWAbilitySystem_2) == 0x000008, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_InTWAbilitySystem_2' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_AbilityDataHandle_1) == 0x000010, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_AbilityDataHandle_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_bShouldTriggerLogic_1) == 0x000030, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_bShouldTriggerLogic_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_InTWAbilitySystem_1) == 0x000038, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_InTWAbilitySystem_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_AbilityDataHandle) == 0x000040, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_bShouldTriggerLogic) == 0x000060, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_bShouldTriggerLogic' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, CallFunc_GetAbilityExecutionData_ReturnValue) == 0x000068, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::CallFunc_GetAbilityExecutionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_InTWAbilitySystem) == 0x000090, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_Event_Caster_AbilityComp) == 0x000098, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_Event_Caster_AbilityComp' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_CustomEvent_Character) == 0x0000A0, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster, K2Node_CustomEvent_NewHealth) == 0x0000A8, "Member 'BP_Passive_DesyncSpeedster_C_ExecuteUbergraph_BP_Passive_DesyncSpeedster::K2Node_CustomEvent_NewHealth' has a wrong offset!");

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.BP_Update
// 0x0004 (0x0004 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_BP_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_BP_Update) == 0x000004, "Wrong alignment on BP_Passive_DesyncSpeedster_C_BP_Update");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_BP_Update) == 0x000004, "Wrong size on BP_Passive_DesyncSpeedster_C_BP_Update");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_Update, DeltaSeconds) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_BP_Update::DeltaSeconds' has a wrong offset!");

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.OnHealthRestored
// 0x0010 (0x0010 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_OnHealthRestored final
{
public:
	class ATimeWatchCharacter*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewHealth;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_OnHealthRestored) == 0x000008, "Wrong alignment on BP_Passive_DesyncSpeedster_C_OnHealthRestored");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_OnHealthRestored) == 0x000010, "Wrong size on BP_Passive_DesyncSpeedster_C_OnHealthRestored");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_OnHealthRestored, Character) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_OnHealthRestored::Character' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_OnHealthRestored, NewHealth) == 0x000008, "Member 'BP_Passive_DesyncSpeedster_C_OnHealthRestored::NewHealth' has a wrong offset!");

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.BP_OnPreActivated
// 0x0010 (0x0010 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_BP_OnPreActivated final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWAbilitiesComponent*                  Caster_AbilityComp;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_BP_OnPreActivated) == 0x000008, "Wrong alignment on BP_Passive_DesyncSpeedster_C_BP_OnPreActivated");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_BP_OnPreActivated) == 0x000010, "Wrong size on BP_Passive_DesyncSpeedster_C_BP_OnPreActivated");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnPreActivated, InTWAbilitySystem) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnPreActivated::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnPreActivated, Caster_AbilityComp) == 0x000008, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnPreActivated::Caster_AbilityComp' has a wrong offset!");

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.BP_OnReExecuted
// 0x0030 (0x0030 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_BP_OnReExecuted final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             AbilityDataHandle;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bShouldTriggerLogic;                               // 0x0028(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_BP_OnReExecuted) == 0x000008, "Wrong alignment on BP_Passive_DesyncSpeedster_C_BP_OnReExecuted");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_BP_OnReExecuted) == 0x000030, "Wrong size on BP_Passive_DesyncSpeedster_C_BP_OnReExecuted");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnReExecuted, InTWAbilitySystem) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnReExecuted::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnReExecuted, AbilityDataHandle) == 0x000008, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnReExecuted::AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnReExecuted, bShouldTriggerLogic) == 0x000028, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnReExecuted::bShouldTriggerLogic' has a wrong offset!");

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.BP_OnActivated
// 0x0030 (0x0030 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_BP_OnActivated final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             AbilityDataHandle;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bShouldTriggerLogic;                               // 0x0028(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_BP_OnActivated) == 0x000008, "Wrong alignment on BP_Passive_DesyncSpeedster_C_BP_OnActivated");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_BP_OnActivated) == 0x000030, "Wrong size on BP_Passive_DesyncSpeedster_C_BP_OnActivated");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnActivated, InTWAbilitySystem) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnActivated::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnActivated, AbilityDataHandle) == 0x000008, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnActivated::AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_BP_OnActivated, bShouldTriggerLogic) == 0x000028, "Member 'BP_Passive_DesyncSpeedster_C_BP_OnActivated::bShouldTriggerLogic' has a wrong offset!");

// Function BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C.MakeAbilityCustomDataHandle
// 0x0078 (0x0078 - 0x0000)
struct BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle final
{
public:
	class UTWAbilitiesComponent*                  Caster_AbilityComp;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm)
	class ATimeWatchCharacter*                    CallFunc_GetOwningCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FTWAbilityCustomDataHandle             CallFunc_AbilityCustomDataFromVectors_ReturnValue; // 0x0058(0x0020)()
};
static_assert(alignof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle) == 0x000008, "Wrong alignment on BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle");
static_assert(sizeof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle) == 0x000078, "Wrong size on BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, Caster_AbilityComp) == 0x000000, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::Caster_AbilityComp' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, ReturnValue) == 0x000008, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, CallFunc_GetOwningCharacter_ReturnValue) == 0x000028, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00003C, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle, CallFunc_AbilityCustomDataFromVectors_ReturnValue) == 0x000058, "Member 'BP_Passive_DesyncSpeedster_C_MakeAbilityCustomDataHandle::CallFunc_AbilityCustomDataFromVectors_ReturnValue' has a wrong offset!");

}


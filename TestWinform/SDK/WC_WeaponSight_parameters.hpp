#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_WeaponSight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WC_WeaponSight.WC_WeaponSight_C.ExecuteUbergraph_WC_WeaponSight
// 0x00C8 (0x00C8 - 0x0000)
struct WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    K2Node_Event_TWChar_1;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFirearm*                               K2Node_Event_Firearm_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetItemIdentifier_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    K2Node_Event_TWChar;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFirearm*                               K2Node_Event_Firearm;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ResetMesh;                            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    K2Node_Event_TWChar_2;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFirearm*                               K2Node_Event_Firearm_2;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress_1;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeByProgressAnimation_TimeInAnimation; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetItemIdentifier_ReturnValue_1;          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeByProgressAnimation_TimeInAnimation_1; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFirearm*                               K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetItemIdentifier_ReturnValue_2;          // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_2;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight) == 0x000008, "Wrong alignment on WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight");
static_assert(sizeof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight) == 0x0000C8, "Wrong size on WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, EntryPoint) == 0x000000, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_TWChar_1) == 0x000008, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_TWChar_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_Firearm_1) == 0x000010, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_Firearm_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_Progress) == 0x000018, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_GetItemIdentifier_ReturnValue) == 0x000028, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_GetItemIdentifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_SwitchString_CmpSuccess) == 0x000038, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_TWChar) == 0x000040, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_TWChar' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_Firearm) == 0x000048, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_Firearm' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_ResetMesh) == 0x000050, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_ResetMesh' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_TWChar_2) == 0x000058, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_TWChar_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_Firearm_2) == 0x000060, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_Firearm_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Event_Progress_1) == 0x000068, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Event_Progress_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00006C, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_GetTimeByProgressAnimation_TimeInAnimation) == 0x000070, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_GetTimeByProgressAnimation_TimeInAnimation' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_PlayAnimation_ReturnValue_1) == 0x000078, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_GetItemIdentifier_ReturnValue_1) == 0x000080, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_GetItemIdentifier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_SwitchString_CmpSuccess_1) == 0x000090, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_GetTimeByProgressAnimation_TimeInAnimation_1) == 0x000094, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_GetTimeByProgressAnimation_TimeInAnimation_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_PlayAnimation_ReturnValue_2) == 0x000098, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A0, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, Temp_bool_Variable) == 0x0000A1, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_Select_Default) == 0x0000A8, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, CallFunc_GetItemIdentifier_ReturnValue_2) == 0x0000B0, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::CallFunc_GetItemIdentifier_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight, K2Node_SwitchString_CmpSuccess_2) == 0x0000C0, "Member 'WC_WeaponSight_C_ExecuteUbergraph_WC_WeaponSight::K2Node_SwitchString_CmpSuccess_2' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.BP_ResetWidget
// 0x0018 (0x0018 - 0x0000)
struct WC_WeaponSight_C_BP_ResetWidget final
{
public:
	class ATimeWatchCharacter*                    TWChar;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFirearm*                               Firearm;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetMesh;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponSight_C_BP_ResetWidget) == 0x000008, "Wrong alignment on WC_WeaponSight_C_BP_ResetWidget");
static_assert(sizeof(WC_WeaponSight_C_BP_ResetWidget) == 0x000018, "Wrong size on WC_WeaponSight_C_BP_ResetWidget");
static_assert(offsetof(WC_WeaponSight_C_BP_ResetWidget, TWChar) == 0x000000, "Member 'WC_WeaponSight_C_BP_ResetWidget::TWChar' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_BP_ResetWidget, Firearm) == 0x000008, "Member 'WC_WeaponSight_C_BP_ResetWidget::Firearm' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_BP_ResetWidget, ResetMesh) == 0x000010, "Member 'WC_WeaponSight_C_BP_ResetWidget::ResetMesh' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.BP_PlayHideSightAnim
// 0x0018 (0x0018 - 0x0000)
struct WC_WeaponSight_C_BP_PlayHideSightAnim final
{
public:
	class ATimeWatchCharacter*                    TWChar;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFirearm*                               Firearm;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponSight_C_BP_PlayHideSightAnim) == 0x000008, "Wrong alignment on WC_WeaponSight_C_BP_PlayHideSightAnim");
static_assert(sizeof(WC_WeaponSight_C_BP_PlayHideSightAnim) == 0x000018, "Wrong size on WC_WeaponSight_C_BP_PlayHideSightAnim");
static_assert(offsetof(WC_WeaponSight_C_BP_PlayHideSightAnim, TWChar) == 0x000000, "Member 'WC_WeaponSight_C_BP_PlayHideSightAnim::TWChar' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_BP_PlayHideSightAnim, Firearm) == 0x000008, "Member 'WC_WeaponSight_C_BP_PlayHideSightAnim::Firearm' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_BP_PlayHideSightAnim, Progress) == 0x000010, "Member 'WC_WeaponSight_C_BP_PlayHideSightAnim::Progress' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.BP_PlaySightAnim
// 0x0018 (0x0018 - 0x0000)
struct WC_WeaponSight_C_BP_PlaySightAnim final
{
public:
	class ATimeWatchCharacter*                    TWChar;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFirearm*                               Firearm;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponSight_C_BP_PlaySightAnim) == 0x000008, "Wrong alignment on WC_WeaponSight_C_BP_PlaySightAnim");
static_assert(sizeof(WC_WeaponSight_C_BP_PlaySightAnim) == 0x000018, "Wrong size on WC_WeaponSight_C_BP_PlaySightAnim");
static_assert(offsetof(WC_WeaponSight_C_BP_PlaySightAnim, TWChar) == 0x000000, "Member 'WC_WeaponSight_C_BP_PlaySightAnim::TWChar' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_BP_PlaySightAnim, Firearm) == 0x000008, "Member 'WC_WeaponSight_C_BP_PlaySightAnim::Firearm' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_BP_PlaySightAnim, Progress) == 0x000010, "Member 'WC_WeaponSight_C_BP_PlaySightAnim::Progress' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.SetMeshVisibility
// 0x0030 (0x0030 - 0x0000)
struct WC_WeaponSight_C_SetMeshVisibility final
{
public:
	class ATimeWatchCharacter*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEquipment*                             Weapon;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visibility_0;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetMesh1P_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMeshVisibility_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetMeshTP_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponSight_C_SetMeshVisibility) == 0x000008, "Wrong alignment on WC_WeaponSight_C_SetMeshVisibility");
static_assert(sizeof(WC_WeaponSight_C_SetMeshVisibility) == 0x000030, "Wrong size on WC_WeaponSight_C_SetMeshVisibility");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, Character) == 0x000000, "Member 'WC_WeaponSight_C_SetMeshVisibility::Character' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, Weapon) == 0x000008, "Member 'WC_WeaponSight_C_SetMeshVisibility::Weapon' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, Visibility_0) == 0x000010, "Member 'WC_WeaponSight_C_SetMeshVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, CallFunc_GetMesh1P_ReturnValue) == 0x000018, "Member 'WC_WeaponSight_C_SetMeshVisibility::CallFunc_GetMesh1P_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, CallFunc_GetMeshVisibility_ReturnValue) == 0x000020, "Member 'WC_WeaponSight_C_SetMeshVisibility::CallFunc_GetMeshVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000021, "Member 'WC_WeaponSight_C_SetMeshVisibility::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetMeshVisibility, CallFunc_GetMeshTP_ReturnValue) == 0x000028, "Member 'WC_WeaponSight_C_SetMeshVisibility::CallFunc_GetMeshTP_ReturnValue' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.GetAnimationTimeByState
// 0x0028 (0x0028 - 0x0000)
struct WC_WeaponSight_C_GetAnimationTimeByState final
{
public:
	float                                         DefaultValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponSight_C_GetAnimationTimeByState) == 0x000008, "Wrong alignment on WC_WeaponSight_C_GetAnimationTimeByState");
static_assert(sizeof(WC_WeaponSight_C_GetAnimationTimeByState) == 0x000028, "Wrong size on WC_WeaponSight_C_GetAnimationTimeByState");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, DefaultValue) == 0x000000, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::DefaultValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, ReturnValue) == 0x000004, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000010, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeByState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'WC_WeaponSight_C_GetAnimationTimeByState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.GetAnimationTimeDilation
// 0x0020 (0x0020 - 0x0000)
struct WC_WeaponSight_C_GetAnimationTimeDilation final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponSight_C_GetAnimationTimeDilation) == 0x000008, "Wrong alignment on WC_WeaponSight_C_GetAnimationTimeDilation");
static_assert(sizeof(WC_WeaponSight_C_GetAnimationTimeDilation) == 0x000020, "Wrong size on WC_WeaponSight_C_GetAnimationTimeDilation");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeDilation, ReturnValue) == 0x000000, "Member 'WC_WeaponSight_C_GetAnimationTimeDilation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeDilation, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000004, "Member 'WC_WeaponSight_C_GetAnimationTimeDilation::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeDilation, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WC_WeaponSight_C_GetAnimationTimeDilation::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeDilation, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000010, "Member 'WC_WeaponSight_C_GetAnimationTimeDilation::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeDilation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WC_WeaponSight_C_GetAnimationTimeDilation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetAnimationTimeDilation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WC_WeaponSight_C_GetAnimationTimeDilation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.GetTimeByProgressAnimation
// 0x0020 (0x0020 - 0x0000)
struct WC_WeaponSight_C_GetTimeByProgressAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeInAnimation;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponSight_C_GetTimeByProgressAnimation) == 0x000008, "Wrong alignment on WC_WeaponSight_C_GetTimeByProgressAnimation");
static_assert(sizeof(WC_WeaponSight_C_GetTimeByProgressAnimation) == 0x000020, "Wrong size on WC_WeaponSight_C_GetTimeByProgressAnimation");
static_assert(offsetof(WC_WeaponSight_C_GetTimeByProgressAnimation, Animation) == 0x000000, "Member 'WC_WeaponSight_C_GetTimeByProgressAnimation::Animation' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetTimeByProgressAnimation, Progress) == 0x000008, "Member 'WC_WeaponSight_C_GetTimeByProgressAnimation::Progress' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetTimeByProgressAnimation, TimeInAnimation) == 0x00000C, "Member 'WC_WeaponSight_C_GetTimeByProgressAnimation::TimeInAnimation' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetTimeByProgressAnimation, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'WC_WeaponSight_C_GetTimeByProgressAnimation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetTimeByProgressAnimation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WC_WeaponSight_C_GetTimeByProgressAnimation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetTimeByProgressAnimation, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'WC_WeaponSight_C_GetTimeByProgressAnimation::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.GetMeshVisibility
// 0x0030 (0x0030 - 0x0000)
struct WC_WeaponSight_C_GetMeshVisibility final
{
public:
	class ATimeWatchCharacter*                    Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEquipment*                             Weapon;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetMesh1P_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetMeshTP_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponSight_C_GetMeshVisibility) == 0x000008, "Wrong alignment on WC_WeaponSight_C_GetMeshVisibility");
static_assert(sizeof(WC_WeaponSight_C_GetMeshVisibility) == 0x000030, "Wrong size on WC_WeaponSight_C_GetMeshVisibility");
static_assert(offsetof(WC_WeaponSight_C_GetMeshVisibility, Character) == 0x000000, "Member 'WC_WeaponSight_C_GetMeshVisibility::Character' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetMeshVisibility, Weapon) == 0x000008, "Member 'WC_WeaponSight_C_GetMeshVisibility::Weapon' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetMeshVisibility, ReturnValue) == 0x000010, "Member 'WC_WeaponSight_C_GetMeshVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetMeshVisibility, CallFunc_GetMesh1P_ReturnValue) == 0x000018, "Member 'WC_WeaponSight_C_GetMeshVisibility::CallFunc_GetMesh1P_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetMeshVisibility, CallFunc_GetMeshTP_ReturnValue) == 0x000020, "Member 'WC_WeaponSight_C_GetMeshVisibility::CallFunc_GetMeshTP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_GetMeshVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'WC_WeaponSight_C_GetMeshVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.SetSightInScopePosition
// 0x00C0 (0x00C0 - 0x0000)
struct WC_WeaponSight_C_SetSightInScopePosition final
{
public:
	class AFirearm*                               Firearm;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchCharacter*                    Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               Center;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FAnchors                               TopLeft;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFluxPlayerController*                  K2Node_DynamicCast_AsFlux_Player_Controller;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetScopeSocketTransform_ReturnValue;      // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponSight_C_SetSightInScopePosition) == 0x000010, "Wrong alignment on WC_WeaponSight_C_SetSightInScopePosition");
static_assert(sizeof(WC_WeaponSight_C_SetSightInScopePosition) == 0x0000C0, "Wrong size on WC_WeaponSight_C_SetSightInScopePosition");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, Firearm) == 0x000000, "Member 'WC_WeaponSight_C_SetSightInScopePosition::Firearm' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, Player) == 0x000008, "Member 'WC_WeaponSight_C_SetSightInScopePosition::Player' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, Center) == 0x000010, "Member 'WC_WeaponSight_C_SetSightInScopePosition::Center' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, TopLeft) == 0x000020, "Member 'WC_WeaponSight_C_SetSightInScopePosition::TopLeft' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, K2Node_DynamicCast_AsFlux_Player_Controller) == 0x000040, "Member 'WC_WeaponSight_C_SetSightInScopePosition::K2Node_DynamicCast_AsFlux_Player_Controller' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WC_WeaponSight_C_SetSightInScopePosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_GetScopeSocketTransform_ReturnValue) == 0x000050, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_GetScopeSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_BreakTransform_Location) == 0x000084, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_BreakTransform_Scale) == 0x00009C, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x0000AC, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x0000B4, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightInScopePosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000B8, "Member 'WC_WeaponSight_C_SetSightInScopePosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WC_WeaponSight.WC_WeaponSight_C.SetSightPositionByProgress
// 0x0060 (0x0060 - 0x0000)
struct WC_WeaponSight_C_SetSightPositionByProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Showing;                                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    Player;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocalVar_0;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinProgressToTarget;                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CenterScreen;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue_1;      // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponSight_C_SetSightPositionByProgress) == 0x000008, "Wrong alignment on WC_WeaponSight_C_SetSightPositionByProgress");
static_assert(sizeof(WC_WeaponSight_C_SetSightPositionByProgress) == 0x000060, "Wrong size on WC_WeaponSight_C_SetSightPositionByProgress");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, Progress) == 0x000000, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::Progress' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, Showing) == 0x000004, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::Showing' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, Player) == 0x000008, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::Player' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, NewLocalVar_0) == 0x000010, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, MinProgressToTarget) == 0x00001C, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::MinProgressToTarget' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CenterScreen) == 0x000020, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CenterScreen' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000028, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000030, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CallFunc_Conv_Vector2DToVector_ReturnValue_1) == 0x00003C, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CallFunc_Conv_Vector2DToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CallFunc_VLerp_ReturnValue) == 0x00004C, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponSight_C_SetSightPositionByProgress, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000058, "Member 'WC_WeaponSight_C_SetSightPositionByProgress::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");

}


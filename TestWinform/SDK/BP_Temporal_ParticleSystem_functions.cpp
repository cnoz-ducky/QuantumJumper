#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Temporal_ParticleSystem

#include "Basic.hpp"

#include "BP_Temporal_ParticleSystem_classes.hpp"
#include "BP_Temporal_ParticleSystem_parameters.hpp"


namespace SDK
{

// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.ExecuteUbergraph_BP_Temporal_ParticleSystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Temporal_ParticleSystem_C::ExecuteUbergraph_BP_Temporal_ParticleSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "ExecuteUbergraph_BP_Temporal_ParticleSystem");

	Params::BP_Temporal_ParticleSystem_C_ExecuteUbergraph_BP_Temporal_ParticleSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.SetOwnerSee
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::SetOwnerSee(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "SetOwnerSee");

	Params::BP_Temporal_ParticleSystem_C_SetOwnerSee Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.SetOnlyOwnerSee
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::SetOnlyOwnerSee(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "SetOnlyOwnerSee");

	Params::BP_Temporal_ParticleSystem_C_SetOnlyOwnerSee Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.BP_SetEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::BP_SetEnabled(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "BP_SetEnabled");

	Params::BP_Temporal_ParticleSystem_C_BP_SetEnabled Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.LogDebug
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Header                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_Temporal_ParticleSystem_C::LogDebug(const class FString& Header)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "LogDebug");

	Params::BP_Temporal_ParticleSystem_C_LogDebug Parms{};

	Parms.Header = std::move(Header);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.ParticleTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   LifeCylcle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Temporal_ParticleSystem_C::ParticleTick(float LifeCylcle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "ParticleTick");

	Params::BP_Temporal_ParticleSystem_C_ParticleTick Parms{};

	Parms.LifeCylcle = LifeCylcle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.OnParticleEnabled
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::OnParticleEnabled(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "OnParticleEnabled");

	Params::BP_Temporal_ParticleSystem_C_OnParticleEnabled Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Temporal_ParticleSystem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.SetOnlyOwnerSeeConfig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_State                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::SetOnlyOwnerSeeConfig(bool New_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "SetOnlyOwnerSeeConfig");

	Params::BP_Temporal_ParticleSystem_C_SetOnlyOwnerSeeConfig Parms{};

	Parms.New_State = New_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.SetOwnerSeeConfig
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_State                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::SetOwnerSeeConfig(bool New_State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "SetOwnerSeeConfig");

	Params::BP_Temporal_ParticleSystem_C_SetOwnerSeeConfig Parms{};

	Parms.New_State = New_State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.SetupEmitters
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Temporal_ParticleSystem_C::SetupEmitters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "SetupEmitters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Temporal_ParticleSystem.BP_Temporal_ParticleSystem_C.Recalculate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_Temporal_Emitter_C*           Emitter_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTWStaticMeshComponent*           Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    is_First_Person                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Temporal_ParticleSystem_C::Recalculate(class UBP_Temporal_Emitter_C* Emitter_0, class UTWStaticMeshComponent* Mesh, bool is_First_Person)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Temporal_ParticleSystem_C", "Recalculate");

	Params::BP_Temporal_ParticleSystem_C_Recalculate Parms{};

	Parms.Emitter_0 = Emitter_0;
	Parms.Mesh = Mesh;
	Parms.is_First_Person = is_First_Person;

	UObject::ProcessEvent(Func, &Parms);
}

}


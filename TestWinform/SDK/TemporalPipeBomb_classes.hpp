#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemporalPipeBomb

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "UnrealProject_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TemporalPipeBomb.TemporalPipeBomb_C
// 0x0158 (0x06D0 - 0x0578)
class ATemporalPipeBomb_C : public ATWPhysicalExplodingProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0578(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   BP_VFX_Granade_Explosion;                          // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNGDAkComponent*                        NGDAk_Grenade;                                     // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFuseOn;                                         // 0x0590(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_591[0x7];                                      // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               GrenadeMaterialInstance;                           // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNGDSoundConfig                        Sound_Bounce;                                      // 0x05A0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FNGDSoundConfig                        Sound_Explosion;                                   // 0x05F8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MinTrailDistance;                                  // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           TrailSplineMesh;                                   // 0x0658(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference)
	class USplineComponent*                       NewVar_0;                                          // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TrailMaxScale;                                     // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNGDSoundConfig                        Sound_GrenadeFlying;                               // 0x0678(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_TemporalPipeBomb(int32 EntryPoint);
	void OnCreated();
	void OnRecycled();
	void OnExploded();
	void OnGrenadeBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void ChangeFuseAnim(bool NewState);
	void ReceiveTick(float DeltaSeconds);
	void BP_Initialize();
	void BP_UpdateCosmetics();
	void CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState);
	void FakeTimeDilationSound(EFluxCapacitorStates GameState);
	void GrenadeBounceSound(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void StopGrenadeFlyingSound();

	float GetCosmeticExplosionRequiredTime() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TemporalPipeBomb_C">();
	}
	static class ATemporalPipeBomb_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATemporalPipeBomb_C>();
	}
};
static_assert(alignof(ATemporalPipeBomb_C) == 0x000008, "Wrong alignment on ATemporalPipeBomb_C");
static_assert(sizeof(ATemporalPipeBomb_C) == 0x0006D0, "Wrong size on ATemporalPipeBomb_C");
static_assert(offsetof(ATemporalPipeBomb_C, UberGraphFrame) == 0x000578, "Member 'ATemporalPipeBomb_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, BP_VFX_Granade_Explosion) == 0x000580, "Member 'ATemporalPipeBomb_C::BP_VFX_Granade_Explosion' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, NGDAk_Grenade) == 0x000588, "Member 'ATemporalPipeBomb_C::NGDAk_Grenade' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, bIsFuseOn) == 0x000590, "Member 'ATemporalPipeBomb_C::bIsFuseOn' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, GrenadeMaterialInstance) == 0x000598, "Member 'ATemporalPipeBomb_C::GrenadeMaterialInstance' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, Sound_Bounce) == 0x0005A0, "Member 'ATemporalPipeBomb_C::Sound_Bounce' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, Sound_Explosion) == 0x0005F8, "Member 'ATemporalPipeBomb_C::Sound_Explosion' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, MinTrailDistance) == 0x000650, "Member 'ATemporalPipeBomb_C::MinTrailDistance' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, TrailSplineMesh) == 0x000658, "Member 'ATemporalPipeBomb_C::TrailSplineMesh' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, NewVar_0) == 0x000668, "Member 'ATemporalPipeBomb_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, TrailMaxScale) == 0x000670, "Member 'ATemporalPipeBomb_C::TrailMaxScale' has a wrong offset!");
static_assert(offsetof(ATemporalPipeBomb_C, Sound_GrenadeFlying) == 0x000678, "Member 'ATemporalPipeBomb_C::Sound_GrenadeFlying' has a wrong offset!");

}


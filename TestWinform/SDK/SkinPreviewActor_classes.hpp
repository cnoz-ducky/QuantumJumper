#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkinPreviewActor

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SkinPreviewActor.SkinPreviewActor_C
// 0x0050 (0x03C0 - 0x0370)
class ASkinPreviewActor_C final : public ATWSkinPreviewActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               PS_UnlockVFX;                                      // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTWSkeletalMeshComponent*               DebugArmsSK;                                       // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VanishAnim_Visibility_13CBAC894C1AE942F10409BBDEABA55E; // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VanishAnim__Direction_13CBAC894C1AE942F10409BBDEABA55E; // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VanishAnim;                                        // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           MediaPlayerVideo;                                  // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialCall;                                      // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSwapMeshAfterAnim;                                // 0x03A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDebugShowArms;                                    // 0x03AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AB[0x5];                                      // 0x03AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NameParticles;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MIDCharacterName;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SkinPreviewActor(int32 EntryPoint);
	void BP_SetupCharacterOutfit(const class UTWStylesDataAsset* InStyleDataAsset);
	void InpAxisKeyEvt_MouseX_K2Node_InputAxisKeyEvent_0(float AxisValue);
	void DebugSetDynMaterial(int32 matIndex, TSoftObjectPtr<class UMaterialInterface> softMat);
	void DebugShowArms();
	void BP_CosmeticStartVanishAnimation();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnLoaded_41AE05AD4012BDB77CA84CAEFD00D4C1(class UObject* Loaded);
	void VanishAnim__UpdateFunc();
	void VanishAnim__FinishedFunc();
	void UpdateBackground();
	void PlayUnlockVFX();
	void PlaySkeletalMeshAnimation(class UAnimInstance* AnimInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkinPreviewActor_C">();
	}
	static class ASkinPreviewActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASkinPreviewActor_C>();
	}
};
static_assert(alignof(ASkinPreviewActor_C) == 0x000008, "Wrong alignment on ASkinPreviewActor_C");
static_assert(sizeof(ASkinPreviewActor_C) == 0x0003C0, "Wrong size on ASkinPreviewActor_C");
static_assert(offsetof(ASkinPreviewActor_C, UberGraphFrame) == 0x000370, "Member 'ASkinPreviewActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, PS_UnlockVFX) == 0x000378, "Member 'ASkinPreviewActor_C::PS_UnlockVFX' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, SkeletalMesh) == 0x000380, "Member 'ASkinPreviewActor_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, DebugArmsSK) == 0x000388, "Member 'ASkinPreviewActor_C::DebugArmsSK' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, VanishAnim_Visibility_13CBAC894C1AE942F10409BBDEABA55E) == 0x000390, "Member 'ASkinPreviewActor_C::VanishAnim_Visibility_13CBAC894C1AE942F10409BBDEABA55E' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, VanishAnim__Direction_13CBAC894C1AE942F10409BBDEABA55E) == 0x000394, "Member 'ASkinPreviewActor_C::VanishAnim__Direction_13CBAC894C1AE942F10409BBDEABA55E' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, VanishAnim) == 0x000398, "Member 'ASkinPreviewActor_C::VanishAnim' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, MediaPlayerVideo) == 0x0003A0, "Member 'ASkinPreviewActor_C::MediaPlayerVideo' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, bInitialCall) == 0x0003A8, "Member 'ASkinPreviewActor_C::bInitialCall' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, bSwapMeshAfterAnim) == 0x0003A9, "Member 'ASkinPreviewActor_C::bSwapMeshAfterAnim' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, bDebugShowArms) == 0x0003AA, "Member 'ASkinPreviewActor_C::bDebugShowArms' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, NameParticles) == 0x0003B0, "Member 'ASkinPreviewActor_C::NameParticles' has a wrong offset!");
static_assert(offsetof(ASkinPreviewActor_C, MIDCharacterName) == 0x0003B8, "Member 'ASkinPreviewActor_C::MIDCharacterName' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponSelectionSlot

#include "Basic.hpp"

#include "WeaponSelectionSlot_classes.hpp"
#include "WeaponSelectionSlot_parameters.hpp"


namespace SDK
{

// Function WeaponSelectionSlot.WeaponSelectionSlot_C.ExecuteUbergraph_WeaponSelectionSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelectionSlot_C::ExecuteUbergraph_WeaponSelectionSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelectionSlot_C", "ExecuteUbergraph_WeaponSelectionSlot");

	Params::WeaponSelectionSlot_C_ExecuteUbergraph_WeaponSelectionSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelectionSlot.WeaponSelectionSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWeaponSelectionSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelectionSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WeaponSelectionSlot.WeaponSelectionSlot_C.OnStateChanged_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFluxCapacitorStates                    OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFluxCapacitorStates                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelectionSlot_C::OnStateChanged_Event(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelectionSlot_C", "OnStateChanged_Event");

	Params::WeaponSelectionSlot_C_OnStateChanged_Event Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelectionSlot.WeaponSelectionSlot_C.BP_SetDesiredStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsDesiredWeapon                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWeaponSelectionSlot_C::BP_SetDesiredStatus(bool bIsDesiredWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelectionSlot_C", "BP_SetDesiredStatus");

	Params::WeaponSelectionSlot_C_BP_SetDesiredStatus Parms{};

	Parms.bIsDesiredWeapon = bIsDesiredWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WeaponSelectionSlot.WeaponSelectionSlot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWeaponSelectionSlot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponSelectionSlot_C", "Tick");

	Params::WeaponSelectionSlot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Passive_DesyncSpeedster

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Passive_DesyncSpeedster.BP_Passive_DesyncSpeedster_C
// 0x0030 (0x00A0 - 0x0070)
class UBP_Passive_DesyncSpeedster_C final : public UTWAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         MaxStandSpeed;                                     // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFastStandSpeed;                                 // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFastCrouchSpeed;                                // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxCrouchSpeed;                                    // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSlideSpeed;                                     // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStandAcceleration;                              // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxCrouchAcceleration;                             // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHorizontalSpeed;                                // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSlideAcceleration;                              // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Passive_DesyncSpeedster(int32 EntryPoint);
	void BP_Update(float DeltaSeconds);
	void OnHealthRestored(class ATimeWatchCharacter* Character, float NewHealth);
	void BP_OnPreActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, class UTWAbilitiesComponent* Caster_AbilityComp);
	void BP_OnReExecuted(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic);
	void BP_OnActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic);
	struct FTWAbilityCustomDataHandle MakeAbilityCustomDataHandle(class UTWAbilitiesComponent* Caster_AbilityComp);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Passive_DesyncSpeedster_C">();
	}
	static class UBP_Passive_DesyncSpeedster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Passive_DesyncSpeedster_C>();
	}
};
static_assert(alignof(UBP_Passive_DesyncSpeedster_C) == 0x000008, "Wrong alignment on UBP_Passive_DesyncSpeedster_C");
static_assert(sizeof(UBP_Passive_DesyncSpeedster_C) == 0x0000A0, "Wrong size on UBP_Passive_DesyncSpeedster_C");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, UberGraphFrame) == 0x000070, "Member 'UBP_Passive_DesyncSpeedster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxStandSpeed) == 0x000078, "Member 'UBP_Passive_DesyncSpeedster_C::MaxStandSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxFastStandSpeed) == 0x00007C, "Member 'UBP_Passive_DesyncSpeedster_C::MaxFastStandSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxFastCrouchSpeed) == 0x000080, "Member 'UBP_Passive_DesyncSpeedster_C::MaxFastCrouchSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxCrouchSpeed) == 0x000084, "Member 'UBP_Passive_DesyncSpeedster_C::MaxCrouchSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxSlideSpeed) == 0x000088, "Member 'UBP_Passive_DesyncSpeedster_C::MaxSlideSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxStandAcceleration) == 0x00008C, "Member 'UBP_Passive_DesyncSpeedster_C::MaxStandAcceleration' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxCrouchAcceleration) == 0x000090, "Member 'UBP_Passive_DesyncSpeedster_C::MaxCrouchAcceleration' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxHorizontalSpeed) == 0x000094, "Member 'UBP_Passive_DesyncSpeedster_C::MaxHorizontalSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Passive_DesyncSpeedster_C, MaxSlideAcceleration) == 0x000098, "Member 'UBP_Passive_DesyncSpeedster_C::MaxSlideAcceleration' has a wrong offset!");

}


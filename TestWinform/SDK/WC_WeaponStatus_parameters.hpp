#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_WeaponStatus

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ChromaSDKPlugin_structs.hpp"
#include "TimeWatch_structs.hpp"


namespace SDK::Params
{

// Function WC_WeaponStatus.WC_WeaponStatus_C.ExecuteUbergraph_WC_WeaponStatus
// 0x0270 (0x0270 - 0x0000)
struct WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x005C(0x0010)(NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchorData                            K2Node_MakeStruct_AnchorData;                      // 0x0074(0x0028)(NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x009C(0x001C)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x00B8(0x0010)(NoDestructor)
	struct FAnchorData                            K2Node_MakeStruct_AnchorData_1;                    // 0x00C8(0x0028)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x00F8(0x001C)(NoDestructor)
	float                                         K2Node_Event_FromTime;                             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNGDChromaWrapper*                      CallFunc_GetChromaWrapper_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SelectedWeaponIndex;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0140(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponSelectionSlot_C*                 K2Node_DynamicCast_AsWeapon_Selection_Slot;        // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USelectedWeaponInfo_C*                  K2Node_DynamicCast_AsSelected_Weapon_Info;         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0188(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponSelectionSlot_C*                 K2Node_DynamicCast_AsWeapon_Selection_Slot_1;      // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x01B8(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x01D8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchCharacter*                    CallFunc_GetTimeWatchOwnerCharacter_ReturnValue;   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        CallFunc_GetLastActiveWeapon_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_ReturnValue_1;               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    CallFunc_GetTimeWatchOwnerCharacter_ReturnValue_1; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USelectedWeaponInfo_C*                  K2Node_DynamicCast_AsSelected_Weapon_Info_1;       // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USelectedWeaponInfo_C*                  K2Node_DynamicCast_AsSelected_Weapon_Info_2;       // 0x0260(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus");
static_assert(sizeof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus) == 0x000270, "Wrong size on WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, EntryPoint) == 0x000000, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_Event_MyGeometry) == 0x000008, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_BreakVector2D_X) == 0x000050, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_BreakVector2D_Y) == 0x000054, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_MakeStruct_Anchors) == 0x00005C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_MakeVector2D_ReturnValue) == 0x00006C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_MakeStruct_AnchorData) == 0x000074, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_MakeStruct_AnchorData' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_MakeStruct_WidgetTransform) == 0x00009C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_MakeStruct_Anchors_1) == 0x0000B8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_MakeStruct_AnchorData_1) == 0x0000C8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_MakeStruct_AnchorData_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000F0, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_MakeStruct_WidgetTransform_1) == 0x0000F8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_Event_FromTime) == 0x000114, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_Event_FromTime' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_PlayAnimation_ReturnValue) == 0x000118, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetChromaWrapper_ReturnValue) == 0x000120, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetChromaWrapper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_Event_SelectedWeaponIndex) == 0x000128, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_Event_SelectedWeaponIndex' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_PlayAnimation_ReturnValue_1) == 0x000130, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetAllChildren_ReturnValue) == 0x000140, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Array_Get_Item) == 0x000150, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_AsWeapon_Selection_Slot) == 0x000160, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_AsWeapon_Selection_Slot' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_AsSelected_Weapon_Info) == 0x000170, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_AsSelected_Weapon_Info' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_PlayAnimationForward_ReturnValue) == 0x000180, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetAllChildren_ReturnValue_1) == 0x000188, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Array_Get_Item_1) == 0x000198, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Array_Length_ReturnValue_1) == 0x0001A0, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_AsWeapon_Selection_Slot_1) == 0x0001A8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_AsWeapon_Selection_Slot_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Less_IntInt_ReturnValue) == 0x0001B1, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetText_ReturnValue) == 0x0001B8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Array_Length_ReturnValue_2) == 0x0001D0, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_TextToUpper_ReturnValue) == 0x0001D8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F0, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_PlayAnimation_ReturnValue_2) == 0x0001F8, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000200, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000208, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetTimeWatchOwnerCharacter_ReturnValue) == 0x000210, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetTimeWatchOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetLastActiveWeapon_ReturnValue) == 0x000218, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetLastActiveWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000220, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetSlotIndex_ReturnValue) == 0x000228, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetSlotIndex_ReturnValue_1) == 0x00022C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetSlotIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000230, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000231, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_GetTimeWatchOwnerCharacter_ReturnValue_1) == 0x000238, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_GetTimeWatchOwnerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_BooleanAND_ReturnValue) == 0x000240, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_IsValid_ReturnValue) == 0x000241, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, Temp_int_Loop_Counter_Variable_1) == 0x000244, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Less_IntInt_ReturnValue_1) == 0x000248, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, CallFunc_Add_IntInt_ReturnValue_1) == 0x00024C, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_AsSelected_Weapon_Info_1) == 0x000250, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_AsSelected_Weapon_Info_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_bSuccess_3) == 0x000258, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_AsSelected_Weapon_Info_2) == 0x000260, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_AsSelected_Weapon_Info_2' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus, K2Node_DynamicCast_bSuccess_4) == 0x000268, "Member 'WC_WeaponStatus_C_ExecuteUbergraph_WC_WeaponStatus::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.BP_OnWeaponSelected
// 0x0004 (0x0004 - 0x0000)
struct WC_WeaponStatus_C_BP_OnWeaponSelected final
{
public:
	int32                                         SelectedWeaponIndex;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponStatus_C_BP_OnWeaponSelected) == 0x000004, "Wrong alignment on WC_WeaponStatus_C_BP_OnWeaponSelected");
static_assert(sizeof(WC_WeaponStatus_C_BP_OnWeaponSelected) == 0x000004, "Wrong size on WC_WeaponStatus_C_BP_OnWeaponSelected");
static_assert(offsetof(WC_WeaponStatus_C_BP_OnWeaponSelected, SelectedWeaponIndex) == 0x000000, "Member 'WC_WeaponStatus_C_BP_OnWeaponSelected::SelectedWeaponIndex' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.BP_PlayCollapseToBottomAnimation
// 0x0004 (0x0004 - 0x0000)
struct WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation final
{
public:
	float                                         FromTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation) == 0x000004, "Wrong alignment on WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation");
static_assert(sizeof(WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation) == 0x000004, "Wrong size on WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation");
static_assert(offsetof(WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation, FromTime) == 0x000000, "Member 'WC_WeaponStatus_C_BP_PlayCollapseToBottomAnimation::FromTime' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.Tick
// 0x003C (0x003C - 0x0000)
struct WC_WeaponStatus_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponStatus_C_Tick) == 0x000004, "Wrong alignment on WC_WeaponStatus_C_Tick");
static_assert(sizeof(WC_WeaponStatus_C_Tick) == 0x00003C, "Wrong size on WC_WeaponStatus_C_Tick");
static_assert(offsetof(WC_WeaponStatus_C_Tick, MyGeometry) == 0x000000, "Member 'WC_WeaponStatus_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_Tick, InDeltaTime) == 0x000038, "Member 'WC_WeaponStatus_C_Tick::InDeltaTime' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.GetTeamColorForLocal
// 0x0060 (0x0060 - 0x0000)
struct WC_WeaponStatus_C_GetTeamColorForLocal final
{
public:
	struct FTeamColorConfig                       TeamColorRef;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFluxPlayerController*                  K2Node_DynamicCast_AsFlux_Player_Controller;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForTeam_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponStatus_C_GetTeamColorForLocal) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_GetTeamColorForLocal");
static_assert(sizeof(WC_WeaponStatus_C_GetTeamColorForLocal) == 0x000060, "Wrong size on WC_WeaponStatus_C_GetTeamColorForLocal");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, TeamColorRef) == 0x000000, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::TeamColorRef' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, ReturnValue) == 0x000028, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, K2Node_DynamicCast_AsFlux_Player_Controller) == 0x000040, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::K2Node_DynamicCast_AsFlux_Player_Controller' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, CallFunc_GetTeamId_ReturnValue) == 0x00004C, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_GetTeamColorForLocal, CallFunc_GetColorForTeam_ReturnValue) == 0x000050, "Member 'WC_WeaponStatus_C_GetTeamColorForLocal::CallFunc_GetColorForTeam_ReturnValue' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.PrepareChromaWeaponsKeys
// 0x0088 (0x0088 - 0x0000)
struct WC_WeaponStatus_C_PrepareChromaWeaponsKeys final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChromaSDKKeyboardKey                         CallFunc_WeaponSlotToKeyboardKey_KeyboardKey;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChromaKeyColor                        K2Node_MakeStruct_ChromaKeyColor;                  // 0x0010(0x0028)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchCharacter*                    CallFunc_GetTimeWatchOwnerCharacter_ReturnValue;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSelectedWeapon_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHoldsteredWeaponSlotIndex_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentWeaponSlotIndex_ReturnValue;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChromaSDKKeyboardKey                         CallFunc_WeaponSlotToKeyboardKey_KeyboardKey_1;    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChromaKeyColor                        K2Node_MakeStruct_ChromaKeyColor_1;                // 0x0060(0x0028)()
};
static_assert(alignof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_PrepareChromaWeaponsKeys");
static_assert(sizeof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys) == 0x000088, "Wrong size on WC_WeaponStatus_C_PrepareChromaWeaponsKeys");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, Temp_int_Variable) == 0x000000, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_WeaponSlotToKeyboardKey_KeyboardKey) == 0x000004, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_WeaponSlotToKeyboardKey_KeyboardKey' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_Map_Length_ReturnValue) == 0x000008, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, K2Node_MakeStruct_ChromaKeyColor) == 0x000010, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::K2Node_MakeStruct_ChromaKeyColor' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_GetTimeWatchOwnerCharacter_ReturnValue) == 0x000040, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_GetTimeWatchOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_HasSelectedWeapon_ReturnValue) == 0x000048, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_HasSelectedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_GetHoldsteredWeaponSlotIndex_ReturnValue) == 0x00004C, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_GetHoldsteredWeaponSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_GetCurrentWeaponSlotIndex_ReturnValue) == 0x000050, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_GetCurrentWeaponSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_SelectInt_ReturnValue) == 0x000058, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, CallFunc_WeaponSlotToKeyboardKey_KeyboardKey_1) == 0x00005C, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::CallFunc_WeaponSlotToKeyboardKey_KeyboardKey_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_PrepareChromaWeaponsKeys, K2Node_MakeStruct_ChromaKeyColor_1) == 0x000060, "Member 'WC_WeaponStatus_C_PrepareChromaWeaponsKeys::K2Node_MakeStruct_ChromaKeyColor_1' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.ChromaSelectWeapon
// 0x0030 (0x0030 - 0x0000)
struct WC_WeaponStatus_C_ChromaSelectWeapon final
{
public:
	int32                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChromaSDKKeyboardKey                         CallFunc_WeaponSlotToKeyboardKey_KeyboardKey;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChromaKeyColor                        K2Node_MakeStruct_ChromaKeyColor;                  // 0x0008(0x0028)()
};
static_assert(alignof(WC_WeaponStatus_C_ChromaSelectWeapon) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_ChromaSelectWeapon");
static_assert(sizeof(WC_WeaponStatus_C_ChromaSelectWeapon) == 0x000030, "Wrong size on WC_WeaponStatus_C_ChromaSelectWeapon");
static_assert(offsetof(WC_WeaponStatus_C_ChromaSelectWeapon, InputPin) == 0x000000, "Member 'WC_WeaponStatus_C_ChromaSelectWeapon::InputPin' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChromaSelectWeapon, CallFunc_WeaponSlotToKeyboardKey_KeyboardKey) == 0x000004, "Member 'WC_WeaponStatus_C_ChromaSelectWeapon::CallFunc_WeaponSlotToKeyboardKey_KeyboardKey' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChromaSelectWeapon, K2Node_MakeStruct_ChromaKeyColor) == 0x000008, "Member 'WC_WeaponStatus_C_ChromaSelectWeapon::K2Node_MakeStruct_ChromaKeyColor' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.ChangeWeaponsNameVisibility
// 0x0048 (0x0048 - 0x0000)
struct WC_WeaponStatus_C_ChangeWeaponsNameVisibility final
{
public:
	ESlateVisibility                              Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponSelectionSlot_C*                 K2Node_DynamicCast_AsWeapon_Selection_Slot;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_ChangeWeaponsNameVisibility");
static_assert(sizeof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility) == 0x000048, "Wrong size on WC_WeaponStatus_C_ChangeWeaponsNameVisibility");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, Visibility_0) == 0x000000, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, K2Node_DynamicCast_AsWeapon_Selection_Slot) == 0x000038, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::K2Node_DynamicCast_AsWeapon_Selection_Slot' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsNameVisibility, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WC_WeaponStatus_C_ChangeWeaponsNameVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.ChangeWeaponsSlotBackgroundImage
// 0x0058 (0x0058 - 0x0000)
struct WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage final
{
public:
	bool                                          MatchSize;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponSelectionSlot_C*                 K2Node_DynamicCast_AsWeapon_Selection_Slot;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage");
static_assert(sizeof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage) == 0x000058, "Wrong size on WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, MatchSize) == 0x000000, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::MatchSize' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, Texture) == 0x000008, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::Texture' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, CallFunc_Array_Get_Item) == 0x000038, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, K2Node_DynamicCast_AsWeapon_Selection_Slot) == 0x000048, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::K2Node_DynamicCast_AsWeapon_Selection_Slot' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WC_WeaponStatus_C_ChangeWeaponsSlotBackgroundImage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.UpdateWeaponInfo
// 0x0020 (0x0020 - 0x0000)
struct WC_WeaponStatus_C_UpdateWeaponInfo final
{
public:
	class USelectedWeaponInfo_C*                  K2Node_DynamicCast_AsSelected_Weapon_Info;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USelectedWeaponInfo_C*                  K2Node_DynamicCast_AsSelected_Weapon_Info_1;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_WeaponStatus_C_UpdateWeaponInfo) == 0x000008, "Wrong alignment on WC_WeaponStatus_C_UpdateWeaponInfo");
static_assert(sizeof(WC_WeaponStatus_C_UpdateWeaponInfo) == 0x000020, "Wrong size on WC_WeaponStatus_C_UpdateWeaponInfo");
static_assert(offsetof(WC_WeaponStatus_C_UpdateWeaponInfo, K2Node_DynamicCast_AsSelected_Weapon_Info) == 0x000000, "Member 'WC_WeaponStatus_C_UpdateWeaponInfo::K2Node_DynamicCast_AsSelected_Weapon_Info' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_UpdateWeaponInfo, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WC_WeaponStatus_C_UpdateWeaponInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_UpdateWeaponInfo, K2Node_DynamicCast_AsSelected_Weapon_Info_1) == 0x000010, "Member 'WC_WeaponStatus_C_UpdateWeaponInfo::K2Node_DynamicCast_AsSelected_Weapon_Info_1' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_UpdateWeaponInfo, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'WC_WeaponStatus_C_UpdateWeaponInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WC_WeaponStatus.WC_WeaponStatus_C.WeaponSlotToKeyboardKey
// 0x000C (0x000C - 0x0000)
struct WC_WeaponStatus_C_WeaponSlotToKeyboardKey final
{
public:
	int32                                         WeaponSlot;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChromaSDKKeyboardKey                         KeyboardKey;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChromaSDKKeyboardKey                         CallFunc_GetKeyboardRazerKey_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey) == 0x000004, "Wrong alignment on WC_WeaponStatus_C_WeaponSlotToKeyboardKey");
static_assert(sizeof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey) == 0x00000C, "Wrong size on WC_WeaponStatus_C_WeaponSlotToKeyboardKey");
static_assert(offsetof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey, WeaponSlot) == 0x000000, "Member 'WC_WeaponStatus_C_WeaponSlotToKeyboardKey::WeaponSlot' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey, KeyboardKey) == 0x000004, "Member 'WC_WeaponStatus_C_WeaponSlotToKeyboardKey::KeyboardKey' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey, CallFunc_GetKeyboardRazerKey_ReturnValue) == 0x000005, "Member 'WC_WeaponStatus_C_WeaponSlotToKeyboardKey::CallFunc_GetKeyboardRazerKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey, CallFunc_Conv_IntToByte_ReturnValue) == 0x000006, "Member 'WC_WeaponStatus_C_WeaponSlotToKeyboardKey::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey, CallFunc_Add_ByteByte_ReturnValue) == 0x000007, "Member 'WC_WeaponStatus_C_WeaponSlotToKeyboardKey::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_WeaponStatus_C_WeaponSlotToKeyboardKey, CallFunc_GetValidValue_ReturnValue) == 0x000008, "Member 'WC_WeaponStatus_C_WeaponSlotToKeyboardKey::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

}


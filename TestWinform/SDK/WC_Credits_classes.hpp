#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_Credits

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WC_Credits.WC_Credits_C
// 0x0058 (0x02A0 - 0x0248)
class UWC_Credits_C final : public UWidgetContainerCredits
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       BackgroundOpacity;                                 // 0x0250(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackButton_C*                          BackBtn;                                           // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BackgroundBlack;                             // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_Credits;                                  // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CreditsVelocity;                                   // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RewindCurve;                                       // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDilation;                                      // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RewindScaleCurve;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDirection;                                     // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingLinesToStartSlowing;                      // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RewindTimeFlow;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WC_Credits(int32 EntryPoint);
	void OnBackButtonPressed();
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	float GetCreditsLinesCount();
	float GetCurrentYAlignment();
	float GetDilationFactor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WC_Credits_C">();
	}
	static class UWC_Credits_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWC_Credits_C>();
	}
};
static_assert(alignof(UWC_Credits_C) == 0x000008, "Wrong alignment on UWC_Credits_C");
static_assert(sizeof(UWC_Credits_C) == 0x0002A0, "Wrong size on UWC_Credits_C");
static_assert(offsetof(UWC_Credits_C, UberGraphFrame) == 0x000248, "Member 'UWC_Credits_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, BackgroundOpacity) == 0x000250, "Member 'UWC_Credits_C::BackgroundOpacity' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, BackBtn) == 0x000258, "Member 'UWC_Credits_C::BackBtn' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, Image_BackgroundBlack) == 0x000260, "Member 'UWC_Credits_C::Image_BackgroundBlack' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, RichText_Credits) == 0x000268, "Member 'UWC_Credits_C::RichText_Credits' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, CreditsVelocity) == 0x000270, "Member 'UWC_Credits_C::CreditsVelocity' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, RewindCurve) == 0x000278, "Member 'UWC_Credits_C::RewindCurve' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, CurrentTime) == 0x000280, "Member 'UWC_Credits_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, TimeDilation) == 0x000284, "Member 'UWC_Credits_C::TimeDilation' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, RewindScaleCurve) == 0x000288, "Member 'UWC_Credits_C::RewindScaleCurve' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, TimeDirection) == 0x000290, "Member 'UWC_Credits_C::TimeDirection' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, RemainingLinesToStartSlowing) == 0x000294, "Member 'UWC_Credits_C::RemainingLinesToStartSlowing' has a wrong offset!");
static_assert(offsetof(UWC_Credits_C, RewindTimeFlow) == 0x000298, "Member 'UWC_Credits_C::RewindTimeFlow' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemporalPipeBomb

#include "Basic.hpp"

#include "TemporalPipeBomb_classes.hpp"
#include "TemporalPipeBomb_parameters.hpp"


namespace SDK
{

// Function TemporalPipeBomb.TemporalPipeBomb_C.ExecuteUbergraph_TemporalPipeBomb
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATemporalPipeBomb_C::ExecuteUbergraph_TemporalPipeBomb(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "ExecuteUbergraph_TemporalPipeBomb");

	Params::TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.OnCreated
// (Event, Public, BlueprintEvent)

void ATemporalPipeBomb_C::OnCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "OnCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.OnRecycled
// (Event, Public, BlueprintEvent)

void ATemporalPipeBomb_C::OnRecycled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "OnRecycled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.OnExploded
// (Event, Public, BlueprintEvent)

void ATemporalPipeBomb_C::OnExploded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "OnExploded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.OnGrenadeBounce
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                ImpactResult                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FVector&                   ImpactVelocity                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATemporalPipeBomb_C::OnGrenadeBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "OnGrenadeBounce");

	Params::TemporalPipeBomb_C_OnGrenadeBounce Parms{};

	Parms.ImpactResult = std::move(ImpactResult);
	Parms.ImpactVelocity = std::move(ImpactVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.ChangeFuseAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ATemporalPipeBomb_C::ChangeFuseAnim(bool NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "ChangeFuseAnim");

	Params::TemporalPipeBomb_C_ChangeFuseAnim Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATemporalPipeBomb_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "ReceiveTick");

	Params::TemporalPipeBomb_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.BP_Initialize
// (Event, Public, BlueprintEvent)

void ATemporalPipeBomb_C::BP_Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "BP_Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.BP_UpdateCosmetics
// (Event, Public, BlueprintEvent)

void ATemporalPipeBomb_C::BP_UpdateCosmetics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "BP_UpdateCosmetics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.CustomEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFluxCapacitorStates                    OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFluxCapacitorStates                    NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATemporalPipeBomb_C::CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "CustomEvent");

	Params::TemporalPipeBomb_C_CustomEvent Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.FakeTimeDilationSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFluxCapacitorStates                    GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATemporalPipeBomb_C::FakeTimeDilationSound(EFluxCapacitorStates GameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "FakeTimeDilationSound");

	Params::TemporalPipeBomb_C_FakeTimeDilationSound Parms{};

	Parms.GameState = GameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.GrenadeBounceSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FVector&                   ImpactVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATemporalPipeBomb_C::GrenadeBounceSound(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "GrenadeBounceSound");

	Params::TemporalPipeBomb_C_GrenadeBounceSound Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.ImpactVelocity = std::move(ImpactVelocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.StopGrenadeFlyingSound
// (Public, BlueprintCallable, BlueprintEvent)

void ATemporalPipeBomb_C::StopGrenadeFlyingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "StopGrenadeFlyingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemporalPipeBomb.TemporalPipeBomb_C.GetCosmeticExplosionRequiredTime
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ATemporalPipeBomb_C::GetCosmeticExplosionRequiredTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TemporalPipeBomb_C", "GetCosmeticExplosionRequiredTime");

	Params::TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_Playbook

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WC_Playbook.WC_Playbook_C.ExecuteUbergraph_WC_Playbook
// 0x00F0 (0x00F0 - 0x0000)
struct WC_Playbook_C_ExecuteUbergraph_WC_Playbook final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0008(0x0088)()
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UTextureRenderTarget2D*           K2Node_CustomEvent_TextureTarget2D;                // 0x0098(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewState;                       // 0x00A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A4(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook) == 0x000008, "Wrong alignment on WC_Playbook_C_ExecuteUbergraph_WC_Playbook");
static_assert(sizeof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook) == 0x0000F0, "Wrong size on WC_Playbook_C_ExecuteUbergraph_WC_Playbook");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, EntryPoint) == 0x000000, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, CallFunc_GetViewportScale_ReturnValue) == 0x000004, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, K2Node_MakeStruct_SlateBrush) == 0x000008, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000090, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, K2Node_CustomEvent_TextureTarget2D) == 0x000098, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::K2Node_CustomEvent_TextureTarget2D' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, K2Node_CustomEvent_NewState) == 0x0000A0, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, K2Node_Event_MyGeometry) == 0x0000A4, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, K2Node_Event_InDeltaTime) == 0x0000DC, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, CallFunc_GetViewportSize_ReturnValue) == 0x0000E0, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_ExecuteUbergraph_WC_Playbook, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000E8, "Member 'WC_Playbook_C_ExecuteUbergraph_WC_Playbook::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");

// Function WC_Playbook.WC_Playbook_C.Tick
// 0x003C (0x003C - 0x0000)
struct WC_Playbook_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_Playbook_C_Tick) == 0x000004, "Wrong alignment on WC_Playbook_C_Tick");
static_assert(sizeof(WC_Playbook_C_Tick) == 0x00003C, "Wrong size on WC_Playbook_C_Tick");
static_assert(offsetof(WC_Playbook_C_Tick, MyGeometry) == 0x000000, "Member 'WC_Playbook_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WC_Playbook_C_Tick, InDeltaTime) == 0x000038, "Member 'WC_Playbook_C_Tick::InDeltaTime' has a wrong offset!");

// Function WC_Playbook.WC_Playbook_C.EnablePlaybook
// 0x0001 (0x0001 - 0x0000)
struct WC_Playbook_C_EnablePlaybook final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_Playbook_C_EnablePlaybook) == 0x000001, "Wrong alignment on WC_Playbook_C_EnablePlaybook");
static_assert(sizeof(WC_Playbook_C_EnablePlaybook) == 0x000001, "Wrong size on WC_Playbook_C_EnablePlaybook");
static_assert(offsetof(WC_Playbook_C_EnablePlaybook, NewState) == 0x000000, "Member 'WC_Playbook_C_EnablePlaybook::NewState' has a wrong offset!");

// Function WC_Playbook.WC_Playbook_C.SetRenderTarget
// 0x0008 (0x0008 - 0x0000)
struct WC_Playbook_C_SetRenderTarget final
{
public:
	const class UTextureRenderTarget2D*           TextureTarget2D;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_Playbook_C_SetRenderTarget) == 0x000008, "Wrong alignment on WC_Playbook_C_SetRenderTarget");
static_assert(sizeof(WC_Playbook_C_SetRenderTarget) == 0x000008, "Wrong size on WC_Playbook_C_SetRenderTarget");
static_assert(offsetof(WC_Playbook_C_SetRenderTarget, TextureTarget2D) == 0x000000, "Member 'WC_Playbook_C_SetRenderTarget::TextureTarget2D' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_GrenadeLauncher

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "TimeWatch_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function Weapon_GrenadeLauncher.Weapon_GrenadeLauncher_C.ExecuteUbergraph_Weapon_GrenadeLauncher
// 0x0038 (0x0038 - 0x0000)
struct Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_OldState;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_NewState;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher) == 0x000008, "Wrong alignment on Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher");
static_assert(sizeof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher) == 0x000038, "Wrong size on Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, EntryPoint) == 0x000000, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, K2Node_CustomEvent_OldState) == 0x000004, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, K2Node_CustomEvent_NewState) == 0x000005, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000028, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Weapon_GrenadeLauncher_C_ExecuteUbergraph_Weapon_GrenadeLauncher::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Weapon_GrenadeLauncher.Weapon_GrenadeLauncher_C.CustomEvent
// 0x0002 (0x0002 - 0x0000)
struct Weapon_GrenadeLauncher_C_CustomEvent final
{
public:
	EFluxCapacitorStates                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_GrenadeLauncher_C_CustomEvent) == 0x000001, "Wrong alignment on Weapon_GrenadeLauncher_C_CustomEvent");
static_assert(sizeof(Weapon_GrenadeLauncher_C_CustomEvent) == 0x000002, "Wrong size on Weapon_GrenadeLauncher_C_CustomEvent");
static_assert(offsetof(Weapon_GrenadeLauncher_C_CustomEvent, OldState) == 0x000000, "Member 'Weapon_GrenadeLauncher_C_CustomEvent::OldState' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_CustomEvent, NewState) == 0x000001, "Member 'Weapon_GrenadeLauncher_C_CustomEvent::NewState' has a wrong offset!");

// Function Weapon_GrenadeLauncher.Weapon_GrenadeLauncher_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Weapon_GrenadeLauncher_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_GrenadeLauncher_C_ReceiveTick) == 0x000004, "Wrong alignment on Weapon_GrenadeLauncher_C_ReceiveTick");
static_assert(sizeof(Weapon_GrenadeLauncher_C_ReceiveTick) == 0x000004, "Wrong size on Weapon_GrenadeLauncher_C_ReceiveTick");
static_assert(offsetof(Weapon_GrenadeLauncher_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Weapon_GrenadeLauncher_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Weapon_GrenadeLauncher.Weapon_GrenadeLauncher_C.FakeTimeDilationSound
// 0x0058 (0x0058 - 0x0000)
struct Weapon_GrenadeLauncher_C_FakeTimeDilationSound final
{
public:
	EFluxCapacitorStates                          NewParam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x001C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound) == 0x000008, "Wrong alignment on Weapon_GrenadeLauncher_C_FakeTimeDilationSound");
static_assert(sizeof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound) == 0x000058, "Wrong size on Weapon_GrenadeLauncher_C_FakeTimeDilationSound");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, NewParam) == 0x000000, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::NewParam' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, Temp_struct_Variable) == 0x000008, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, Temp_delegate_Variable) == 0x00001C, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, Temp_struct_Variable_1) == 0x000030, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, Temp_delegate_Variable_1) == 0x000040, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, CallFunc_PostAkEvent_ReturnValue) == 0x000050, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_FakeTimeDilationSound, CallFunc_PostAkEvent_ReturnValue_1) == 0x000054, "Member 'Weapon_GrenadeLauncher_C_FakeTimeDilationSound::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function Weapon_GrenadeLauncher.Weapon_GrenadeLauncher_C.GetProjectilePredictionData
// 0x0170 (0x0170 - 0x0000)
struct Weapon_GrenadeLauncher_C_GetProjectilePredictionData final
{
public:
	struct FProjectilePredictionData              ProjectilePredictionData;                          // 0x0000(0x0060)(Parm, OutParm)
	TArray<ECollisionChannel>                     K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	class ANGDCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCookProgress_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetFireSocketTransform_ReturnValue;       // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 K2Node_ClassDynamicCast_AsTWPhysical_Projectile;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProjectilePredictionData              K2Node_MakeStruct_ProjectilePredictionData;        // 0x0110(0x0060)()
};
static_assert(alignof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData) == 0x000010, "Wrong alignment on Weapon_GrenadeLauncher_C_GetProjectilePredictionData");
static_assert(sizeof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData) == 0x000170, "Wrong size on Weapon_GrenadeLauncher_C_GetProjectilePredictionData");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, ProjectilePredictionData) == 0x000000, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::ProjectilePredictionData' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, K2Node_MakeArray_Array) == 0x000060, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000070, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_GetCookProgress_ReturnValue) == 0x000078, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_GetCookProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, K2Node_MakeArray_Array_1) == 0x000080, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_GetFireSocketTransform_ReturnValue) == 0x0000A0, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_GetFireSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, K2Node_ClassDynamicCast_AsTWPhysical_Projectile) == 0x0000D0, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::K2Node_ClassDynamicCast_AsTWPhysical_Projectile' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, K2Node_ClassDynamicCast_bSuccess) == 0x0000D8, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_BreakTransform_Location) == 0x0000DC, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_BreakTransform_Scale) == 0x0000F4, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000100, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00010C, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weapon_GrenadeLauncher_C_GetProjectilePredictionData, K2Node_MakeStruct_ProjectilePredictionData) == 0x000110, "Member 'Weapon_GrenadeLauncher_C_GetProjectilePredictionData::K2Node_MakeStruct_ProjectilePredictionData' has a wrong offset!");

}


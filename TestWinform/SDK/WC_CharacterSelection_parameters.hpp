#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_CharacterSelection

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WC_CharacterSelection.WC_CharacterSelection_C.ExecuteUbergraph_WC_CharacterSelection
// 0x0048 (0x0048 - 0x0000)
struct WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_OldState;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_NewState;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNGDAkComponent*                        CallFunc_PostSound_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)> K2Node_CreateDelegate_OutputDelegate; // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection) == 0x000008, "Wrong alignment on WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection");
static_assert(sizeof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection) == 0x000048, "Wrong size on WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, EntryPoint) == 0x000000, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, K2Node_CustomEvent_OldState) == 0x000010, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, K2Node_CustomEvent_NewState) == 0x000011, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000018, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, CallFunc_Vector_Zero_ReturnValue) == 0x000024, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, CallFunc_PostSound_ReturnValue) == 0x000030, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::CallFunc_PostSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WC_CharacterSelection_C_ExecuteUbergraph_WC_CharacterSelection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WC_CharacterSelection.WC_CharacterSelection_C.OnStateChange
// 0x0002 (0x0002 - 0x0000)
struct WC_CharacterSelection_C_OnStateChange final
{
public:
	EFluxCapacitorStates                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_CharacterSelection_C_OnStateChange) == 0x000001, "Wrong alignment on WC_CharacterSelection_C_OnStateChange");
static_assert(sizeof(WC_CharacterSelection_C_OnStateChange) == 0x000002, "Wrong size on WC_CharacterSelection_C_OnStateChange");
static_assert(offsetof(WC_CharacterSelection_C_OnStateChange, OldState) == 0x000000, "Member 'WC_CharacterSelection_C_OnStateChange::OldState' has a wrong offset!");
static_assert(offsetof(WC_CharacterSelection_C_OnStateChange, NewState) == 0x000001, "Member 'WC_CharacterSelection_C_OnStateChange::NewState' has a wrong offset!");

}


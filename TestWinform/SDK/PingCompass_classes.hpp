#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PingCompass

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PingCompass.PingCompass_C
// 0x0060 (0x03B8 - 0x0358)
class UPingCompass_C final : public UPingCompassWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PingAddedAnimation;                                // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ObjectiveIcon;                               // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ObjectiveIndicator;                          // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_TimeProgress;                                // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Score;                                     // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ScoreAnimated;                             // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PingCompass(int32 EntryPoint);
	void CosmeticOnPingPlaced();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PingCompass_C">();
	}
	static class UPingCompass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPingCompass_C>();
	}
};
static_assert(alignof(UPingCompass_C) == 0x000008, "Wrong alignment on UPingCompass_C");
static_assert(sizeof(UPingCompass_C) == 0x0003B8, "Wrong size on UPingCompass_C");
static_assert(offsetof(UPingCompass_C, UberGraphFrame) == 0x000358, "Member 'UPingCompass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, PingAddedAnimation) == 0x000360, "Member 'UPingCompass_C::PingAddedAnimation' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_1) == 0x000368, "Member 'UPingCompass_C::Image_1' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_2) == 0x000370, "Member 'UPingCompass_C::Image_2' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_6) == 0x000378, "Member 'UPingCompass_C::Image_6' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_7) == 0x000380, "Member 'UPingCompass_C::Image_7' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_8) == 0x000388, "Member 'UPingCompass_C::Image_8' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_ObjectiveIcon) == 0x000390, "Member 'UPingCompass_C::Image_ObjectiveIcon' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_ObjectiveIndicator) == 0x000398, "Member 'UPingCompass_C::Image_ObjectiveIndicator' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Image_TimeProgress) == 0x0003A0, "Member 'UPingCompass_C::Image_TimeProgress' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Overlay_Score) == 0x0003A8, "Member 'UPingCompass_C::Overlay_Score' has a wrong offset!");
static_assert(offsetof(UPingCompass_C, Overlay_ScoreAnimated) == 0x0003B0, "Member 'UPingCompass_C::Overlay_ScoreAnimated' has a wrong offset!");

}


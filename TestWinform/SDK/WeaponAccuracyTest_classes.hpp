#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponAccuracyTest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "WeaponImpactData_structs.hpp"
#include "WeaponAccuracyData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WeaponAccuracyTest.WeaponAccuracyTest_C
// 0x0048 (0x0260 - 0x0218)
class AWeaponAccuracyTest_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0218(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchCharacter*                    Victim;                                            // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeaponImpactData>              LocalImpactData;                                   // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         Test_AmmoCount;                                    // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Test_CurrentStage;                                 // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTestRunning;                                      // 0x0248(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeaponAccuracyData>            Test_LocalData;                                    // 0x0250(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_WeaponAccuracyTest(int32 EntryPoint);
	void RequestPartialTestData();
	void OnAccuracyDataReceived(const TArray<struct FWeaponImpactData>& OtherData);
	void ClearLocalImpactsData();
	void OnReceivedImpact(int32 ProjectileIndex, const struct FHitResult& ImpactData);
	void ReceiveTick(float DeltaSeconds);
	void InpActEvt_T_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void Diff(TArray<struct FWeaponImpactData>& Other);
	void GetCurrentWeapon(class ATemporalWeapon** Weapon);
	void PrintTestResult();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponAccuracyTest_C">();
	}
	static class AWeaponAccuracyTest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeaponAccuracyTest_C>();
	}
};
static_assert(alignof(AWeaponAccuracyTest_C) == 0x000008, "Wrong alignment on AWeaponAccuracyTest_C");
static_assert(sizeof(AWeaponAccuracyTest_C) == 0x000260, "Wrong size on AWeaponAccuracyTest_C");
static_assert(offsetof(AWeaponAccuracyTest_C, UberGraphFrame) == 0x000218, "Member 'AWeaponAccuracyTest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, DefaultSceneRoot) == 0x000220, "Member 'AWeaponAccuracyTest_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, Victim) == 0x000228, "Member 'AWeaponAccuracyTest_C::Victim' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, LocalImpactData) == 0x000230, "Member 'AWeaponAccuracyTest_C::LocalImpactData' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, Test_AmmoCount) == 0x000240, "Member 'AWeaponAccuracyTest_C::Test_AmmoCount' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, Test_CurrentStage) == 0x000244, "Member 'AWeaponAccuracyTest_C::Test_CurrentStage' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, bTestRunning) == 0x000248, "Member 'AWeaponAccuracyTest_C::bTestRunning' has a wrong offset!");
static_assert(offsetof(AWeaponAccuracyTest_C, Test_LocalData) == 0x000250, "Member 'AWeaponAccuracyTest_C::Test_LocalData' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TooltipTutorialListener

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TooltipTutorialListener.BP_TooltipTutorialListener_C
// 0x0048 (0x0108 - 0x00C0)
class UBP_TooltipTutorialListener_C : public UTWTooltipListenerComponent
{
public:
	class FText                                   Title;                                             // 0x00C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Description;                                       // 0x00D8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Priority;                                          // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CoolDown;                                          // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LockCount;                                         // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LockMax;                                           // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CooldownTimestamp;                                 // 0x0104(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckListenerRule();
	void UpdateLocks();
	void CheckLocks(bool* LocksPassed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TooltipTutorialListener_C">();
	}
	static class UBP_TooltipTutorialListener_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TooltipTutorialListener_C>();
	}
};
static_assert(alignof(UBP_TooltipTutorialListener_C) == 0x000008, "Wrong alignment on UBP_TooltipTutorialListener_C");
static_assert(sizeof(UBP_TooltipTutorialListener_C) == 0x000108, "Wrong size on UBP_TooltipTutorialListener_C");
static_assert(offsetof(UBP_TooltipTutorialListener_C, Title) == 0x0000C0, "Member 'UBP_TooltipTutorialListener_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, Description) == 0x0000D8, "Member 'UBP_TooltipTutorialListener_C::Description' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, Priority) == 0x0000F0, "Member 'UBP_TooltipTutorialListener_C::Priority' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, Duration) == 0x0000F4, "Member 'UBP_TooltipTutorialListener_C::Duration' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, CoolDown) == 0x0000F8, "Member 'UBP_TooltipTutorialListener_C::CoolDown' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, LockCount) == 0x0000FC, "Member 'UBP_TooltipTutorialListener_C::LockCount' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, LockMax) == 0x000100, "Member 'UBP_TooltipTutorialListener_C::LockMax' has a wrong offset!");
static_assert(offsetof(UBP_TooltipTutorialListener_C, CooldownTimestamp) == 0x000104, "Member 'UBP_TooltipTutorialListener_C::CooldownTimestamp' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Tutorial_Target_BP

#include "Basic.hpp"

#include "Tutorial_Target_BP_classes.hpp"
#include "Tutorial_Target_BP_parameters.hpp"


namespace SDK
{

// Function Tutorial_Target_BP.Tutorial_Target_BP_C.ExecuteUbergraph_Tutorial_Target_BP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Target_BP_C::ExecuteUbergraph_Tutorial_Target_BP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "ExecuteUbergraph_Tutorial_Target_BP");

	Params::Tutorial_Target_BP_C_ExecuteUbergraph_Tutorial_Target_BP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATutorial_Target_BP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.OnProjectileImpact
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitData                                                (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATutorial_Target_BP_C::OnProjectileImpact(const struct FHitResult& HitData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "OnProjectileImpact");

	Params::Tutorial_Target_BP_C_OnProjectileImpact Parms{};

	Parms.HitData = std::move(HitData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Target_BP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "ReceiveTick");

	Params::Tutorial_Target_BP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.SetState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDummyStates                            NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Target_BP_C::SetState(EDummyStates NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "SetState");

	Params::Tutorial_Target_BP_C_SetState Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.BP_OnDeath
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FNGDDamageEvent&           DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      InstigatorController                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATutorial_Target_BP_C::BP_OnDeath(const struct FNGDDamageEvent& DamageEvent, class AController* InstigatorController, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "BP_OnDeath");

	Params::Tutorial_Target_BP_C_BP_OnDeath Parms{};

	Parms.DamageEvent = std::move(DamageEvent);
	Parms.InstigatorController = InstigatorController;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.SetMaterials
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<int32, class UMaterialInterface*>&NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor)

void ATutorial_Target_BP_C::SetMaterials(const TMap<int32, class UMaterialInterface*>& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "SetMaterials");

	Params::Tutorial_Target_BP_C_SetMaterials Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Tutorial_Target_BP.Tutorial_Target_BP_C.BP_OnTakeDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FNGDDamageEvent&           DamageEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ATutorial_Target_BP_C::BP_OnTakeDamage(float Damage, const struct FNGDDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Tutorial_Target_BP_C", "BP_OnTakeDamage");

	Params::Tutorial_Target_BP_C_BP_OnTakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


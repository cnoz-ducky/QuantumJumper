#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Meleeability

#include "Basic.hpp"

#include "BP_Meleeability_classes.hpp"
#include "BP_Meleeability_parameters.hpp"


namespace SDK
{

// Function BP_Meleeability.BP_MeleeAbility_C.ExecuteUbergraph_BP_MeleeAbility
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MeleeAbility_C::ExecuteUbergraph_BP_MeleeAbility(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "ExecuteUbergraph_BP_MeleeAbility");

	Params::BP_MeleeAbility_C_ExecuteUbergraph_BP_MeleeAbility Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.PlayOtherActorHitFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MeleeAbility_C::PlayOtherActorHitFX(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "PlayOtherActorHitFX");

	Params::BP_MeleeAbility_C_PlayOtherActorHitFX Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.PlayBarrelHitFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MeleeAbility_C::PlayBarrelHitFX(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "PlayBarrelHitFX");

	Params::BP_MeleeAbility_C_PlayBarrelHitFX Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.PlayDamageFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MeleeAbility_C::PlayDamageFX(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "PlayDamageFX");

	Params::BP_MeleeAbility_C_PlayDamageFX Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.PlayPhysicsHitFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MeleeAbility_C::PlayPhysicsHitFX(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "PlayPhysicsHitFX");

	Params::BP_MeleeAbility_C_PlayPhysicsHitFX Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_OnReExecuted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTWGameplayAbilitySystem*         InTWAbilitySystem                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTWAbilityCustomDataHandle&AbilityDataHandle                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const bool                              bShouldTriggerLogic                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MeleeAbility_C::BP_OnReExecuted(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_OnReExecuted");

	Params::BP_MeleeAbility_C_BP_OnReExecuted Parms{};

	Parms.InTWAbilitySystem = InTWAbilitySystem;
	Parms.AbilityDataHandle = std::move(AbilityDataHandle);
	Parms.bShouldTriggerLogic = bShouldTriggerLogic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_OnPreActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTWGameplayAbilitySystem*         InTWAbilitySystem                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTWAbilitiesComponent*            Caster_AbilityComp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MeleeAbility_C::BP_OnPreActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, class UTWAbilitiesComponent* Caster_AbilityComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_OnPreActivated");

	Params::BP_MeleeAbility_C_BP_OnPreActivated Parms{};

	Parms.InTWAbilitySystem = InTWAbilitySystem;
	Parms.Caster_AbilityComp = Caster_AbilityComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_Update
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MeleeAbility_C::BP_Update(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_Update");

	Params::BP_MeleeAbility_C_BP_Update Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_OnPause
// (Event, Public, BlueprintEvent)

void UBP_MeleeAbility_C::BP_OnPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_OnPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_OnResume
// (Event, Public, BlueprintEvent)

void UBP_MeleeAbility_C::BP_OnResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_OnResume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_OnActivated
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTWGameplayAbilitySystem*         InTWAbilitySystem                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTWAbilityCustomDataHandle&AbilityDataHandle                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const bool                              bShouldTriggerLogic                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MeleeAbility_C::BP_OnActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_OnActivated");

	Params::BP_MeleeAbility_C_BP_OnActivated Parms{};

	Parms.InTWAbilitySystem = InTWAbilitySystem;
	Parms.AbilityDataHandle = std::move(AbilityDataHandle);
	Parms.bShouldTriggerLogic = bShouldTriggerLogic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.BP_OnFinished
// (Event, Public, BlueprintEvent)

void UBP_MeleeAbility_C::BP_OnFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "BP_OnFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Meleeability.BP_MeleeAbility_C.ShouldUpdateSimulation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   ShouldUpdateSimulation_0                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MeleeAbility_C::ShouldUpdateSimulation(bool* ShouldUpdateSimulation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "ShouldUpdateSimulation");

	Params::BP_MeleeAbility_C_ShouldUpdateSimulation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShouldUpdateSimulation_0 != nullptr)
		*ShouldUpdateSimulation_0 = Parms.ShouldUpdateSimulation_0;
}


// Function BP_Meleeability.BP_MeleeAbility_C.ShouldTriggerDamage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_MeleeAbility_C::ShouldTriggerDamage(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "ShouldTriggerDamage");

	Params::BP_MeleeAbility_C_ShouldTriggerDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_Meleeability.BP_MeleeAbility_C.Play Melee Hit Sound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MeleeAbility_C::Play_Melee_Hit_Sound(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "Play Melee Hit Sound");

	Params::BP_MeleeAbility_C_Play_Melee_Hit_Sound Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.ShakeCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   IntensityScale                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MeleeAbility_C::ShakeCamera(class UClass* ShakeClass, float IntensityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "ShakeCamera");

	Params::BP_MeleeAbility_C_ShakeCamera Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.IntensityScale = IntensityScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Meleeability.BP_MeleeAbility_C.PlaySwingSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_MeleeAbility_C::PlaySwingSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "PlaySwingSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Meleeability.BP_MeleeAbility_C.IsSinglePlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTWAbilitiesComponent*            CasterComp                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_MeleeAbility_C::IsSinglePlayer(class UTWAbilitiesComponent* CasterComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "IsSinglePlayer");

	Params::BP_MeleeAbility_C_IsSinglePlayer Parms{};

	Parms.CasterComp = CasterComp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Meleeability.BP_MeleeAbility_C.Play Hit FX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_MeleeAbility_C::Play_Hit_FX(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MeleeAbility_C", "Play Hit FX");

	Params::BP_MeleeAbility_C_Play_Hit_FX Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}

}


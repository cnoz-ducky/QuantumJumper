#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_WeaponStatus

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "ChromaSDKPlugin_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WC_WeaponStatus.WC_WeaponStatus_C
// 0x0070 (0x0338 - 0x02C8)
class UWC_WeaponStatus_C final : public UWidgetContainerWeaponStatus
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       WeaponSwitchIcon;                                  // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeChooseWeaponText;                              // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WeaponsSwitch;                                     // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WeaponsWidgetsContainerFade;                       // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TranslateWeaponsToBottomRight;                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_PrevWeaponKey;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDefaultActionLabel_Override_C*         DefaultActionLabel_Override;                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_ChooseWeapon;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNGDChromaWrapper*                      ChromaWrapper;                                     // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShortestKeyLabelIndex;                             // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WeaponDrawAnimationSpeed;                          // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 VioletPassiveIdentifier;                           // 0x0328(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WC_WeaponStatus(int32 EntryPoint);
	void BP_OnSecondaryWeaponSettedAbility();
	void BP_OnRefreshOwnerData();
	void BP_OnPrimaryWeaponSwitchedAbility();
	void WidgetAnimationEvt_WeaponsWidgetsContainerFade_K2Node_WidgetAnimationEvent_2();
	void BP_OnWeaponDrawed();
	void WidgetAnimationEvt_TranslateWeaponsToBottomRight_K2Node_WidgetAnimationEvent_1();
	void WidgetAnimationEvt_TranslateWeaponsToBottomRight_K2Node_WidgetAnimationEvent_0();
	void BP_RestoreWidgetToWeaponSelectedVersion();
	void BP_OnWeaponSelected(int32 SelectedWeaponIndex);
	void BP_OnReset();
	void BP_OnCollapseWeaponSelected();
	void BP_RestoreWidgetToCollapsedVersion();
	void BP_RestoreWidgetToInit();
	void BP_PlayCollapseToBottomAnimation(float FromTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	struct FLinearColor GetTeamColorForLocal(const struct FTeamColorConfig& TeamColorRef);
	void PrepareChromaWeaponsKeys();
	void ChromaSelectWeapon(int32 InputPin);
	void ChangeWeaponsNameVisibility(ESlateVisibility Visibility_0);
	void ChangeWeaponsSlotBackgroundImage(bool MatchSize, class UTexture2D* Texture);
	void UpdateWeaponInfo();

	void WeaponSlotToKeyboardKey(int32 WeaponSlot, EChromaSDKKeyboardKey* KeyboardKey) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WC_WeaponStatus_C">();
	}
	static class UWC_WeaponStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWC_WeaponStatus_C>();
	}
};
static_assert(alignof(UWC_WeaponStatus_C) == 0x000008, "Wrong alignment on UWC_WeaponStatus_C");
static_assert(sizeof(UWC_WeaponStatus_C) == 0x000338, "Wrong size on UWC_WeaponStatus_C");
static_assert(offsetof(UWC_WeaponStatus_C, UberGraphFrame) == 0x0002C8, "Member 'UWC_WeaponStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, WeaponSwitchIcon) == 0x0002D0, "Member 'UWC_WeaponStatus_C::WeaponSwitchIcon' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, FadeChooseWeaponText) == 0x0002D8, "Member 'UWC_WeaponStatus_C::FadeChooseWeaponText' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, WeaponsSwitch) == 0x0002E0, "Member 'UWC_WeaponStatus_C::WeaponsSwitch' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, WeaponsWidgetsContainerFade) == 0x0002E8, "Member 'UWC_WeaponStatus_C::WeaponsWidgetsContainerFade' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, TranslateWeaponsToBottomRight) == 0x0002F0, "Member 'UWC_WeaponStatus_C::TranslateWeaponsToBottomRight' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, Canvas_PrevWeaponKey) == 0x0002F8, "Member 'UWC_WeaponStatus_C::Canvas_PrevWeaponKey' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, DefaultActionLabel_Override) == 0x000300, "Member 'UWC_WeaponStatus_C::DefaultActionLabel_Override' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, Text_ChooseWeapon) == 0x000308, "Member 'UWC_WeaponStatus_C::Text_ChooseWeapon' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, VerticalBox_0) == 0x000310, "Member 'UWC_WeaponStatus_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, ChromaWrapper) == 0x000318, "Member 'UWC_WeaponStatus_C::ChromaWrapper' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, ShortestKeyLabelIndex) == 0x000320, "Member 'UWC_WeaponStatus_C::ShortestKeyLabelIndex' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, WeaponDrawAnimationSpeed) == 0x000324, "Member 'UWC_WeaponStatus_C::WeaponDrawAnimationSpeed' has a wrong offset!");
static_assert(offsetof(UWC_WeaponStatus_C, VioletPassiveIdentifier) == 0x000328, "Member 'UWC_WeaponStatus_C::VioletPassiveIdentifier' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Passive_UnsyncedDisruptionsVision

#include "Basic.hpp"

#include "BP_Passive_UnsyncedDisruptionsVision_classes.hpp"
#include "BP_Passive_UnsyncedDisruptionsVision_parameters.hpp"


namespace SDK
{

// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.ExecuteUbergraph_BP_Passive_UnsyncedDisruptionsVision
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::ExecuteUbergraph_BP_Passive_UnsyncedDisruptionsVision(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "ExecuteUbergraph_BP_Passive_UnsyncedDisruptionsVision");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_ExecuteUbergraph_BP_Passive_UnsyncedDisruptionsVision Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.OnGhostDisappear
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATWCharacterGhost*                TWGhacrGhost                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATimeWatchCharacter*              TWMimicCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::OnGhostDisappear(class ATWCharacterGhost* TWGhacrGhost, class ATimeWatchCharacter* TWMimicCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "OnGhostDisappear");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_OnGhostDisappear Parms{};

	Parms.TWGhacrGhost = TWGhacrGhost;
	Parms.TWMimicCharacter = TWMimicCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.OnHealthRestored
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchCharacter*              Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::OnHealthRestored(class ATimeWatchCharacter* Character, float NewHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "OnHealthRestored");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_OnHealthRestored Parms{};

	Parms.Character = Character;
	Parms.NewHealth = NewHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.OnGenericObserverEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTimeWatchEvent*                  Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::OnGenericObserverEvent(class UTimeWatchEvent* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "OnGenericObserverEvent");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_OnGenericObserverEvent Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.OnDestroyParadox
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATWCharacterGhost*                TWGhacrGhost                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATimeWatchCharacter*              TWMimicCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::OnDestroyParadox(class ATWCharacterGhost* TWGhacrGhost, class ATimeWatchCharacter* TWMimicCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "OnDestroyParadox");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_OnDestroyParadox Parms{};

	Parms.TWGhacrGhost = TWGhacrGhost;
	Parms.TWMimicCharacter = TWMimicCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BP_OnPause
// (Event, Public, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::BP_OnPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BP_OnPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BP_OnResume
// (Event, Public, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::BP_OnResume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BP_OnResume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.OnFirearmUsed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchCharacter*              TWChar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFirearm*                         Firearm                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::OnFirearmUsed(class ATimeWatchCharacter* TWChar, class AFirearm* Firearm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "OnFirearmUsed");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_OnFirearmUsed Parms{};

	Parms.TWChar = TWChar;
	Parms.Firearm = Firearm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BP_OnPreActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTWGameplayAbilitySystem*         InTWAbilitySystem                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTWAbilitiesComponent*            Caster_AbilityComp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::BP_OnPreActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, class UTWAbilitiesComponent* Caster_AbilityComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BP_OnPreActivated");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_BP_OnPreActivated Parms{};

	Parms.InTWAbilitySystem = InTWAbilitySystem;
	Parms.Caster_AbilityComp = Caster_AbilityComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BP_OnFinished
// (Event, Public, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::BP_OnFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BP_OnFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BP_OnReExecuted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTWGameplayAbilitySystem*         InTWAbilitySystem                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTWAbilityCustomDataHandle&AbilityDataHandle                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const bool                              bShouldTriggerLogic                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Passive_UnsyncedDisruptionsVision_C::BP_OnReExecuted(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BP_OnReExecuted");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_BP_OnReExecuted Parms{};

	Parms.InTWAbilitySystem = InTWAbilitySystem;
	Parms.AbilityDataHandle = std::move(AbilityDataHandle);
	Parms.bShouldTriggerLogic = bShouldTriggerLogic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BP_Update
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::BP_Update(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BP_Update");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_BP_Update Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.MakeAbilityCustomDataHandle
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTWAbilitiesComponent*            Caster_AbilityComp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTWAbilityCustomDataHandle       ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FTWAbilityCustomDataHandle UBP_Passive_UnsyncedDisruptionsVision_C::MakeAbilityCustomDataHandle(class UTWAbilitiesComponent* Caster_AbilityComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "MakeAbilityCustomDataHandle");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_MakeAbilityCustomDataHandle Parms{};

	Parms.Caster_AbilityComp = Caster_AbilityComp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.Create Ghost Character
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchCharacter*              TW_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    shouldModifyLifeSpan                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DesiredLifespan                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATWCharacterGhostBP_C**           TW_Ghost_Charactere                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::Create_Ghost_Character(class ATimeWatchCharacter* TW_Character, bool shouldModifyLifeSpan, float DesiredLifespan, class ATWCharacterGhostBP_C** TW_Ghost_Charactere)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "Create Ghost Character");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_Create_Ghost_Character Parms{};

	Parms.TW_Character = TW_Character;
	Parms.shouldModifyLifeSpan = shouldModifyLifeSpan;
	Parms.DesiredLifespan = DesiredLifespan;

	UObject::ProcessEvent(Func, &Parms);

	if (TW_Ghost_Charactere != nullptr)
		*TW_Ghost_Charactere = Parms.TW_Ghost_Charactere;
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.UpdateGhostForCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchCharacter*              TW_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DesiredLifespan                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::UpdateGhostForCharacter(class ATimeWatchCharacter* TW_Character, float DesiredLifespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "UpdateGhostForCharacter");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_UpdateGhostForCharacter Parms{};

	Parms.TW_Character = TW_Character;
	Parms.DesiredLifespan = DesiredLifespan;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.DestroyParadox
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchCharacter*              TW_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::DestroyParadox(class ATimeWatchCharacter* TW_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "DestroyParadox");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_DestroyParadox Parms{};

	Parms.TW_Character = TW_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.CreateOrRefreshGhost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATWCharacterBP_C*                 Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    shouldModifyLifeSpan                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DesiredLifespan                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ATWCharacterGhostBP_C**           Ghost_Character                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Existed_Before                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Passive_UnsyncedDisruptionsVision_C::CreateOrRefreshGhost(class ATWCharacterBP_C* Character, bool shouldModifyLifeSpan, float DesiredLifespan, class ATWCharacterGhostBP_C** Ghost_Character, bool* Existed_Before)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "CreateOrRefreshGhost");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_CreateOrRefreshGhost Parms{};

	Parms.Character = Character;
	Parms.shouldModifyLifeSpan = shouldModifyLifeSpan;
	Parms.DesiredLifespan = DesiredLifespan;

	UObject::ProcessEvent(Func, &Parms);

	if (Ghost_Character != nullptr)
		*Ghost_Character = Parms.Ghost_Character;

	if (Existed_Before != nullptr)
		*Existed_Before = Parms.Existed_Before;
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.DestroyAllExistingGhosts
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::DestroyAllExistingGhosts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "DestroyAllExistingGhosts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.GetGameState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchGameState*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ATimeWatchGameState* UBP_Passive_UnsyncedDisruptionsVision_C::GetGameState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "GetGameState");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_GetGameState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.Unbind Events
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::Unbind_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "Unbind Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.BindEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::BindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "BindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.DebugPrint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DebugType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::DebugPrint(const class FString& DebugType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "DebugPrint");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_DebugPrint Parms{};

	Parms.DebugType = std::move(DebugType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.PrepareRemainingGhostsForRewind
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::PrepareRemainingGhostsForRewind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "PrepareRemainingGhostsForRewind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.UnbindSingleCharacterEvents
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ATimeWatchCharacter*              CharacterToUnbind                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Passive_UnsyncedDisruptionsVision_C::UnbindSingleCharacterEvents(class ATimeWatchCharacter* CharacterToUnbind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "UnbindSingleCharacterEvents");

	Params::BP_Passive_UnsyncedDisruptionsVision_C_UnbindSingleCharacterEvents Parms{};

	Parms.CharacterToUnbind = CharacterToUnbind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Passive_UnsyncedDisruptionsVision.BP_Passive_UnsyncedDisruptionsVision_C.UnbindGameObserverEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Passive_UnsyncedDisruptionsVision_C::UnbindGameObserverEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Passive_UnsyncedDisruptionsVision_C", "UnbindGameObserverEvents");

	UObject::ProcessEvent(Func, nullptr);
}

}


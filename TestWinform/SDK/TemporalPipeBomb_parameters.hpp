#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemporalPipeBomb

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function TemporalPipeBomb.TemporalPipeBomb_C.ExecuteUbergraph_TemporalPipeBomb
// 0x0168 (0x0168 - 0x0000)
struct TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_OldState;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_NewState_1;                     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNGDAkComponent*                        CallFunc_PostSound_ReturnValue;                    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRemainingTravelTime_ReturnValue;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UNGDAkComponent*                        CallFunc_PostSound_ReturnValue_1;                  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_NewState;                       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_ImpactResult;                   // 0x00A4(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_ImpactVelocity;                 // 0x012C(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TemporalParticle_C*                 K2Node_DynamicCast_AsBP_Temporal_Particle;         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetExplosionTimestamp_ReturnValue;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetExplosionTimestamp_ReturnValue_1;      // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TemporalParticle_C*                 K2Node_DynamicCast_AsBP_Temporal_Particle_1;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb) == 0x000008, "Wrong alignment on TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb");
static_assert(sizeof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb) == 0x000168, "Wrong size on TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, EntryPoint) == 0x000000, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::EntryPoint' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, Temp_float_Variable) == 0x000010, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, Temp_float_Variable_1) == 0x000014, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CustomEvent_OldState) == 0x000048, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CustomEvent_NewState_1) == 0x000049, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CustomEvent_NewState_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000050, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00005C, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_GetAttachParentActor_ReturnValue) == 0x000068, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_PostSound_ReturnValue) == 0x000070, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_PostSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, Temp_bool_Has_Been_Initd_Variable) == 0x000079, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_Event_DeltaSeconds) == 0x00007C, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_GetRemainingTravelTime_ReturnValue) == 0x000080, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_GetRemainingTravelTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_Less_FloatFloat_ReturnValue) == 0x000084, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_BooleanOR_ReturnValue) == 0x000085, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_PostSound_ReturnValue_1) == 0x000088, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_PostSound_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_GetMaterial_ReturnValue) == 0x000090, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000098, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, Temp_bool_IsClosed_Variable) == 0x0000A0, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CustomEvent_NewState) == 0x0000A1, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CustomEvent_ImpactResult) == 0x0000A4, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CustomEvent_ImpactResult' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_CustomEvent_ImpactVelocity) == 0x00012C, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_CustomEvent_ImpactVelocity' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, Temp_bool_Variable) == 0x000138, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_Select_Default) == 0x00013C, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_DynamicCast_AsBP_Temporal_Particle) == 0x000140, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_DynamicCast_AsBP_Temporal_Particle' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_GetExplosionTimestamp_ReturnValue) == 0x00014C, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_GetExplosionTimestamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000150, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, CallFunc_GetExplosionTimestamp_ReturnValue_1) == 0x000154, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::CallFunc_GetExplosionTimestamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_DynamicCast_AsBP_Temporal_Particle_1) == 0x000158, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_DynamicCast_AsBP_Temporal_Particle_1' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb, K2Node_DynamicCast_bSuccess_2) == 0x000160, "Member 'TemporalPipeBomb_C_ExecuteUbergraph_TemporalPipeBomb::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.OnGrenadeBounce
// 0x0094 (0x0094 - 0x0000)
struct TemporalPipeBomb_C_OnGrenadeBounce final
{
public:
	struct FHitResult                             ImpactResult;                                      // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0088(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TemporalPipeBomb_C_OnGrenadeBounce) == 0x000004, "Wrong alignment on TemporalPipeBomb_C_OnGrenadeBounce");
static_assert(sizeof(TemporalPipeBomb_C_OnGrenadeBounce) == 0x000094, "Wrong size on TemporalPipeBomb_C_OnGrenadeBounce");
static_assert(offsetof(TemporalPipeBomb_C_OnGrenadeBounce, ImpactResult) == 0x000000, "Member 'TemporalPipeBomb_C_OnGrenadeBounce::ImpactResult' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_OnGrenadeBounce, ImpactVelocity) == 0x000088, "Member 'TemporalPipeBomb_C_OnGrenadeBounce::ImpactVelocity' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.ChangeFuseAnim
// 0x0001 (0x0001 - 0x0000)
struct TemporalPipeBomb_C_ChangeFuseAnim final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TemporalPipeBomb_C_ChangeFuseAnim) == 0x000001, "Wrong alignment on TemporalPipeBomb_C_ChangeFuseAnim");
static_assert(sizeof(TemporalPipeBomb_C_ChangeFuseAnim) == 0x000001, "Wrong size on TemporalPipeBomb_C_ChangeFuseAnim");
static_assert(offsetof(TemporalPipeBomb_C_ChangeFuseAnim, NewState) == 0x000000, "Member 'TemporalPipeBomb_C_ChangeFuseAnim::NewState' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TemporalPipeBomb_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TemporalPipeBomb_C_ReceiveTick) == 0x000004, "Wrong alignment on TemporalPipeBomb_C_ReceiveTick");
static_assert(sizeof(TemporalPipeBomb_C_ReceiveTick) == 0x000004, "Wrong size on TemporalPipeBomb_C_ReceiveTick");
static_assert(offsetof(TemporalPipeBomb_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TemporalPipeBomb_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.CustomEvent
// 0x0002 (0x0002 - 0x0000)
struct TemporalPipeBomb_C_CustomEvent final
{
public:
	EFluxCapacitorStates                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TemporalPipeBomb_C_CustomEvent) == 0x000001, "Wrong alignment on TemporalPipeBomb_C_CustomEvent");
static_assert(sizeof(TemporalPipeBomb_C_CustomEvent) == 0x000002, "Wrong size on TemporalPipeBomb_C_CustomEvent");
static_assert(offsetof(TemporalPipeBomb_C_CustomEvent, OldState) == 0x000000, "Member 'TemporalPipeBomb_C_CustomEvent::OldState' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_CustomEvent, NewState) == 0x000001, "Member 'TemporalPipeBomb_C_CustomEvent::NewState' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.FakeTimeDilationSound
// 0x0030 (0x0030 - 0x0000)
struct TemporalPipeBomb_C_FakeTimeDilationSound final
{
public:
	EFluxCapacitorStates                          GameState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x001C(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TemporalPipeBomb_C_FakeTimeDilationSound) == 0x000008, "Wrong alignment on TemporalPipeBomb_C_FakeTimeDilationSound");
static_assert(sizeof(TemporalPipeBomb_C_FakeTimeDilationSound) == 0x000030, "Wrong size on TemporalPipeBomb_C_FakeTimeDilationSound");
static_assert(offsetof(TemporalPipeBomb_C_FakeTimeDilationSound, GameState) == 0x000000, "Member 'TemporalPipeBomb_C_FakeTimeDilationSound::GameState' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_FakeTimeDilationSound, Temp_struct_Variable) == 0x000008, "Member 'TemporalPipeBomb_C_FakeTimeDilationSound::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_FakeTimeDilationSound, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'TemporalPipeBomb_C_FakeTimeDilationSound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_FakeTimeDilationSound, Temp_delegate_Variable) == 0x00001C, "Member 'TemporalPipeBomb_C_FakeTimeDilationSound::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_FakeTimeDilationSound, CallFunc_PostAkEvent_ReturnValue) == 0x00002C, "Member 'TemporalPipeBomb_C_FakeTimeDilationSound::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.GrenadeBounceSound
// 0x0118 (0x0118 - 0x0000)
struct TemporalPipeBomb_C_GrenadeBounceSound final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactVelocity;                                    // 0x0088(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNGDAkComponent*                        CallFunc_PostSound_ReturnValue;                    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TemporalPipeBomb_C_GrenadeBounceSound) == 0x000008, "Wrong alignment on TemporalPipeBomb_C_GrenadeBounceSound");
static_assert(sizeof(TemporalPipeBomb_C_GrenadeBounceSound) == 0x000118, "Wrong size on TemporalPipeBomb_C_GrenadeBounceSound");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, HitResult) == 0x000000, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::HitResult' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, ImpactVelocity) == 0x000088, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::ImpactVelocity' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_bBlockingHit) == 0x000094, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_bInitialOverlap) == 0x000095, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_Time) == 0x000098, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_Distance) == 0x00009C, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_Location) == 0x0000A0, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_ImpactPoint) == 0x0000AC, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_Normal) == 0x0000B8, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C4, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_FaceIndex) == 0x0000F4, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_TraceStart) == 0x0000F8, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_BreakHitResult_TraceEnd) == 0x000104, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GrenadeBounceSound, CallFunc_PostSound_ReturnValue) == 0x000110, "Member 'TemporalPipeBomb_C_GrenadeBounceSound::CallFunc_PostSound_ReturnValue' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.StopGrenadeFlyingSound
// 0x0008 (0x0008 - 0x0000)
struct TemporalPipeBomb_C_StopGrenadeFlyingSound final
{
public:
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TemporalPipeBomb_C_StopGrenadeFlyingSound) == 0x000004, "Wrong alignment on TemporalPipeBomb_C_StopGrenadeFlyingSound");
static_assert(sizeof(TemporalPipeBomb_C_StopGrenadeFlyingSound) == 0x000008, "Wrong size on TemporalPipeBomb_C_StopGrenadeFlyingSound");
static_assert(offsetof(TemporalPipeBomb_C_StopGrenadeFlyingSound, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000000, "Member 'TemporalPipeBomb_C_StopGrenadeFlyingSound::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_StopGrenadeFlyingSound, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'TemporalPipeBomb_C_StopGrenadeFlyingSound::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function TemporalPipeBomb.TemporalPipeBomb_C.GetCosmeticExplosionRequiredTime
// 0x0018 (0x0018 - 0x0000)
struct TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_TemporalParticle_C*                 K2Node_DynamicCast_AsBP_Temporal_Particle;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime) == 0x000008, "Wrong alignment on TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime");
static_assert(sizeof(TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime) == 0x000018, "Wrong size on TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime");
static_assert(offsetof(TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime, ReturnValue) == 0x000000, "Member 'TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime, K2Node_DynamicCast_AsBP_Temporal_Particle) == 0x000008, "Member 'TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime::K2Node_DynamicCast_AsBP_Temporal_Particle' has a wrong offset!");
static_assert(offsetof(TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'TemporalPipeBomb_C_GetCosmeticExplosionRequiredTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_SniperRifle

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "TemporalWeapon_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_SniperRifle.Weapon_SniperRifle_C
// 0x0050 (0x0B60 - 0x0B10)
class AWeapon_SniperRifle_C : public ATemporalWeapon_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_SniperRifle_C;               // 0x0B08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPushbackFirearmFeelComponent*          PushbackFirearmFeel;                               // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeFirearmFeelComponent*       CameraShakeFirearmFeel;                            // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpreadFirearmFeelComponent*            SpreadFirearmFeel;                                 // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDeviationFirearmFeelComponent*         DeviationFirearmFeel;                              // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKickFirearmFeelComponent*              KickFirearmFeel;                                   // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_C4B38EB74362FCBC2C59CAB881EE7BAD; // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_C4B38EB74362FCBC2C59CAB881EE7BAD; // 0x0B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3D[0x3];                                      // 0x0B3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0B40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WeaponScreenDynMat;                                // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WeaponDynMat;                                      // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Weapon_SniperRifle(int32 EntryPoint);
	void CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState);
	void ReceiveBeginPlay();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void FakeTimeDilationSound(EFluxCapacitorStates GameState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_SniperRifle_C">();
	}
	static class AWeapon_SniperRifle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_SniperRifle_C>();
	}
};
static_assert(alignof(AWeapon_SniperRifle_C) == 0x000010, "Wrong alignment on AWeapon_SniperRifle_C");
static_assert(sizeof(AWeapon_SniperRifle_C) == 0x000B60, "Wrong size on AWeapon_SniperRifle_C");
static_assert(offsetof(AWeapon_SniperRifle_C, UberGraphFrame_Weapon_SniperRifle_C) == 0x000B08, "Member 'AWeapon_SniperRifle_C::UberGraphFrame_Weapon_SniperRifle_C' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, PushbackFirearmFeel) == 0x000B10, "Member 'AWeapon_SniperRifle_C::PushbackFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, CameraShakeFirearmFeel) == 0x000B18, "Member 'AWeapon_SniperRifle_C::CameraShakeFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, SpreadFirearmFeel) == 0x000B20, "Member 'AWeapon_SniperRifle_C::SpreadFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, DeviationFirearmFeel) == 0x000B28, "Member 'AWeapon_SniperRifle_C::DeviationFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, KickFirearmFeel) == 0x000B30, "Member 'AWeapon_SniperRifle_C::KickFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, Timeline_1_NewTrack_0_C4B38EB74362FCBC2C59CAB881EE7BAD) == 0x000B38, "Member 'AWeapon_SniperRifle_C::Timeline_1_NewTrack_0_C4B38EB74362FCBC2C59CAB881EE7BAD' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, Timeline_1__Direction_C4B38EB74362FCBC2C59CAB881EE7BAD) == 0x000B3C, "Member 'AWeapon_SniperRifle_C::Timeline_1__Direction_C4B38EB74362FCBC2C59CAB881EE7BAD' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, Timeline_1) == 0x000B40, "Member 'AWeapon_SniperRifle_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, WeaponScreenDynMat) == 0x000B48, "Member 'AWeapon_SniperRifle_C::WeaponScreenDynMat' has a wrong offset!");
static_assert(offsetof(AWeapon_SniperRifle_C, WeaponDynMat) == 0x000B50, "Member 'AWeapon_SniperRifle_C::WeaponDynMat' has a wrong offset!");

}


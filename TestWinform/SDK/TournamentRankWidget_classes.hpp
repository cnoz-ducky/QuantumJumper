#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentRankWidget

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"
#include "UnrealProject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TournamentRankWidget.TournamentRankWidget_C
// 0x0120 (0x0400 - 0x02E0)
class UTournamentRankWidget_C final : public UTWTournamentRankWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Demote;                                       // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FNGDSoundConfig                        Sound_OnFadeOut;                                   // 0x02F8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FNGDSoundConfig                        Sound_OnFadeIn;                                    // 0x0350(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FNGDSoundConfig                        Sound_OnMedalPresent;                              // 0x03A8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_TournamentRankWidget(int32 EntryPoint);
	void OnFadeIn();
	void OnFadeOut();
	void OnMedalPresent();
	void SequenceEvent__ENTRYPOINTTournamentRankWidget_0();
	void SequenceEvent__ENTRYPOINTTournamentRankWidget_1();
	void SequenceEvent__ENTRYPOINTTournamentRankWidget_2();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TournamentRankWidget_C">();
	}
	static class UTournamentRankWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTournamentRankWidget_C>();
	}
};
static_assert(alignof(UTournamentRankWidget_C) == 0x000008, "Wrong alignment on UTournamentRankWidget_C");
static_assert(sizeof(UTournamentRankWidget_C) == 0x000400, "Wrong size on UTournamentRankWidget_C");
static_assert(offsetof(UTournamentRankWidget_C, UberGraphFrame) == 0x0002E0, "Member 'UTournamentRankWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTournamentRankWidget_C, Anim_Demote) == 0x0002E8, "Member 'UTournamentRankWidget_C::Anim_Demote' has a wrong offset!");
static_assert(offsetof(UTournamentRankWidget_C, SizeBox_0) == 0x0002F0, "Member 'UTournamentRankWidget_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UTournamentRankWidget_C, Sound_OnFadeOut) == 0x0002F8, "Member 'UTournamentRankWidget_C::Sound_OnFadeOut' has a wrong offset!");
static_assert(offsetof(UTournamentRankWidget_C, Sound_OnFadeIn) == 0x000350, "Member 'UTournamentRankWidget_C::Sound_OnFadeIn' has a wrong offset!");
static_assert(offsetof(UTournamentRankWidget_C, Sound_OnMedalPresent) == 0x0003A8, "Member 'UTournamentRankWidget_C::Sound_OnMedalPresent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseMoveComponentType

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BaseMoveComponentType.BaseMoveComponentType_C
// 0x0028 (0x00D8 - 0x00B0)
#pragma pack(push, 0x1)
class alignas(0x08) UBaseMoveComponentType_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         RelativeTime;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RelativeStart;                                     // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClosedPath;                                        // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TravelDuration;                                    // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RelativeTime_Internal;                             // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EasingFunc;                                        // 0x00CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Smoothing_Exponent;                                // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BaseMoveComponentType(int32 EntryPoint);
	void ReceiveBeginPlay();
	void GetRelativePosition(struct FVector* NewParam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BaseMoveComponentType_C">();
	}
	static class UBaseMoveComponentType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseMoveComponentType_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBaseMoveComponentType_C) == 0x000008, "Wrong alignment on UBaseMoveComponentType_C");
static_assert(sizeof(UBaseMoveComponentType_C) == 0x0000D8, "Wrong size on UBaseMoveComponentType_C");
static_assert(offsetof(UBaseMoveComponentType_C, UberGraphFrame) == 0x0000B0, "Member 'UBaseMoveComponentType_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, RelativeTime) == 0x0000B8, "Member 'UBaseMoveComponentType_C::RelativeTime' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, RelativeStart) == 0x0000BC, "Member 'UBaseMoveComponentType_C::RelativeStart' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, ClosedPath) == 0x0000C0, "Member 'UBaseMoveComponentType_C::ClosedPath' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, TravelDuration) == 0x0000C4, "Member 'UBaseMoveComponentType_C::TravelDuration' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, RelativeTime_Internal) == 0x0000C8, "Member 'UBaseMoveComponentType_C::RelativeTime_Internal' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, EasingFunc) == 0x0000CC, "Member 'UBaseMoveComponentType_C::EasingFunc' has a wrong offset!");
static_assert(offsetof(UBaseMoveComponentType_C, Smoothing_Exponent) == 0x0000D0, "Member 'UBaseMoveComponentType_C::Smoothing_Exponent' has a wrong offset!");

}


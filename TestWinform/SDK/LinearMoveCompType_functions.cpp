#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinearMoveCompType

#include "Basic.hpp"

#include "LinearMoveCompType_classes.hpp"
#include "LinearMoveCompType_parameters.hpp"


namespace SDK
{

// Function LinearMoveCompType.LinearMoveCompType_C.GetInterpolatedOffset
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector*                         NewRelativeLocation                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULinearMoveCompType_C::GetInterpolatedOffset(struct FVector* NewRelativeLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearMoveCompType_C", "GetInterpolatedOffset");

	Params::LinearMoveCompType_C_GetInterpolatedOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewRelativeLocation != nullptr)
		*NewRelativeLocation = std::move(Parms.NewRelativeLocation);
}


// Function LinearMoveCompType.LinearMoveCompType_C.GetRelativePosition
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULinearMoveCompType_C::GetRelativePosition(struct FVector* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LinearMoveCompType_C", "GetRelativePosition");

	Params::LinearMoveCompType_C_GetRelativePosition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FluxPlayerControllerBP

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"
#include "UnrealProject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FluxPlayerControllerBP.FluxPlayerControllerBP_C
// 0x0608 (0x1000 - 0x09F8)
class AFluxPlayerControllerBP_C final : public AFluxPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         QualityProfile;                                    // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0xC];                                      // 0x0A04(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   LastPostProcessSettings;                           // 0x0A10(0x0530)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasPostProcessSettings;                            // 0x0F40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F41[0x7];                                      // 0x0F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNGDSoundConfig                        PauseSoundConfig;                                  // 0x0F48(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FNGDSoundConfig                        ResumeSoundConfig;                                 // 0x0FA0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_FluxPlayerControllerBP(int32 EntryPoint);
	void BP_OnStandaloneGameResume();
	void BP_OnStandaloneGamePause();
	void Server_DeleteLocalData();
	void Client_SendAccuracyData(const TArray<struct FWeaponImpactData>& NewParam);
	void Server_RequestAccuracyData();
	void BP_OnGameInitialized();
	void InpActEvt_QualityMax_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_QualityMin_K2Node_InputActionEvent_1(const struct FKey& Key);
	class UNGDWidgetContainer* GetControlsWidgetContainer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FluxPlayerControllerBP_C">();
	}
	static class AFluxPlayerControllerBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFluxPlayerControllerBP_C>();
	}
};
static_assert(alignof(AFluxPlayerControllerBP_C) == 0x000010, "Wrong alignment on AFluxPlayerControllerBP_C");
static_assert(sizeof(AFluxPlayerControllerBP_C) == 0x001000, "Wrong size on AFluxPlayerControllerBP_C");
static_assert(offsetof(AFluxPlayerControllerBP_C, UberGraphFrame) == 0x0009F8, "Member 'AFluxPlayerControllerBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFluxPlayerControllerBP_C, QualityProfile) == 0x000A00, "Member 'AFluxPlayerControllerBP_C::QualityProfile' has a wrong offset!");
static_assert(offsetof(AFluxPlayerControllerBP_C, LastPostProcessSettings) == 0x000A10, "Member 'AFluxPlayerControllerBP_C::LastPostProcessSettings' has a wrong offset!");
static_assert(offsetof(AFluxPlayerControllerBP_C, HasPostProcessSettings) == 0x000F40, "Member 'AFluxPlayerControllerBP_C::HasPostProcessSettings' has a wrong offset!");
static_assert(offsetof(AFluxPlayerControllerBP_C, PauseSoundConfig) == 0x000F48, "Member 'AFluxPlayerControllerBP_C::PauseSoundConfig' has a wrong offset!");
static_assert(offsetof(AFluxPlayerControllerBP_C, ResumeSoundConfig) == 0x000FA0, "Member 'AFluxPlayerControllerBP_C::ResumeSoundConfig' has a wrong offset!");

}


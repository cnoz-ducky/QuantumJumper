#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosionCompass

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ExplosionCompass.ExplosionCompass_C.ExecuteUbergraph_ExplosionCompass
// 0x0034 (0x0034 - 0x0000)
struct ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Distance;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass) == 0x000004, "Wrong alignment on ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass");
static_assert(sizeof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass) == 0x000034, "Wrong size on ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, EntryPoint) == 0x000000, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::EntryPoint' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, K2Node_Event_Distance) == 0x000004, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::K2Node_Event_Distance' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_FMin_ReturnValue) == 0x00000C, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00001C, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_MapRangeClamped_ReturnValue) == 0x000024, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'ExplosionCompass_C_ExecuteUbergraph_ExplosionCompass::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function ExplosionCompass.ExplosionCompass_C.OnUpdated
// 0x0004 (0x0004 - 0x0000)
struct ExplosionCompass_C_OnUpdated final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosionCompass_C_OnUpdated) == 0x000004, "Wrong alignment on ExplosionCompass_C_OnUpdated");
static_assert(sizeof(ExplosionCompass_C_OnUpdated) == 0x000004, "Wrong size on ExplosionCompass_C_OnUpdated");
static_assert(offsetof(ExplosionCompass_C_OnUpdated, Distance) == 0x000000, "Member 'ExplosionCompass_C_OnUpdated::Distance' has a wrong offset!");

// Function ExplosionCompass.ExplosionCompass_C.IsCompassVisible
// 0x0040 (0x0040 - 0x0000)
struct ExplosionCompass_C_IsCompassVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    CallFunc_GetCurrentViewTargetAsCharacter_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosionCompass_C_IsCompassVisible) == 0x000008, "Wrong alignment on ExplosionCompass_C_IsCompassVisible");
static_assert(sizeof(ExplosionCompass_C_IsCompassVisible) == 0x000040, "Wrong size on ExplosionCompass_C_IsCompassVisible");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, ReturnValue) == 0x000000, "Member 'ExplosionCompass_C_IsCompassVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_GetCurrentViewTargetAsCharacter_ReturnValue) == 0x000008, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_GetCurrentViewTargetAsCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00001C, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00002C, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_Less_FloatFloat_ReturnValue) == 0x00003C, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosionCompass_C_IsCompassVisible, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'ExplosionCompass_C_IsCompassVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}


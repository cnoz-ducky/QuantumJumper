#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NGDOnlineService

#include "Basic.hpp"


namespace SDK
{

// Enum NGDOnlineService.EAvatarSizes
// NumValues: 0x0004
enum class EAvatarSizes : uint8
{
	Small                                    = 0,
	Medium                                   = 1,
	Large                                    = 2,
	EAvatarSizes_MAX                         = 3,
};

// ScriptStruct NGDOnlineService.OnlineSessionSearchResultContainer
// 0x00B8 (0x00B8 - 0x0000)
struct alignas(0x08) FOnlineSessionSearchResultContainer final
{
public:
	uint8                                         Pad_0[0xB8];                                       // 0x0000(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineSessionSearchResultContainer) == 0x000008, "Wrong alignment on FOnlineSessionSearchResultContainer");
static_assert(sizeof(FOnlineSessionSearchResultContainer) == 0x0000B8, "Wrong size on FOnlineSessionSearchResultContainer");

// ScriptStruct NGDOnlineService.PartyMemberRepl
// 0x0010 (0x0010 - 0x0000)
struct FPartyMemberRepl final
{
public:
	class UNGDPartyMember*                        PartyMember;                                       // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReplicationFlag;                                   // 0x0008(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPartyMemberRepl) == 0x000008, "Wrong alignment on FPartyMemberRepl");
static_assert(sizeof(FPartyMemberRepl) == 0x000010, "Wrong size on FPartyMemberRepl");
static_assert(offsetof(FPartyMemberRepl, PartyMember) == 0x000000, "Member 'FPartyMemberRepl::PartyMember' has a wrong offset!");
static_assert(offsetof(FPartyMemberRepl, ReplicationFlag) == 0x000008, "Member 'FPartyMemberRepl::ReplicationFlag' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DefaultSpinner_Override

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AutoSettings_structs.hpp"


namespace SDK::Params
{

// Function DefaultSpinner_Override.DefaultSpinner_Override_C.ExecuteUbergraph_DefaultSpinner_Override
// 0x0004 (0x0004 - 0x0000)
struct DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override) == 0x000004, "Wrong alignment on DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override");
static_assert(sizeof(DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override) == 0x000004, "Wrong size on DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override");
static_assert(offsetof(DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override, EntryPoint) == 0x000000, "Member 'DefaultSpinner_Override_C_ExecuteUbergraph_DefaultSpinner_Override::EntryPoint' has a wrong offset!");

// Function DefaultSpinner_Override.DefaultSpinner_Override_C.GetLabelText
// 0x0040 (0x0040 - 0x0000)
struct DefaultSpinner_Override_C_GetLabelText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FSettingOption                         CallFunc_GetCurrentOption_ReturnValue;             // 0x0018(0x0028)()
};
static_assert(alignof(DefaultSpinner_Override_C_GetLabelText) == 0x000008, "Wrong alignment on DefaultSpinner_Override_C_GetLabelText");
static_assert(sizeof(DefaultSpinner_Override_C_GetLabelText) == 0x000040, "Wrong size on DefaultSpinner_Override_C_GetLabelText");
static_assert(offsetof(DefaultSpinner_Override_C_GetLabelText, ReturnValue) == 0x000000, "Member 'DefaultSpinner_Override_C_GetLabelText::ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLabelText, CallFunc_GetCurrentOption_ReturnValue) == 0x000018, "Member 'DefaultSpinner_Override_C_GetLabelText::CallFunc_GetCurrentOption_ReturnValue' has a wrong offset!");

// Function DefaultSpinner_Override.DefaultSpinner_Override_C.GetLeftArrowColorAndOpacity
// 0x0060 (0x0060 - 0x0000)
struct DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           ParentWidget;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidPrevious_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidPrevious_ReturnValue_1;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity) == 0x000008, "Wrong alignment on DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity");
static_assert(sizeof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity) == 0x000060, "Wrong size on DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, ReturnValue) == 0x000000, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, ParentWidget) == 0x000010, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::ParentWidget' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, Temp_bool_Variable) == 0x000018, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, Temp_float_Variable) == 0x00001C, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, Temp_float_Variable_1) == 0x000020, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, Temp_bool_Variable_1) == 0x000024, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, Temp_float_Variable_2) == 0x000028, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, Temp_float_Variable_3) == 0x00002C, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, CallFunc_HasValidPrevious_ReturnValue) == 0x000030, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::CallFunc_HasValidPrevious_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, CallFunc_IsHovered_ReturnValue) == 0x000031, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, K2Node_Select_Default) == 0x000034, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, CallFunc_HasValidPrevious_ReturnValue_1) == 0x000038, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::CallFunc_HasValidPrevious_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, K2Node_MakeStruct_LinearColor) == 0x00003C, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, K2Node_Select_Default_1) == 0x00004C, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity, K2Node_MakeStruct_LinearColor_1) == 0x000050, "Member 'DefaultSpinner_Override_C_GetLeftArrowColorAndOpacity::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function DefaultSpinner_Override.DefaultSpinner_Override_C.GetRightArrowColorAndOpacity
// 0x0058 (0x0058 - 0x0000)
struct DefaultSpinner_Override_C_GetRightArrowColorAndOpacity final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidNext_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidNext_ReturnValue_1;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity) == 0x000004, "Wrong alignment on DefaultSpinner_Override_C_GetRightArrowColorAndOpacity");
static_assert(sizeof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity) == 0x000058, "Wrong size on DefaultSpinner_Override_C_GetRightArrowColorAndOpacity");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, ReturnValue) == 0x000000, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, Temp_bool_Variable) == 0x000010, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, Temp_float_Variable) == 0x000014, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, Temp_float_Variable_1) == 0x000018, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, Temp_bool_Variable_1) == 0x00001C, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, Temp_float_Variable_2) == 0x000020, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, Temp_float_Variable_3) == 0x000024, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, CallFunc_HasValidNext_ReturnValue) == 0x000028, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::CallFunc_HasValidNext_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, CallFunc_IsHovered_ReturnValue) == 0x000029, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, K2Node_Select_Default) == 0x00002C, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, CallFunc_HasValidNext_ReturnValue_1) == 0x000030, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::CallFunc_HasValidNext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, K2Node_MakeStruct_LinearColor) == 0x000034, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, K2Node_Select_Default_1) == 0x000044, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(DefaultSpinner_Override_C_GetRightArrowColorAndOpacity, K2Node_MakeStruct_LinearColor_1) == 0x000048, "Member 'DefaultSpinner_Override_C_GetRightArrowColorAndOpacity::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

}


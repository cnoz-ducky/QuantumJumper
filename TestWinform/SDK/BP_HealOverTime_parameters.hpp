#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealOverTime

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HealOverTime.BP_HealOverTime_C.ExecuteUbergraph_BP_HealOverTime
// 0x0240 (0x0240 - 0x0000)
struct BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTWAbilityInstanceData                 CallFunc_GetInstanceData_ReturnValue;              // 0x0008(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FTWAbilityInstanceData                 CallFunc_GetInstanceData_ReturnValue_1;            // 0x0020(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWGameEventObserver*                   CallFunc_GetGameEventObserver_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityInstanceData                 CallFunc_GetInstanceData_ReturnValue_2;            // 0x0050(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue_2;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityInstanceData                 CallFunc_GetInstanceData_ReturnValue_3;            // 0x0070(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UTWGameEventObserver*                   CallFunc_GetGameEventObserver_ReturnValue_1;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue_3;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem_1;                  // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             K2Node_Event_AbilityDataHandle;                    // 0x00A0(0x0020)(ConstParm)
	bool                                          K2Node_Event_bShouldTriggerLogic;                  // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityExecutionData                CallFunc_GetAbilityExecutionData_ReturnValue;      // 0x00C8(0x0028)(NoDestructor, ContainsInstancedReference)
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem;                    // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWAbilitiesComponent*                  K2Node_Event_Caster_AbilityComp;                   // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INGDDamageable>        CallFunc_IsAlive_self_CastInput;                   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimeWatchEvent*                        K2Node_CustomEvent_Event;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTimeWatchEvent* Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	class UTWKillEvent*                           K2Node_DynamicCast_AsTWKill_Event;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ATimeWatchCharacter* DamageReceiver, class AActor* DamageInstigator)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0144(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UTimeWatchEvent* Event)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ATimeWatchCharacter* DamageReceiver, class AActor* DamageInstigator)> K2Node_CreateDelegate_OutputDelegate_3; // 0x0164(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    K2Node_CustomEvent_DamageReceiver;                 // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageInstigator;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityInstanceData                 CallFunc_GetInstanceData_ReturnValue_4;            // 0x0188(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue_4;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)> K2Node_CreateDelegate_OutputDelegate_4; // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	EFluxCapacitorStates                          K2Node_CustomEvent_OldState;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_NewState;                       // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)> K2Node_CreateDelegate_OutputDelegate_5; // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTWAbilityInstanceData                 CallFunc_GetInstanceData_ReturnValue_5;            // 0x01D8(0x0018)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_UsedInLoop_ReturnValue;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue_5;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWGameEventObserver*                   CallFunc_GetGameEventObserver_ReturnValue_2;       // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnderResetConditions_ReturnValue;       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20B[0x1];                                      // 0x020B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UTimeWatchEvent* Event)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x020C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ATimeWatchCharacter* DamageReceiver, class AActor* DamageInstigator)> K2Node_CreateDelegate_OutputDelegate_7; // 0x021C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState)> K2Node_CreateDelegate_OutputDelegate_8; // 0x022C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime) == 0x000008, "Wrong alignment on BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime");
static_assert(sizeof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime) == 0x000240, "Wrong size on BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, EntryPoint) == 0x000000, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetInstanceData_ReturnValue) == 0x000008, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetInstanceData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetInstanceData_ReturnValue_1) == 0x000020, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetInstanceData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameState_ReturnValue_1) == 0x000040, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameEventObserver_ReturnValue) == 0x000048, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameEventObserver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetInstanceData_ReturnValue_2) == 0x000050, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetInstanceData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameState_ReturnValue_2) == 0x000068, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetInstanceData_ReturnValue_3) == 0x000070, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetInstanceData_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameEventObserver_ReturnValue_1) == 0x000088, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameEventObserver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameState_ReturnValue_3) == 0x000090, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_Event_InTWAbilitySystem_1) == 0x000098, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_Event_InTWAbilitySystem_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_Event_AbilityDataHandle) == 0x0000A0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_Event_AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_Event_bShouldTriggerLogic) == 0x0000C0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_Event_bShouldTriggerLogic' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_Event_DeltaSeconds) == 0x0000C4, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetAbilityExecutionData_ReturnValue) == 0x0000C8, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetAbilityExecutionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_Event_InTWAbilitySystem) == 0x0000F0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_Event_InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_Event_Caster_AbilityComp) == 0x0000F8, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_Event_Caster_AbilityComp' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_IsAlive_self_CastInput) == 0x000100, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_IsAlive_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_IsAlive_ReturnValue) == 0x000110, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_Not_PreBool_ReturnValue) == 0x000111, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CustomEvent_Event) == 0x000118, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate) == 0x000120, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_DynamicCast_AsTWKill_Event) == 0x000130, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_DynamicCast_AsTWKill_Event' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x00013C, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_1) == 0x000144, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_2) == 0x000154, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_3) == 0x000164, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CustomEvent_DamageReceiver) == 0x000178, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CustomEvent_DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CustomEvent_DamageInstigator) == 0x000180, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CustomEvent_DamageInstigator' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetInstanceData_ReturnValue_4) == 0x000188, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetInstanceData_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameState_ReturnValue_4) == 0x0001A0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001A8, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CustomEvent_OldState) == 0x0001B8, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CustomEvent_NewState) == 0x0001B9, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001BA, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001BB, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001BC, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_5) == 0x0001C0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetInstanceData_ReturnValue_5) == 0x0001D8, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetInstanceData_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_UsedInLoop_ReturnValue) == 0x0001F0, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_UsedInLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F1, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameState_ReturnValue_5) == 0x0001F8, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_GetGameEventObserver_ReturnValue_2) == 0x000200, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_GetGameEventObserver_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_IsUnderResetConditions_ReturnValue) == 0x000208, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_IsUnderResetConditions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_BooleanAND_ReturnValue_2) == 0x000209, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, CallFunc_BooleanOR_ReturnValue) == 0x00020A, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_6) == 0x00020C, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_7) == 0x00021C, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime, K2Node_CreateDelegate_OutputDelegate_8) == 0x00022C, "Member 'BP_HealOverTime_C_ExecuteUbergraph_BP_HealOverTime::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.OnGameStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_HealOverTime_C_OnGameStateChanged final
{
public:
	EFluxCapacitorStates                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealOverTime_C_OnGameStateChanged) == 0x000001, "Wrong alignment on BP_HealOverTime_C_OnGameStateChanged");
static_assert(sizeof(BP_HealOverTime_C_OnGameStateChanged) == 0x000002, "Wrong size on BP_HealOverTime_C_OnGameStateChanged");
static_assert(offsetof(BP_HealOverTime_C_OnGameStateChanged, OldState) == 0x000000, "Member 'BP_HealOverTime_C_OnGameStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_OnGameStateChanged, NewState) == 0x000001, "Member 'BP_HealOverTime_C_OnGameStateChanged::NewState' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.OnDamageReceived
// 0x0010 (0x0010 - 0x0000)
struct BP_HealOverTime_C_OnDamageReceived final
{
public:
	class ATimeWatchCharacter*                    DamageReceiver;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageInstigator;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealOverTime_C_OnDamageReceived) == 0x000008, "Wrong alignment on BP_HealOverTime_C_OnDamageReceived");
static_assert(sizeof(BP_HealOverTime_C_OnDamageReceived) == 0x000010, "Wrong size on BP_HealOverTime_C_OnDamageReceived");
static_assert(offsetof(BP_HealOverTime_C_OnDamageReceived, DamageReceiver) == 0x000000, "Member 'BP_HealOverTime_C_OnDamageReceived::DamageReceiver' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_OnDamageReceived, DamageInstigator) == 0x000008, "Member 'BP_HealOverTime_C_OnDamageReceived::DamageInstigator' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.Observer Generic Event
// 0x0008 (0x0008 - 0x0000)
struct BP_HealOverTime_C_Observer_Generic_Event final
{
public:
	class UTimeWatchEvent*                        Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealOverTime_C_Observer_Generic_Event) == 0x000008, "Wrong alignment on BP_HealOverTime_C_Observer_Generic_Event");
static_assert(sizeof(BP_HealOverTime_C_Observer_Generic_Event) == 0x000008, "Wrong size on BP_HealOverTime_C_Observer_Generic_Event");
static_assert(offsetof(BP_HealOverTime_C_Observer_Generic_Event, Event) == 0x000000, "Member 'BP_HealOverTime_C_Observer_Generic_Event::Event' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.BP_OnPreActivated
// 0x0010 (0x0010 - 0x0000)
struct BP_HealOverTime_C_BP_OnPreActivated final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWAbilitiesComponent*                  Caster_AbilityComp;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealOverTime_C_BP_OnPreActivated) == 0x000008, "Wrong alignment on BP_HealOverTime_C_BP_OnPreActivated");
static_assert(sizeof(BP_HealOverTime_C_BP_OnPreActivated) == 0x000010, "Wrong size on BP_HealOverTime_C_BP_OnPreActivated");
static_assert(offsetof(BP_HealOverTime_C_BP_OnPreActivated, InTWAbilitySystem) == 0x000000, "Member 'BP_HealOverTime_C_BP_OnPreActivated::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_BP_OnPreActivated, Caster_AbilityComp) == 0x000008, "Member 'BP_HealOverTime_C_BP_OnPreActivated::Caster_AbilityComp' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.BP_Update
// 0x0004 (0x0004 - 0x0000)
struct BP_HealOverTime_C_BP_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealOverTime_C_BP_Update) == 0x000004, "Wrong alignment on BP_HealOverTime_C_BP_Update");
static_assert(sizeof(BP_HealOverTime_C_BP_Update) == 0x000004, "Wrong size on BP_HealOverTime_C_BP_Update");
static_assert(offsetof(BP_HealOverTime_C_BP_Update, DeltaSeconds) == 0x000000, "Member 'BP_HealOverTime_C_BP_Update::DeltaSeconds' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.BP_OnActivated
// 0x0030 (0x0030 - 0x0000)
struct BP_HealOverTime_C_BP_OnActivated final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             AbilityDataHandle;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bShouldTriggerLogic;                               // 0x0028(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealOverTime_C_BP_OnActivated) == 0x000008, "Wrong alignment on BP_HealOverTime_C_BP_OnActivated");
static_assert(sizeof(BP_HealOverTime_C_BP_OnActivated) == 0x000030, "Wrong size on BP_HealOverTime_C_BP_OnActivated");
static_assert(offsetof(BP_HealOverTime_C_BP_OnActivated, InTWAbilitySystem) == 0x000000, "Member 'BP_HealOverTime_C_BP_OnActivated::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_BP_OnActivated, AbilityDataHandle) == 0x000008, "Member 'BP_HealOverTime_C_BP_OnActivated::AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_BP_OnActivated, bShouldTriggerLogic) == 0x000028, "Member 'BP_HealOverTime_C_BP_OnActivated::bShouldTriggerLogic' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.Heal
// 0x0030 (0x0030 - 0x0000)
struct BP_HealOverTime_C_Heal final
{
public:
	int32                                         Heal_Percent;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class INGDDamageable>        CallFunc_GetHealth_self_CastInput;                 // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BP_GetHealth_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealOverTime_C_Heal) == 0x000008, "Wrong alignment on BP_HealOverTime_C_Heal");
static_assert(sizeof(BP_HealOverTime_C_Heal) == 0x000030, "Wrong size on BP_HealOverTime_C_Heal");
static_assert(offsetof(BP_HealOverTime_C_Heal, Heal_Percent) == 0x000000, "Member 'BP_HealOverTime_C_Heal::Heal_Percent' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000004, "Member 'BP_HealOverTime_C_Heal::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_GetHealth_self_CastInput) == 0x000008, "Member 'BP_HealOverTime_C_Heal::CallFunc_GetHealth_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_GetHealth_ReturnValue) == 0x000018, "Member 'BP_HealOverTime_C_Heal::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_HealOverTime_C_Heal::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_BP_GetHealth_ReturnValue) == 0x000020, "Member 'BP_HealOverTime_C_Heal::CallFunc_BP_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_HealOverTime_C_Heal::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_Heal, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'BP_HealOverTime_C_Heal::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.InterruptAbility
// 0x0010 (0x0010 - 0x0000)
struct BP_HealOverTime_C_InterruptAbility final
{
public:
	class ATimeWatchCharacter*                    TWCharacter;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealOverTime_C_InterruptAbility) == 0x000008, "Wrong alignment on BP_HealOverTime_C_InterruptAbility");
static_assert(sizeof(BP_HealOverTime_C_InterruptAbility) == 0x000010, "Wrong size on BP_HealOverTime_C_InterruptAbility");
static_assert(offsetof(BP_HealOverTime_C_InterruptAbility, TWCharacter) == 0x000000, "Member 'BP_HealOverTime_C_InterruptAbility::TWCharacter' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_InterruptAbility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_HealOverTime_C_InterruptAbility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.PlayHealingSound
// 0x0058 (0x0058 - 0x0000)
struct BP_HealOverTime_C_PlayHealingSound final
{
public:
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFluxPlayerController*                  K2Node_DynamicCast_AsFlux_Player_Controller;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNGDAkComponent*                        CallFunc_GetAkLocalSounds_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNGDAkComponent*                        CallFunc_PostSound_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealOverTime_C_PlayHealingSound) == 0x000008, "Wrong alignment on BP_HealOverTime_C_PlayHealingSound");
static_assert(sizeof(BP_HealOverTime_C_PlayHealingSound) == 0x000058, "Wrong size on BP_HealOverTime_C_PlayHealingSound");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_GetLocalRole_ReturnValue) == 0x000000, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_IsPlayerControlled_ReturnValue) == 0x000011, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, K2Node_DynamicCast_AsFlux_Player_Controller) == 0x000028, "Member 'BP_HealOverTime_C_PlayHealingSound::K2Node_DynamicCast_AsFlux_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HealOverTime_C_PlayHealingSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_GetAkLocalSounds_ReturnValue) == 0x000038, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_GetAkLocalSounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_PostSound_ReturnValue) == 0x000048, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_PostSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_PlayHealingSound, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BP_HealOverTime_C_PlayHealingSound::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_HealOverTime.BP_HealOverTime_C.StopHealingSound
// 0x0058 (0x0058 - 0x0000)
struct BP_HealOverTime_C_StopHealingSound final
{
public:
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFluxPlayerController*                  K2Node_DynamicCast_AsFlux_Player_Controller;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNGDAkComponent*                        CallFunc_GetAkLocalSounds_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNGDAkComponent*                        CallFunc_PostSound_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HealOverTime_C_StopHealingSound) == 0x000008, "Wrong alignment on BP_HealOverTime_C_StopHealingSound");
static_assert(sizeof(BP_HealOverTime_C_StopHealingSound) == 0x000058, "Wrong size on BP_HealOverTime_C_StopHealingSound");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_GetLocalRole_ReturnValue) == 0x000000, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_IsPlayerControlled_ReturnValue) == 0x000011, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, K2Node_DynamicCast_AsFlux_Player_Controller) == 0x000028, "Member 'BP_HealOverTime_C_StopHealingSound::K2Node_DynamicCast_AsFlux_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HealOverTime_C_StopHealingSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_GetAkLocalSounds_ReturnValue) == 0x000038, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_GetAkLocalSounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_PostSound_ReturnValue) == 0x000048, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_PostSound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealOverTime_C_StopHealingSound, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'BP_HealOverTime_C_StopHealingSound::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


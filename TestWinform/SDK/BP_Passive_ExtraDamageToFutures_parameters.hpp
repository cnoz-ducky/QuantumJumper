#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Passive_ExtraDamageToFutures

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.ExecuteUbergraph_BP_Passive_ExtraDamageToFutures
// 0x0100 (0x0100 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem_2;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             K2Node_Event_AbilityDataHandle_1;                  // 0x0010(0x0020)(ConstParm)
	bool                                          K2Node_Event_bShouldTriggerLogic_1;                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem_1;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWAbilitiesComponent*                  K2Node_Event_Caster_AbilityComp;                   // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayer_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWGameplayAbilitySystem*               K2Node_Event_InTWAbilitySystem;                    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             K2Node_Event_AbilityDataHandle;                    // 0x0058(0x0020)(ConstParm)
	bool                                          K2Node_Event_bShouldTriggerLogic;                  // 0x0078(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTWAbilityExecutionData                CallFunc_GetAbilityExecutionData_ReturnValue;      // 0x0080(0x0028)(NoDestructor, ContainsInstancedReference)
	TDelegate<void(class UTimeWatchEvent* Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class UTimeWatchEvent*                        K2Node_CustomEvent_Event;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInstigatorFromKillEvent_IsValid;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetInstigatorFromKillEvent_EventInstigator; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    CallFunc_GetGameState_ReturnValue;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        CallFunc_GetWeaponFromInstigator_InstigatorWeapon; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWGameEventObserver*                   CallFunc_GetGameEventObserver_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANGDCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchCharacter*                    K2Node_DynamicCast_AsTime_Watch_Character;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalPlayer_ReturnValue;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures) == 0x000100, "Wrong size on BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, EntryPoint) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_InTWAbilitySystem_2) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_InTWAbilitySystem_2' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_AbilityDataHandle_1) == 0x000010, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_AbilityDataHandle_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_bShouldTriggerLogic_1) == 0x000030, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_bShouldTriggerLogic_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_InTWAbilitySystem_1) == 0x000038, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_InTWAbilitySystem_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_Caster_AbilityComp) == 0x000040, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_Caster_AbilityComp' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_IsPlayer_ReturnValue) == 0x000048, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_IsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_InTWAbilitySystem) == 0x000050, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_AbilityDataHandle) == 0x000058, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_Event_bShouldTriggerLogic) == 0x000078, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_Event_bShouldTriggerLogic' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetAbilityExecutionData_ReturnValue) == 0x000080, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetAbilityExecutionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_CreateDelegate_OutputDelegate) == 0x0000A8, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_CustomEvent_Event) == 0x0000B8, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetInstigatorFromKillEvent_IsValid) == 0x0000C0, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetInstigatorFromKillEvent_IsValid' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetInstigatorFromKillEvent_EventInstigator) == 0x0000C8, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetInstigatorFromKillEvent_EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetGameState_ReturnValue) == 0x0000D0, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetWeaponFromInstigator_InstigatorWeapon) == 0x0000D8, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetWeaponFromInstigator_InstigatorWeapon' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetGameEventObserver_ReturnValue) == 0x0000E0, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetGameEventObserver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_GetOwnerCharacter_ReturnValue) == 0x0000E8, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_DynamicCast_AsTime_Watch_Character) == 0x0000F0, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_DynamicCast_AsTime_Watch_Character' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_IsValid_ReturnValue) == 0x0000F9, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000FA, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures, CallFunc_IsLocalPlayer_ReturnValue) == 0x0000FB, "Member 'BP_Passive_ExtraDamageToFutures_C_ExecuteUbergraph_BP_Passive_ExtraDamageToFutures::CallFunc_IsLocalPlayer_ReturnValue' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.OnKillEventRecived
// 0x0008 (0x0008 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived final
{
public:
	class UTimeWatchEvent*                        Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived) == 0x000008, "Wrong size on BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived, Event) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_OnKillEventRecived::Event' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.BP_OnActivated
// 0x0030 (0x0030 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_BP_OnActivated final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             AbilityDataHandle;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bShouldTriggerLogic;                               // 0x0028(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_BP_OnActivated) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_BP_OnActivated");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_BP_OnActivated) == 0x000030, "Wrong size on BP_Passive_ExtraDamageToFutures_C_BP_OnActivated");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnActivated, InTWAbilitySystem) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnActivated::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnActivated, AbilityDataHandle) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnActivated::AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnActivated, bShouldTriggerLogic) == 0x000028, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnActivated::bShouldTriggerLogic' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.BP_Update
// 0x0004 (0x0004 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_BP_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_BP_Update) == 0x000004, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_BP_Update");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_BP_Update) == 0x000004, "Wrong size on BP_Passive_ExtraDamageToFutures_C_BP_Update");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_Update, DeltaSeconds) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_Update::DeltaSeconds' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.BP_OnPreActivated
// 0x0010 (0x0010 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWAbilitiesComponent*                  Caster_AbilityComp;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated) == 0x000010, "Wrong size on BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated, InTWAbilitySystem) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated, Caster_AbilityComp) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnPreActivated::Caster_AbilityComp' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.BP_OnReExecuted
// 0x0030 (0x0030 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted final
{
public:
	class UTWGameplayAbilitySystem*               InTWAbilitySystem;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             AbilityDataHandle;                                 // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bShouldTriggerLogic;                               // 0x0028(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted) == 0x000030, "Wrong size on BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted, InTWAbilitySystem) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted::InTWAbilitySystem' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted, AbilityDataHandle) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted::AbilityDataHandle' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted, bShouldTriggerLogic) == 0x000028, "Member 'BP_Passive_ExtraDamageToFutures_C_BP_OnReExecuted::bShouldTriggerLogic' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.MakeAbilityCustomDataHandle
// 0x0078 (0x0078 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle final
{
public:
	class UTWAbilitiesComponent*                  Caster_AbilityComp;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTWAbilityCustomDataHandle             ReturnValue;                                       // 0x0008(0x0020)(Parm, OutParm, ReturnParm)
	class ATimeWatchCharacter*                    CallFunc_GetOwningCharacter_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FTWAbilityCustomDataHandle             CallFunc_AbilityCustomDataFromVectors_ReturnValue; // 0x0058(0x0020)()
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle) == 0x000078, "Wrong size on BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, Caster_AbilityComp) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::Caster_AbilityComp' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, ReturnValue) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, CallFunc_GetOwningCharacter_ReturnValue) == 0x000028, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::CallFunc_GetOwningCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00003C, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, K2Node_MakeArray_Array) == 0x000048, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle, CallFunc_AbilityCustomDataFromVectors_ReturnValue) == 0x000058, "Member 'BP_Passive_ExtraDamageToFutures_C_MakeAbilityCustomDataHandle::CallFunc_AbilityCustomDataFromVectors_ReturnValue' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.GetWeaponFromInstigator
// 0x0048 (0x0048 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator final
{
public:
	class AActor*                                 Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        InstigatorWeapon;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        K2Node_DynamicCast_AsTemporal_Weapon;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchProjectile*                   K2Node_DynamicCast_AsTime_Watch_Projectile;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeapon*                                CallFunc_GetOwnerWeapon_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        K2Node_DynamicCast_AsTemporal_Weapon_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator) == 0x000048, "Wrong size on BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, Instigator) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::Instigator' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, InstigatorWeapon) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::InstigatorWeapon' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, K2Node_DynamicCast_AsTemporal_Weapon) == 0x000010, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::K2Node_DynamicCast_AsTemporal_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, K2Node_DynamicCast_AsTime_Watch_Projectile) == 0x000020, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::K2Node_DynamicCast_AsTime_Watch_Projectile' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, CallFunc_GetOwnerWeapon_ReturnValue) == 0x000030, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::CallFunc_GetOwnerWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, K2Node_DynamicCast_AsTemporal_Weapon_1) == 0x000038, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::K2Node_DynamicCast_AsTemporal_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'BP_Passive_ExtraDamageToFutures_C_GetWeaponFromInstigator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_Passive_ExtraDamageToFutures.BP_Passive_ExtraDamageToFutures_C.GetInstigatorFromKillEvent
// 0x0038 (0x0038 - 0x0000)
struct BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent final
{
public:
	class UTimeWatchEvent*                        Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 EventInstigator;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTWHeadshotForKillfeedKill*             K2Node_DynamicCast_AsTWHeadshot_for_Killfeed_Kill; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTWKillForKillfeedEvent*                K2Node_DynamicCast_AsTWKill_for_Killfeed_Event;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent) == 0x000008, "Wrong alignment on BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent");
static_assert(sizeof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent) == 0x000038, "Wrong size on BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, Event) == 0x000000, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::Event' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, IsValid) == 0x000008, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::IsValid' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, EventInstigator) == 0x000010, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, K2Node_DynamicCast_AsTWHeadshot_for_Killfeed_Kill) == 0x000018, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::K2Node_DynamicCast_AsTWHeadshot_for_Killfeed_Kill' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, K2Node_DynamicCast_AsTWKill_for_Killfeed_Event) == 0x000028, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::K2Node_DynamicCast_AsTWKill_for_Killfeed_Event' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_Passive_ExtraDamageToFutures_C_GetInstigatorFromKillEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}


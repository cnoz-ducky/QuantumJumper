#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModeSelectionSlotWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function ModeSelectionSlotWidget.ModeSelectionSlotWidget_C.ExecuteUbergraph_ModeSelectionSlotWidget
// 0x0008 (0x0008 - 0x0000)
struct ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSmall;                             // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsWeapon;                            // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget) == 0x000004, "Wrong alignment on ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget");
static_assert(sizeof(ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget) == 0x000008, "Wrong size on ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget");
static_assert(offsetof(ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget, EntryPoint) == 0x000000, "Member 'ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget, K2Node_Event_bIsSmall) == 0x000004, "Member 'ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget::K2Node_Event_bIsSmall' has a wrong offset!");
static_assert(offsetof(ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget, K2Node_Event_bIsWeapon) == 0x000005, "Member 'ModeSelectionSlotWidget_C_ExecuteUbergraph_ModeSelectionSlotWidget::K2Node_Event_bIsWeapon' has a wrong offset!");

// Function ModeSelectionSlotWidget.ModeSelectionSlotWidget_C.BP_AdjustItemTileImage
// 0x0002 (0x0002 - 0x0000)
struct ModeSelectionSlotWidget_C_BP_AdjustItemTileImage final
{
public:
	bool                                          bIsSmall;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsWeapon;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ModeSelectionSlotWidget_C_BP_AdjustItemTileImage) == 0x000001, "Wrong alignment on ModeSelectionSlotWidget_C_BP_AdjustItemTileImage");
static_assert(sizeof(ModeSelectionSlotWidget_C_BP_AdjustItemTileImage) == 0x000002, "Wrong size on ModeSelectionSlotWidget_C_BP_AdjustItemTileImage");
static_assert(offsetof(ModeSelectionSlotWidget_C_BP_AdjustItemTileImage, bIsSmall) == 0x000000, "Member 'ModeSelectionSlotWidget_C_BP_AdjustItemTileImage::bIsSmall' has a wrong offset!");
static_assert(offsetof(ModeSelectionSlotWidget_C_BP_AdjustItemTileImage, bIsWeapon) == 0x000001, "Member 'ModeSelectionSlotWidget_C_BP_AdjustItemTileImage::bIsWeapon' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealthKitPickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_TemporalParticle_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HealthKitPickup.BP_HealthKitPickup_C
// 0x0060 (0x02B0 - 0x0250)
class ABP_HealthKitPickup_C final : public ABP_TemporalParticle_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PS_HealthkitPickup;                                // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HealthPickupFX_02;                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HealthPickupFX_01;                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI1;                                              // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI2;                                              // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Final_Size;                                        // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Material_1_Curve;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Light_Curve;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HealthKitPickup(int32 EntryPoint);
	void ParticleTick(float LifeCylcle);
	void OnParticleEnabled(bool NewState);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void TimeUpdate(float Time);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HealthKitPickup_C">();
	}
	static class ABP_HealthKitPickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HealthKitPickup_C>();
	}
};
static_assert(alignof(ABP_HealthKitPickup_C) == 0x000008, "Wrong alignment on ABP_HealthKitPickup_C");
static_assert(sizeof(ABP_HealthKitPickup_C) == 0x0002B0, "Wrong size on ABP_HealthKitPickup_C");
static_assert(offsetof(ABP_HealthKitPickup_C, UberGraphFrame) == 0x000250, "Member 'ABP_HealthKitPickup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, PointLight) == 0x000258, "Member 'ABP_HealthKitPickup_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, PS_HealthkitPickup) == 0x000260, "Member 'ABP_HealthKitPickup_C::PS_HealthkitPickup' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, SM_HealthPickupFX_02) == 0x000268, "Member 'ABP_HealthKitPickup_C::SM_HealthPickupFX_02' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, Root) == 0x000270, "Member 'ABP_HealthKitPickup_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, SM_HealthPickupFX_01) == 0x000278, "Member 'ABP_HealthKitPickup_C::SM_HealthPickupFX_01' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, DMI1) == 0x000280, "Member 'ABP_HealthKitPickup_C::DMI1' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, DMI2) == 0x000288, "Member 'ABP_HealthKitPickup_C::DMI2' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, Final_Size) == 0x000290, "Member 'ABP_HealthKitPickup_C::Final_Size' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, Material_1_Curve) == 0x0002A0, "Member 'ABP_HealthKitPickup_C::Material_1_Curve' has a wrong offset!");
static_assert(offsetof(ABP_HealthKitPickup_C, Light_Curve) == 0x0002A8, "Member 'ABP_HealthKitPickup_C::Light_Curve' has a wrong offset!");

}


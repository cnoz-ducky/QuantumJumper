#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_RadialFeedback

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WC_RadialFeedback.WC_RadialFeedback_C.ExecuteUbergraph_WC_RadialFeedback
// 0x0060 (0x0060 - 0x0000)
struct WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Event_HitWidget;                            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Progress;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Alpha;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Scale;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Rotation;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Cos_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Sin_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPI_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback) == 0x000008, "Wrong alignment on WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback");
static_assert(sizeof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback) == 0x000060, "Wrong size on WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, EntryPoint) == 0x000000, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, K2Node_Event_HitWidget) == 0x000008, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::K2Node_Event_HitWidget' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, K2Node_Event_Progress) == 0x000010, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::K2Node_Event_Progress' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, K2Node_Event_Alpha) == 0x000014, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::K2Node_Event_Alpha' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, K2Node_Event_Scale) == 0x000018, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::K2Node_Event_Scale' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, K2Node_Event_Rotation) == 0x00001C, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::K2Node_Event_Rotation' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Cos_ReturnValue) == 0x000020, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Sin_ReturnValue) == 0x000024, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_GetPI_ReturnValue) == 0x00003C, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_GetPI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000040, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000044, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000048, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_Add_FloatFloat_ReturnValue) == 0x00004C, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_MakeVector2D_ReturnValue_1) == 0x000050, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback, CallFunc_RadiansToDegrees_ReturnValue) == 0x000058, "Member 'WC_RadialFeedback_C_ExecuteUbergraph_WC_RadialFeedback::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");

// Function WC_RadialFeedback.WC_RadialFeedback_C.UpdateFeedback
// 0x0018 (0x0018 - 0x0000)
struct WC_RadialFeedback_C_UpdateFeedback final
{
public:
	class UWidget*                                HitWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scale;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotation;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_RadialFeedback_C_UpdateFeedback) == 0x000008, "Wrong alignment on WC_RadialFeedback_C_UpdateFeedback");
static_assert(sizeof(WC_RadialFeedback_C_UpdateFeedback) == 0x000018, "Wrong size on WC_RadialFeedback_C_UpdateFeedback");
static_assert(offsetof(WC_RadialFeedback_C_UpdateFeedback, HitWidget) == 0x000000, "Member 'WC_RadialFeedback_C_UpdateFeedback::HitWidget' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_UpdateFeedback, Progress) == 0x000008, "Member 'WC_RadialFeedback_C_UpdateFeedback::Progress' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_UpdateFeedback, Alpha) == 0x00000C, "Member 'WC_RadialFeedback_C_UpdateFeedback::Alpha' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_UpdateFeedback, Scale) == 0x000010, "Member 'WC_RadialFeedback_C_UpdateFeedback::Scale' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_UpdateFeedback, Rotation) == 0x000014, "Member 'WC_RadialFeedback_C_UpdateFeedback::Rotation' has a wrong offset!");

// Function WC_RadialFeedback.WC_RadialFeedback_C.Initialize
// 0x0098 (0x0098 - 0x0000)
struct WC_RadialFeedback_C_Initialize final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRadialFeedback                        CallFunc_Array_Get_Item;                           // 0x0018(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_RadialFeedback_C_Initialize) == 0x000008, "Wrong alignment on WC_RadialFeedback_C_Initialize");
static_assert(sizeof(WC_RadialFeedback_C_Initialize) == 0x000098, "Wrong size on WC_RadialFeedback_C_Initialize");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WC_RadialFeedback_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WC_RadialFeedback_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WC_RadialFeedback_C_Initialize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'WC_RadialFeedback_C_Initialize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Array_Get_Item) == 0x000018, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_RadialFeedback_C_Initialize, CallFunc_AddChildToCanvas_ReturnValue) == 0x000090, "Member 'WC_RadialFeedback_C_Initialize::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

}


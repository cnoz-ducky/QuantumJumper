#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Temporal_Emitter

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Temporal_Emitter.BP_Temporal_Emitter_C
// 0x0060 (0x0170 - 0x0110)
class UBP_Temporal_Emitter_C final : public UTWTemporalEmitter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0110(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          EmitterEnabled;                                    // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FX_Quality_Setting;                                // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     ParticleMaterial;                                  // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x0134(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Emission_Start_Time;                               // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Emission_End_Time;                                 // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_Random_Rotation;                               // 0x0140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Max_Rotation;                                      // 0x0144(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Min_Rotation;                                      // 0x0150(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         thirdPersonScale;                                  // 0x015C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TranslucencySortPriority;                          // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   SM_Component;                                      // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Temporal_Emitter(int32 EntryPoint);
	void Initialize_Emitter(float Particle_System_Start_Time, bool IsFirstPerson);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Temporal_Emitter_C">();
	}
	static class UBP_Temporal_Emitter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Temporal_Emitter_C>();
	}
};
static_assert(alignof(UBP_Temporal_Emitter_C) == 0x000010, "Wrong alignment on UBP_Temporal_Emitter_C");
static_assert(sizeof(UBP_Temporal_Emitter_C) == 0x000170, "Wrong size on UBP_Temporal_Emitter_C");
static_assert(offsetof(UBP_Temporal_Emitter_C, UberGraphFrame) == 0x000110, "Member 'UBP_Temporal_Emitter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, EmitterEnabled) == 0x000118, "Member 'UBP_Temporal_Emitter_C::EmitterEnabled' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, FX_Quality_Setting) == 0x00011C, "Member 'UBP_Temporal_Emitter_C::FX_Quality_Setting' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, ParticleMaterial) == 0x000120, "Member 'UBP_Temporal_Emitter_C::ParticleMaterial' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Mid) == 0x000128, "Member 'UBP_Temporal_Emitter_C::Mid' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Duration) == 0x000130, "Member 'UBP_Temporal_Emitter_C::Duration' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Delay) == 0x000134, "Member 'UBP_Temporal_Emitter_C::Delay' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Emission_Start_Time) == 0x000138, "Member 'UBP_Temporal_Emitter_C::Emission_Start_Time' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Emission_End_Time) == 0x00013C, "Member 'UBP_Temporal_Emitter_C::Emission_End_Time' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Add_Random_Rotation) == 0x000140, "Member 'UBP_Temporal_Emitter_C::Add_Random_Rotation' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Max_Rotation) == 0x000144, "Member 'UBP_Temporal_Emitter_C::Max_Rotation' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, Min_Rotation) == 0x000150, "Member 'UBP_Temporal_Emitter_C::Min_Rotation' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, thirdPersonScale) == 0x00015C, "Member 'UBP_Temporal_Emitter_C::thirdPersonScale' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, TranslucencySortPriority) == 0x000160, "Member 'UBP_Temporal_Emitter_C::TranslucencySortPriority' has a wrong offset!");
static_assert(offsetof(UBP_Temporal_Emitter_C, SM_Component) == 0x000168, "Member 'UBP_Temporal_Emitter_C::SM_Component' has a wrong offset!");

}


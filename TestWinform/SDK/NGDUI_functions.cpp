#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NGDUI

#include "Basic.hpp"

#include "NGDUI_classes.hpp"
#include "NGDUI_parameters.hpp"


namespace SDK
{

// Function NGDUI.UserWidgetBase.CreateWidgetComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UWidget>              WidgetClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UUserWidgetBase::CreateWidgetComponent(TSubclassOf<class UWidget> WidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserWidgetBase", "CreateWidgetComponent");

	Params::UserWidgetBase_CreateWidgetComponent Parms{};

	Parms.WidgetClass = WidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.AddNewWidgetContainer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FWidgetContainerConfig&    NewWidgetContainerData                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNGDManagedLayer::AddNewWidgetContainer(const struct FWidgetContainerConfig& NewWidgetContainerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "AddNewWidgetContainer");

	Params::NGDManagedLayer_AddNewWidgetContainer Parms{};

	Parms.NewWidgetContainerData = std::move(NewWidgetContainerData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDManagedLayer.CreateHUDState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TSubclassOf<class UNGDHUDState>         StateClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::CreateHUDState(TSubclassOf<class UNGDHUDState> StateClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "CreateHUDState");

	Params::NGDManagedLayer_CreateHUDState Parms{};

	Parms.StateClass = StateClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.CreateWidgetContainer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// const struct FWidgetContainerConfig&    WidgetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UNGDWidgetContainer*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDWidgetContainer* UNGDManagedLayer::CreateWidgetContainer(const struct FWidgetContainerConfig& WidgetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "CreateWidgetContainer");

	Params::NGDManagedLayer_CreateWidgetContainer Parms{};

	Parms.WidgetData = std::move(WidgetData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.GetCurrentState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::GetCurrentState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "GetCurrentState");

	Params::NGDManagedLayer_GetCurrentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.GetLayerID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNGDManagedLayer::GetLayerID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "GetLayerID");

	Params::NGDManagedLayer_GetLayerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.GetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UNGDHUDState>         StateClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString&                    Name_0                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::GetState(TSubclassOf<class UNGDHUDState> StateClass, int32 Offset, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "GetState");

	Params::NGDManagedLayer_GetState Parms{};

	Parms.StateClass = StateClass;
	Parms.Offset = Offset;
	Parms.Name_0 = std::move(Name_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.GetZOrder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UNGDManagedLayer::GetZOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "GetZOrder");

	Params::NGDManagedLayer_GetZOrder Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.InitializeLayer
// (Final, Native, Public, HasOutParams)
// Parameters:
// const struct FLayerConfig&              InLayerConfig                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UNGDManagedLayer::InitializeLayer(const struct FLayerConfig& InLayerConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "InitializeLayer");

	Params::NGDManagedLayer_InitializeLayer Parms{};

	Parms.InLayerConfig = std::move(InLayerConfig);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDManagedLayer.PopStateByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UNGDHUDState>         StateClassToPop                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Inclusive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::PopStateByClass(TSubclassOf<class UNGDHUDState> StateClassToPop, bool Inclusive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "PopStateByClass");

	Params::NGDManagedLayer_PopStateByClass Parms{};

	Parms.StateClassToPop = StateClassToPop;
	Parms.Inclusive = Inclusive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.PopStateByName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const class FString&                    StateToPopName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Inclusive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::PopStateByName(const class FString& StateToPopName, bool Inclusive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "PopStateByName");

	Params::NGDManagedLayer_PopStateByName Parms{};

	Parms.StateToPopName = std::move(StateToPopName);
	Parms.Inclusive = Inclusive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.PushState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNGDHUDState*                     StateToPush                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::PushState(class UNGDHUDState* StateToPush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "PushState");

	Params::NGDManagedLayer_PushState Parms{};

	Parms.StateToPush = StateToPush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.PushStateByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UNGDHUDState>         StateClassToPush                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDManagedLayer::PushStateByClass(TSubclassOf<class UNGDHUDState> StateClassToPush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "PushStateByClass");

	Params::NGDManagedLayer_PushStateByClass Parms{};

	Parms.StateClassToPush = StateClassToPush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDManagedLayer.RemoveWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UNGDWidgetContainer>  WidgetClassToRemove                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNGDManagedLayer::RemoveWidget(TSubclassOf<class UNGDWidgetContainer> WidgetClassToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "RemoveWidget");

	Params::NGDManagedLayer_RemoveWidget Parms{};

	Parms.WidgetClassToRemove = WidgetClassToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDManagedLayer.GetWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UNGDWidgetContainer>  WidgetClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDWidgetContainer*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDWidgetContainer* UNGDManagedLayer::GetWidget(TSubclassOf<class UNGDWidgetContainer> WidgetClass) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDManagedLayer", "GetWidget");

	Params::NGDManagedLayer_GetWidget Parms{};

	Parms.WidgetClass = WidgetClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDPopupButton.OnButtonClicked
// (Final, Native, Public)

void UNGDPopupButton::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDPopupButton", "OnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDWidgetContainer.GetOwnerHUDState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNGDHUDState*                     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDHUDState* UNGDWidgetContainer::GetOwnerHUDState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDWidgetContainer", "GetOwnerHUDState");

	Params::NGDWidgetContainer_GetOwnerHUDState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDHUDState.Clear
// (Final, Native, Public, BlueprintCallable)

void UNGDHUDState::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDHUDState", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDHUDState.GetWidgetContainer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UNGDWidgetContainer>  WidgetContainerClass                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDWidgetContainer*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDWidgetContainer* UNGDHUDState::GetWidgetContainer(TSubclassOf<class UNGDWidgetContainer> WidgetContainerClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDHUDState", "GetWidgetContainer");

	Params::NGDHUDState_GetWidgetContainer Parms{};

	Parms.WidgetContainerClass = WidgetContainerClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDHUDState.IsMultipleStateAllowed
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNGDHUDState::IsMultipleStateAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDHUDState", "IsMultipleStateAllowed");

	Params::NGDHUDState_IsMultipleStateAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.GetDefaultLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDManagedLayer*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDManagedLayer* ANGDLayeredHUD::GetDefaultLayer(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NGDLayeredHUD", "GetDefaultLayer");

	Params::NGDLayeredHUD_GetDefaultLayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.GetLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LayerIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDManagedLayer*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDManagedLayer* ANGDLayeredHUD::GetLayer(const class UObject* WorldContextObject, int32 LayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NGDLayeredHUD", "GetLayer");

	Params::NGDLayeredHUD_GetLayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LayerIndex = LayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.GetPopupLayer
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDManagedLayer*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDManagedLayer* ANGDLayeredHUD::GetPopupLayer(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NGDLayeredHUD", "GetPopupLayer");

	Params::NGDLayeredHUD_GetPopupLayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.GetWorldHUD
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ANGDLayeredHUD*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ANGDLayeredHUD* ANGDLayeredHUD::GetWorldHUD(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NGDLayeredHUD", "GetWorldHUD");

	Params::NGDLayeredHUD_GetWorldHUD Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.ShowPopup
// (Final, Native, Static, Public, HasOutParams)
// Parameters:
// const class UObject*                    WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FText&                      Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const TArray<struct FPopUpButtonSettings>&Buttons                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNGDPopupHUDState>    HUDState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UNGDGenericPopup*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNGDGenericPopup* ANGDLayeredHUD::ShowPopup(const class UObject* WorldContextObject, const class FText& Title, const TArray<struct FPopUpButtonSettings>& Buttons, int32 Priority, TSubclassOf<class UNGDPopupHUDState> HUDState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("NGDLayeredHUD", "ShowPopup");

	Params::NGDLayeredHUD_ShowPopup Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Title = std::move(Title);
	Parms.Buttons = std::move(Buttons);
	Parms.Priority = Priority;
	Parms.HUDState = HUDState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.BeginPlay
// (Native, Protected)

void ANGDLayeredHUD::BeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDLayeredHUD", "BeginPlay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDLayeredHUD.InitializeHUD
// (Final, Native, Protected)

void ANGDLayeredHUD::InitializeHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDLayeredHUD", "InitializeHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NGDUI.NGDLayeredHUD.OnConfirm
// (Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANGDLayeredHUD::OnConfirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDLayeredHUD", "OnConfirm");

	Params::NGDLayeredHUD_OnConfirm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.OnEscape
// (Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANGDLayeredHUD::OnEscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDLayeredHUD", "OnEscape");

	Params::NGDLayeredHUD_OnEscape Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function NGDUI.NGDLayeredHUD.IsHUDInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ANGDLayeredHUD::IsHUDInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NGDLayeredHUD", "IsHUDInitialized");

	Params::NGDLayeredHUD_IsHUDInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}


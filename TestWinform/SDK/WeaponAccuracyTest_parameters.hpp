#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponAccuracyTest

#include "Basic.hpp"

#include "WeaponAccuracyData_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "WeaponImpactData_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.ExecuteUbergraph_WeaponAccuracyTest
// 0x02D0 (0x02D0 - 0x0000)
struct WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0018(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATimeWatchCharacter*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchCharacter*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ProjectileIndex;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_ImpactData;                     // 0x006C(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F6[0x2];                                       // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 ProjectileIndex, const struct FHitResult& ImpactData)> K2Node_CreateDelegate_OutputDelegate; // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	struct FWeaponImpactData                      K2Node_MakeStruct_WeaponImpactData;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFluxPlayerControllerBP_C*              K2Node_DynamicCast_AsFlux_Player_Controller_BP;    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_Weapon;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetClipSize_ReturnValue;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentAmmo_ReturnValue;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeaponImpactData>              K2Node_CustomEvent_OtherData;                      // 0x01B8(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_Weapon_1;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentAmmo_ReturnValue_1;             // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_Weapon_2;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0xF];                                      // 0x01F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetFireSocketTransform_ReturnValue;       // 0x0200(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0254(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATWCharacterBP_C*                       K2Node_DynamicCast_AsTWCharacter_BP;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFluxPlayerControllerBP_C*              K2Node_DynamicCast_AsFlux_Player_Controller_BP_1;  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest) == 0x000010, "Wrong alignment on WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest");
static_assert(sizeof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest) == 0x0002D0, "Wrong size on WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, EntryPoint) == 0x000000, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_InputKeyEvent_Key) == 0x000018, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Array_Get_Item) == 0x000050, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Not_PreBool_ReturnValue) == 0x000058, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, Temp_int_Variable) == 0x000060, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_CustomEvent_ProjectileIndex) == 0x000068, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_CustomEvent_ProjectileIndex' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_CustomEvent_ImpactData) == 0x00006C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_CustomEvent_ImpactData' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F4, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F5, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_Time) == 0x0000F8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_Distance) == 0x0000FC, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_ImpactPoint) == 0x00010C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_Normal) == 0x000118, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_ImpactNormal) == 0x000124, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_FaceIndex) == 0x000154, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_TraceStart) == 0x000158, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakHitResult_TraceEnd) == 0x000164, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_CreateDelegate_OutputDelegate) == 0x000170, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_MakeStruct_WeaponImpactData) == 0x000180, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_MakeStruct_WeaponImpactData' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Array_Add_ReturnValue) == 0x00018C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetPlayerController_ReturnValue) == 0x000190, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_DynamicCast_AsFlux_Player_Controller_BP) == 0x000198, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_DynamicCast_AsFlux_Player_Controller_BP' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetCurrentWeapon_Weapon) == 0x0001A8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetCurrentWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetClipSize_ReturnValue) == 0x0001B0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetClipSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetCurrentAmmo_ReturnValue) == 0x0001B4, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetCurrentAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_CustomEvent_OtherData) == 0x0001B8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_CustomEvent_OtherData' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetCurrentWeapon_Weapon_1) == 0x0001C8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetCurrentWeapon_Weapon_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetCurrentAmmo_ReturnValue_1) == 0x0001D0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetCurrentAmmo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001D4, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001D8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001E0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetCurrentWeapon_Weapon_2) == 0x0001E8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetCurrentWeapon_Weapon_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetFireSocketTransform_ReturnValue) == 0x000200, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetFireSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakTransform_Location) == 0x000230, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakTransform_Rotation) == 0x00023C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_BreakTransform_Scale) == 0x000248, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetSocketLocation_ReturnValue) == 0x000254, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_FindLookAtRotation_ReturnValue) == 0x000260, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00026C, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Add_IntInt_ReturnValue_1) == 0x000270, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Conv_IntToString_ReturnValue) == 0x000278, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Concat_StrStr_ReturnValue) == 0x000288, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000298, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_DynamicCast_AsTWCharacter_BP) == 0x0002A0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_DynamicCast_AsTWCharacter_BP' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_DynamicCast_bSuccess_1) == 0x0002A8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002A9, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002AA, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, CallFunc_GetPlayerController_ReturnValue_2) == 0x0002B0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_DynamicCast_AsFlux_Player_Controller_BP_1) == 0x0002B8, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_DynamicCast_AsFlux_Player_Controller_BP_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest, K2Node_DynamicCast_bSuccess_2) == 0x0002C0, "Member 'WeaponAccuracyTest_C_ExecuteUbergraph_WeaponAccuracyTest::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.OnAccuracyDataReceived
// 0x0010 (0x0010 - 0x0000)
struct WeaponAccuracyTest_C_OnAccuracyDataReceived final
{
public:
	TArray<struct FWeaponImpactData>              OtherData;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(WeaponAccuracyTest_C_OnAccuracyDataReceived) == 0x000008, "Wrong alignment on WeaponAccuracyTest_C_OnAccuracyDataReceived");
static_assert(sizeof(WeaponAccuracyTest_C_OnAccuracyDataReceived) == 0x000010, "Wrong size on WeaponAccuracyTest_C_OnAccuracyDataReceived");
static_assert(offsetof(WeaponAccuracyTest_C_OnAccuracyDataReceived, OtherData) == 0x000000, "Member 'WeaponAccuracyTest_C_OnAccuracyDataReceived::OtherData' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.OnReceivedImpact
// 0x008C (0x008C - 0x0000)
struct WeaponAccuracyTest_C_OnReceivedImpact final
{
public:
	int32                                         ProjectileIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             ImpactData;                                        // 0x0004(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WeaponAccuracyTest_C_OnReceivedImpact) == 0x000004, "Wrong alignment on WeaponAccuracyTest_C_OnReceivedImpact");
static_assert(sizeof(WeaponAccuracyTest_C_OnReceivedImpact) == 0x00008C, "Wrong size on WeaponAccuracyTest_C_OnReceivedImpact");
static_assert(offsetof(WeaponAccuracyTest_C_OnReceivedImpact, ProjectileIndex) == 0x000000, "Member 'WeaponAccuracyTest_C_OnReceivedImpact::ProjectileIndex' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_OnReceivedImpact, ImpactData) == 0x000004, "Member 'WeaponAccuracyTest_C_OnReceivedImpact::ImpactData' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WeaponAccuracyTest_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponAccuracyTest_C_ReceiveTick) == 0x000004, "Wrong alignment on WeaponAccuracyTest_C_ReceiveTick");
static_assert(sizeof(WeaponAccuracyTest_C_ReceiveTick) == 0x000004, "Wrong size on WeaponAccuracyTest_C_ReceiveTick");
static_assert(offsetof(WeaponAccuracyTest_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WeaponAccuracyTest_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.InpActEvt_T_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0");
static_assert(sizeof(WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0");
static_assert(offsetof(WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'WeaponAccuracyTest_C_InpActEvt_T_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.Diff
// 0x00E8 (0x00E8 - 0x0000)
struct WeaponAccuracyTest_C_Diff final
{
public:
	TArray<struct FWeaponImpactData>              Other;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          bHitFound;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FalsePositiveHits;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PositiveFalseHits;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DirtyHits;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CleanHits;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponAccuracyData                    K2Node_MakeStruct_WeaponAccuracyData;              // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponImpactData                      CallFunc_Array_Get_Item;                           // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponImpactData                      CallFunc_Array_Get_Item_1;                         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponImpactData                      CallFunc_Array_Get_Item_2;                         // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponImpactData                      CallFunc_Array_Get_Item_3;                         // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponAccuracyTest_C_Diff) == 0x000008, "Wrong alignment on WeaponAccuracyTest_C_Diff");
static_assert(sizeof(WeaponAccuracyTest_C_Diff) == 0x0000E8, "Wrong size on WeaponAccuracyTest_C_Diff");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Other) == 0x000000, "Member 'WeaponAccuracyTest_C_Diff::Other' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, bHitFound) == 0x000010, "Member 'WeaponAccuracyTest_C_Diff::bHitFound' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, FalsePositiveHits) == 0x000014, "Member 'WeaponAccuracyTest_C_Diff::FalsePositiveHits' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, PositiveFalseHits) == 0x000018, "Member 'WeaponAccuracyTest_C_Diff::PositiveFalseHits' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, DirtyHits) == 0x00001C, "Member 'WeaponAccuracyTest_C_Diff::DirtyHits' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CleanHits) == 0x000020, "Member 'WeaponAccuracyTest_C_Diff::CleanHits' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Variable) == 0x000038, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Variable_1) == 0x00003C, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Loop_Counter_Variable_2) == 0x000040, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_bool_True_if_break_was_hit_Variable) == 0x000048, "Member 'WeaponAccuracyTest_C_Diff::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Loop_Counter_Variable_3) == 0x000054, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_3) == 0x000058, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Array_Index_Variable_2) == 0x00005C, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Array_Index_Variable_3) == 0x000060, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, K2Node_MakeStruct_WeaponAccuracyData) == 0x000064, "Member 'WeaponAccuracyTest_C_Diff::K2Node_MakeStruct_WeaponAccuracyData' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_4) == 0x000078, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007C, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Get_Item) == 0x000080, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000091, "Member 'WeaponAccuracyTest_C_Diff::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Get_Item_1) == 0x000094, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A5, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A6, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_BooleanAND_ReturnValue) == 0x0000A7, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Variable_2) == 0x0000A8, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000AC, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, Temp_int_Variable_3) == 0x0000B4, "Member 'WeaponAccuracyTest_C_Diff::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000B8, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000BC, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Length_ReturnValue_2) == 0x0000CC, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D0, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D1, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Get_Item_3) == 0x0000D4, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Array_Length_ReturnValue_3) == 0x0000E0, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000E4, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000E5, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_Diff, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000E6, "Member 'WeaponAccuracyTest_C_Diff::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.GetCurrentWeapon
// 0x0028 (0x0028 - 0x0000)
struct WeaponAccuracyTest_C_GetCurrentWeapon final
{
public:
	class ATemporalWeapon*                        Weapon;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATWCharacterBP_C*                       K2Node_DynamicCast_AsTWCharacter_BP;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponAccuracyTest_C_GetCurrentWeapon) == 0x000008, "Wrong alignment on WeaponAccuracyTest_C_GetCurrentWeapon");
static_assert(sizeof(WeaponAccuracyTest_C_GetCurrentWeapon) == 0x000028, "Wrong size on WeaponAccuracyTest_C_GetCurrentWeapon");
static_assert(offsetof(WeaponAccuracyTest_C_GetCurrentWeapon, Weapon) == 0x000000, "Member 'WeaponAccuracyTest_C_GetCurrentWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_GetCurrentWeapon, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'WeaponAccuracyTest_C_GetCurrentWeapon::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_GetCurrentWeapon, K2Node_DynamicCast_AsTWCharacter_BP) == 0x000010, "Member 'WeaponAccuracyTest_C_GetCurrentWeapon::K2Node_DynamicCast_AsTWCharacter_BP' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_GetCurrentWeapon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WeaponAccuracyTest_C_GetCurrentWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_GetCurrentWeapon, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000020, "Member 'WeaponAccuracyTest_C_GetCurrentWeapon::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");

// Function WeaponAccuracyTest.WeaponAccuracyTest_C.PrintTestResult
// 0x0280 (0x0280 - 0x0000)
struct WeaponAccuracyTest_C_PrintTestResult final
{
public:
	int32                                         TotalFalsePositive;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalPositiveFalse;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalDirty;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCleans;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0098(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x00B0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0100(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0130(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FWeaponAccuracyData                    CallFunc_Array_Get_Item;                           // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponAccuracyTest_C_PrintTestResult) == 0x000008, "Wrong alignment on WeaponAccuracyTest_C_PrintTestResult");
static_assert(sizeof(WeaponAccuracyTest_C_PrintTestResult) == 0x000280, "Wrong size on WeaponAccuracyTest_C_PrintTestResult");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, TotalFalsePositive) == 0x000000, "Member 'WeaponAccuracyTest_C_PrintTestResult::TotalFalsePositive' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, TotalPositiveFalse) == 0x000004, "Member 'WeaponAccuracyTest_C_PrintTestResult::TotalPositiveFalse' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, TotalDirty) == 0x000008, "Member 'WeaponAccuracyTest_C_PrintTestResult::TotalDirty' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, TotalCleans) == 0x00000C, "Member 'WeaponAccuracyTest_C_PrintTestResult::TotalCleans' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WeaponAccuracyTest_C_PrintTestResult::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WeaponAccuracyTest_C_PrintTestResult::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000058, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000060, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000070, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000074, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x00007C, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000080, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000084, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000088, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00008C, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_FloatToText_ReturnValue) == 0x000098, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x0000B0, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_TextToString_ReturnValue) == 0x0000C8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000D8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0000E8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000EC, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000F0, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x0000F4, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0000F8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000FC, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000100, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000118, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000120, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000130, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000148, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000158, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000168, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000178, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000188, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000198, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001B8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001C8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001D8, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001E0, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001F0, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue_4) == 0x000200, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000208, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000218, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue_5) == 0x000228, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000230, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000240, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Add_IntInt_ReturnValue_6) == 0x000250, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000258, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000268, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Array_Length_ReturnValue_1) == 0x000278, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponAccuracyTest_C_PrintTestResult, CallFunc_Less_IntInt_ReturnValue) == 0x00027C, "Member 'WeaponAccuracyTest_C_PrintTestResult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


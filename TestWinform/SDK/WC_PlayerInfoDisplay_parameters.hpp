#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_PlayerInfoDisplay

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WC_PlayerInfoDisplay.WC_PlayerInfoDisplay_C.ExecuteUbergraph_WC_PlayerInfoDisplay
// 0x0004 (0x0004 - 0x0000)
struct WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay) == 0x000004, "Wrong alignment on WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay");
static_assert(sizeof(WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay) == 0x000004, "Wrong size on WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay");
static_assert(offsetof(WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay, EntryPoint) == 0x000000, "Member 'WC_PlayerInfoDisplay_C_ExecuteUbergraph_WC_PlayerInfoDisplay::EntryPoint' has a wrong offset!");

// Function WC_PlayerInfoDisplay.WC_PlayerInfoDisplay_C.Get_Image_Latency_Visibility_0
// 0x0050 (0x0050 - 0x0000)
struct WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServerUnresponsive_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWaitingForPlayerSync_ReturnValue;       // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0) == 0x000008, "Wrong alignment on WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0");
static_assert(sizeof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0) == 0x000050, "Wrong size on WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, ReturnValue) == 0x000000, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_GetGameState_ReturnValue_1) == 0x000010, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000018, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, K2Node_DynamicCast_AsTime_Watch_Game_State_1) == 0x000028, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::K2Node_DynamicCast_AsTime_Watch_Game_State_1' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_IsServerUnresponsive_ReturnValue) == 0x000031, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_IsServerUnresponsive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_IsWaitingForPlayerSync_ReturnValue) == 0x000032, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_IsWaitingForPlayerSync_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000040, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_BooleanOR_ReturnValue) == 0x000049, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0, CallFunc_BooleanOR_ReturnValue_1) == 0x00004A, "Member 'WC_PlayerInfoDisplay_C_Get_Image_Latency_Visibility_0::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function WC_PlayerInfoDisplay.WC_PlayerInfoDisplay_C.Get_Energy_Percent_0
// 0x0030 (0x0030 - 0x0000)
struct WC_PlayerInfoDisplay_C_Get_Energy_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFluxPlayerState*                       K2Node_DynamicCast_AsFlux_Player_State;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTWAbilitiesComponent*                  CallFunc_GetAbilitiesComponent_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0) == 0x000008, "Wrong alignment on WC_PlayerInfoDisplay_C_Get_Energy_Percent_0");
static_assert(sizeof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0) == 0x000030, "Wrong size on WC_PlayerInfoDisplay_C_Get_Energy_Percent_0");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0, ReturnValue) == 0x000000, "Member 'WC_PlayerInfoDisplay_C_Get_Energy_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WC_PlayerInfoDisplay_C_Get_Energy_Percent_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0, K2Node_DynamicCast_AsFlux_Player_State) == 0x000010, "Member 'WC_PlayerInfoDisplay_C_Get_Energy_Percent_0::K2Node_DynamicCast_AsFlux_Player_State' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WC_PlayerInfoDisplay_C_Get_Energy_Percent_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0, CallFunc_GetAbilitiesComponent_ReturnValue) == 0x000020, "Member 'WC_PlayerInfoDisplay_C_Get_Energy_Percent_0::CallFunc_GetAbilitiesComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_PlayerInfoDisplay_C_Get_Energy_Percent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'WC_PlayerInfoDisplay_C_Get_Energy_Percent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Pistol

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "TemporalWeapon_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_Pistol.Weapon_Pistol_C
// 0x0030 (0x0B40 - 0x0B10)
class AWeapon_Pistol_C final : public ATemporalWeapon_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_Pistol_C;                    // 0x0B08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraShakeFirearmFeelComponent*       CameraShakeFirearmFeel1;                           // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeFirearmFeelComponent*       CameraShakeFirearmFeel;                            // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDeviationFirearmFeelComponent*         DeviationFirearmFeel;                              // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPushbackFirearmFeelComponent*          PushbackFirearmFeel;                               // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpreadFirearmFeelComponent*            SpreadFirearmFeel;                                 // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USprayPatternFirearmFeelComponent*      SprayPatternFirearmFeel;                           // 0x0B38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Weapon_Pistol(int32 EntryPoint);
	void CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState);
	void ReceiveBeginPlay();
	void FakeTimeDilationSound(EFluxCapacitorStates GameState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_Pistol_C">();
	}
	static class AWeapon_Pistol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_Pistol_C>();
	}
};
static_assert(alignof(AWeapon_Pistol_C) == 0x000010, "Wrong alignment on AWeapon_Pistol_C");
static_assert(sizeof(AWeapon_Pistol_C) == 0x000B40, "Wrong size on AWeapon_Pistol_C");
static_assert(offsetof(AWeapon_Pistol_C, UberGraphFrame_Weapon_Pistol_C) == 0x000B08, "Member 'AWeapon_Pistol_C::UberGraphFrame_Weapon_Pistol_C' has a wrong offset!");
static_assert(offsetof(AWeapon_Pistol_C, CameraShakeFirearmFeel1) == 0x000B10, "Member 'AWeapon_Pistol_C::CameraShakeFirearmFeel1' has a wrong offset!");
static_assert(offsetof(AWeapon_Pistol_C, CameraShakeFirearmFeel) == 0x000B18, "Member 'AWeapon_Pistol_C::CameraShakeFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Pistol_C, DeviationFirearmFeel) == 0x000B20, "Member 'AWeapon_Pistol_C::DeviationFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Pistol_C, PushbackFirearmFeel) == 0x000B28, "Member 'AWeapon_Pistol_C::PushbackFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Pistol_C, SpreadFirearmFeel) == 0x000B30, "Member 'AWeapon_Pistol_C::SpreadFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Pistol_C, SprayPatternFirearmFeel) == 0x000B38, "Member 'AWeapon_Pistol_C::SprayPatternFirearmFeel' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NGDUI

#include "Basic.hpp"


namespace SDK
{

// Enum NGDUI.EPopUpButtonDefault
// NumValues: 0x0004
enum class EPopUpButtonDefault : uint8
{
	Undefined                                = 0,
	Ok                                       = 1,
	Cancel                                   = 2,
	EPopUpButtonDefault_MAX                  = 3,
};

// Enum NGDUI.EPushedWidgetState
// NumValues: 0x0003
enum class EPushedWidgetState : uint8
{
	Add                                      = 0,
	Remove                                   = 1,
	EPushedWidgetState_MAX                   = 2,
};

// ScriptStruct NGDUI.PopUpButtonSettings
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FPopUpButtonSettings final
{
public:
	uint8                                         Pad_0[0x48];                                       // 0x0000(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPopUpButtonSettings) == 0x000008, "Wrong alignment on FPopUpButtonSettings");
static_assert(sizeof(FPopUpButtonSettings) == 0x000048, "Wrong size on FPopUpButtonSettings");

// ScriptStruct NGDUI.LayerConfig
// 0x0008 (0x0008 - 0x0000)
struct FLayerConfig final
{
public:
	int32                                         LayerID;                                           // 0x0000(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LayerZOrder;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLayerConfig) == 0x000004, "Wrong alignment on FLayerConfig");
static_assert(sizeof(FLayerConfig) == 0x000008, "Wrong size on FLayerConfig");
static_assert(offsetof(FLayerConfig, LayerID) == 0x000000, "Member 'FLayerConfig::LayerID' has a wrong offset!");
static_assert(offsetof(FLayerConfig, LayerZOrder) == 0x000004, "Member 'FLayerConfig::LayerZOrder' has a wrong offset!");

// ScriptStruct NGDUI.WidgetContainerConfig
// 0x0018 (0x0018 - 0x0000)
struct FWidgetContainerConfig final
{
public:
	TSubclassOf<class UNGDWidgetContainer>        WidgetClass;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPushedWidgetState                            PushedWidgetState;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WidgetZOrder;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecycleWidget;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWidgetContainerConfig) == 0x000008, "Wrong alignment on FWidgetContainerConfig");
static_assert(sizeof(FWidgetContainerConfig) == 0x000018, "Wrong size on FWidgetContainerConfig");
static_assert(offsetof(FWidgetContainerConfig, WidgetClass) == 0x000000, "Member 'FWidgetContainerConfig::WidgetClass' has a wrong offset!");
static_assert(offsetof(FWidgetContainerConfig, PushedWidgetState) == 0x000008, "Member 'FWidgetContainerConfig::PushedWidgetState' has a wrong offset!");
static_assert(offsetof(FWidgetContainerConfig, WidgetZOrder) == 0x00000C, "Member 'FWidgetContainerConfig::WidgetZOrder' has a wrong offset!");
static_assert(offsetof(FWidgetContainerConfig, bRecycleWidget) == 0x000010, "Member 'FWidgetContainerConfig::bRecycleWidget' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Tooltip_Targets

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_TooltipTutorialListener_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Tooltip_Targets.BP_Tooltip_Targets_C
// 0x0020 (0x0128 - 0x0108)
class UBP_Tooltip_Targets_C final : public UBP_TooltipTutorialListener_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0108(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         MaxTimeNoMovement;                                 // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingNoTimeMovement;                           // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ATutorial_Target_BP2_C*>         Targets;                                           // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_Tooltip_Targets(int32 EntryPoint);
	void OnLoopChanged(int32 NewIndex);
	void OnRoundChanged(int32 NewIndex);
	void ReceiveBeginPlay();
	void CheckLocks(bool* LocksPassed);
	void GetTargetDownCount(int32* GetTargetDownCount_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Tooltip_Targets_C">();
	}
	static class UBP_Tooltip_Targets_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Tooltip_Targets_C>();
	}
};
static_assert(alignof(UBP_Tooltip_Targets_C) == 0x000008, "Wrong alignment on UBP_Tooltip_Targets_C");
static_assert(sizeof(UBP_Tooltip_Targets_C) == 0x000128, "Wrong size on UBP_Tooltip_Targets_C");
static_assert(offsetof(UBP_Tooltip_Targets_C, UberGraphFrame) == 0x000108, "Member 'UBP_Tooltip_Targets_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Tooltip_Targets_C, MaxTimeNoMovement) == 0x000110, "Member 'UBP_Tooltip_Targets_C::MaxTimeNoMovement' has a wrong offset!");
static_assert(offsetof(UBP_Tooltip_Targets_C, RemainingNoTimeMovement) == 0x000114, "Member 'UBP_Tooltip_Targets_C::RemainingNoTimeMovement' has a wrong offset!");
static_assert(offsetof(UBP_Tooltip_Targets_C, Targets) == 0x000118, "Member 'UBP_Tooltip_Targets_C::Targets' has a wrong offset!");

}


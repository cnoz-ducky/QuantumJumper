#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LuminRuntimeSettings

#include "Basic.hpp"


namespace SDK
{

// Enum LuminRuntimeSettings.ELuminPrivilege
// NumValues: 0x0023
enum class ELuminPrivilege : uint8
{
	Invalid                                  = 0,
	BatteryInfo                              = 1,
	CameraCapture                            = 2,
	WorldReconstruction                      = 3,
	InAppPurchase                            = 4,
	AudioCaptureMic                          = 5,
	DrmCertificates                          = 6,
	Occlusion                                = 7,
	LowLatencyLightwear                      = 8,
	Internet                                 = 9,
	IdentityRead                             = 10,
	BackgroundDownload                       = 11,
	BackgroundUpload                         = 12,
	MediaDrm                                 = 13,
	Media                                    = 14,
	MediaMetadata                            = 15,
	PowerInfo                                = 16,
	LocalAreaNetwork                         = 17,
	VoiceInput                               = 18,
	Documents                                = 19,
	ConnectBackgroundMusicService            = 20,
	RegisterBackgroundMusicService           = 21,
	PwFoundObjRead                           = 22,
	NormalNotificationsUsage                 = 23,
	MusicService                             = 24,
	ControllerPose                           = 25,
	ScreensProvider                          = 26,
	GesturesSubscribe                        = 27,
	GesturesConfig                           = 28,
	AddressBookRead                          = 29,
	AddressBookWrite                         = 30,
	CoarseLocation                           = 31,
	HandMesh                                 = 32,
	WifiStatusRead                           = 33,
	ELuminPrivilege_MAX                      = 34,
};

// Enum LuminRuntimeSettings.ELuminFrameTimingHint
// NumValues: 0x0005
enum class ELuminFrameTimingHint : uint8
{
	Unspecified                              = 0,
	Maximum                                  = 1,
	FPS_60                                   = 2,
	FPS_120                                  = 3,
	ELuminFrameTimingHint_MAX                = 4,
};

// Enum LuminRuntimeSettings.ELuminComponentType
// NumValues: 0x0009
enum class ELuminComponentType : uint8
{
	Universe                                 = 0,
	Fullscreen                               = 1,
	SearchProvider                           = 2,
	MusicService                             = 3,
	Screens                                  = 4,
	ScreensImmersive                         = 5,
	Console                                  = 6,
	SystemUI                                 = 7,
	ELuminComponentType_MAX                  = 8,
};

// Enum LuminRuntimeSettings.ELuminComponentSubElementType
// NumValues: 0x0006
enum class ELuminComponentSubElementType : uint8
{
	FileExtension                            = 0,
	MimeType                                 = 1,
	Mode                                     = 2,
	MusicAttribute                           = 3,
	Schema                                   = 4,
	ELuminComponentSubElementType_MAX        = 5,
};

// ScriptStruct LuminRuntimeSettings.LuminComponentSubElement
// 0x0018 (0x0018 - 0x0000)
struct FLuminComponentSubElement final
{
public:
	ELuminComponentSubElementType                 ElementType;                                       // 0x0000(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLuminComponentSubElement) == 0x000008, "Wrong alignment on FLuminComponentSubElement");
static_assert(sizeof(FLuminComponentSubElement) == 0x000018, "Wrong size on FLuminComponentSubElement");
static_assert(offsetof(FLuminComponentSubElement, ElementType) == 0x000000, "Member 'FLuminComponentSubElement::ElementType' has a wrong offset!");
static_assert(offsetof(FLuminComponentSubElement, Value) == 0x000008, "Member 'FLuminComponentSubElement::Value' has a wrong offset!");

// ScriptStruct LuminRuntimeSettings.LuminComponentElement
// 0x0048 (0x0048 - 0x0000)
struct FLuminComponentElement final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VisibleName;                                       // 0x0010(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExecutableName;                                    // 0x0020(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELuminComponentType                           ComponentType;                                     // 0x0030(0x0001)(Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLuminComponentSubElement>      ExtraComponentSubElements;                         // 0x0038(0x0010)(Edit, ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLuminComponentElement) == 0x000008, "Wrong alignment on FLuminComponentElement");
static_assert(sizeof(FLuminComponentElement) == 0x000048, "Wrong size on FLuminComponentElement");
static_assert(offsetof(FLuminComponentElement, Name) == 0x000000, "Member 'FLuminComponentElement::Name' has a wrong offset!");
static_assert(offsetof(FLuminComponentElement, VisibleName) == 0x000010, "Member 'FLuminComponentElement::VisibleName' has a wrong offset!");
static_assert(offsetof(FLuminComponentElement, ExecutableName) == 0x000020, "Member 'FLuminComponentElement::ExecutableName' has a wrong offset!");
static_assert(offsetof(FLuminComponentElement, ComponentType) == 0x000030, "Member 'FLuminComponentElement::ComponentType' has a wrong offset!");
static_assert(offsetof(FLuminComponentElement, ExtraComponentSubElements) == 0x000038, "Member 'FLuminComponentElement::ExtraComponentSubElements' has a wrong offset!");

}


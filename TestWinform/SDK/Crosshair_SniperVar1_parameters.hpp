#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_SniperVar1

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.ExecuteUbergraph_Crosshair_SniperVar1
// 0x0128 (0x0128 - 0x0000)
struct Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0094(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Spread;                               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ColorIndex;                           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Map_Find_Value;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00F0(0x0028)()
	struct FLinearColor                           K2Node_Event_HitColor;                             // 0x0118(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1) == 0x000008, "Wrong alignment on Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1");
static_assert(sizeof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1) == 0x000128, "Wrong size on Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, EntryPoint) == 0x000000, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::EntryPoint' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, Temp_int_Variable) == 0x000004, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000D, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_MakeVector2D_ReturnValue) == 0x000024, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_MakeVector2D_ReturnValue_1) == 0x000030, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_MakeVector2D_ReturnValue_2) == 0x000038, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_MakeVector2D_ReturnValue_3) == 0x000040, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_MakeVector2D_ReturnValue_4) == 0x000048, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, Temp_int_Variable_1) == 0x000050, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_MakeArray_Array) == 0x000058, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Array_Get_Item) == 0x000070, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_Event_MyGeometry) == 0x000094, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_Event_InDeltaTime) == 0x0000CC, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_Event_Spread) == 0x0000D0, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_Event_Spread' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_Event_ColorIndex) == 0x0000D4, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_Event_ColorIndex' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, CallFunc_Map_Find_ReturnValue) == 0x0000E8, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_MakeStruct_SlateColor) == 0x0000F0, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1, K2Node_Event_HitColor) == 0x000118, "Member 'Crosshair_SniperVar1_C_ExecuteUbergraph_Crosshair_SniperVar1::K2Node_Event_HitColor' has a wrong offset!");

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.ShowHitFeedback
// 0x0010 (0x0010 - 0x0000)
struct Crosshair_SniperVar1_C_ShowHitFeedback final
{
public:
	struct FLinearColor                           HitColor;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_SniperVar1_C_ShowHitFeedback) == 0x000004, "Wrong alignment on Crosshair_SniperVar1_C_ShowHitFeedback");
static_assert(sizeof(Crosshair_SniperVar1_C_ShowHitFeedback) == 0x000010, "Wrong size on Crosshair_SniperVar1_C_ShowHitFeedback");
static_assert(offsetof(Crosshair_SniperVar1_C_ShowHitFeedback, HitColor) == 0x000000, "Member 'Crosshair_SniperVar1_C_ShowHitFeedback::HitColor' has a wrong offset!");

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.UpdateCrosshairColor
// 0x0004 (0x0004 - 0x0000)
struct Crosshair_SniperVar1_C_UpdateCrosshairColor final
{
public:
	int32                                         ColorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_SniperVar1_C_UpdateCrosshairColor) == 0x000004, "Wrong alignment on Crosshair_SniperVar1_C_UpdateCrosshairColor");
static_assert(sizeof(Crosshair_SniperVar1_C_UpdateCrosshairColor) == 0x000004, "Wrong size on Crosshair_SniperVar1_C_UpdateCrosshairColor");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshairColor, ColorIndex) == 0x000000, "Member 'Crosshair_SniperVar1_C_UpdateCrosshairColor::ColorIndex' has a wrong offset!");

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.OnSpreadChanged
// 0x0004 (0x0004 - 0x0000)
struct Crosshair_SniperVar1_C_OnSpreadChanged final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_SniperVar1_C_OnSpreadChanged) == 0x000004, "Wrong alignment on Crosshair_SniperVar1_C_OnSpreadChanged");
static_assert(sizeof(Crosshair_SniperVar1_C_OnSpreadChanged) == 0x000004, "Wrong size on Crosshair_SniperVar1_C_OnSpreadChanged");
static_assert(offsetof(Crosshair_SniperVar1_C_OnSpreadChanged, Spread) == 0x000000, "Member 'Crosshair_SniperVar1_C_OnSpreadChanged::Spread' has a wrong offset!");

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.Tick
// 0x003C (0x003C - 0x0000)
struct Crosshair_SniperVar1_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_SniperVar1_C_Tick) == 0x000004, "Wrong alignment on Crosshair_SniperVar1_C_Tick");
static_assert(sizeof(Crosshair_SniperVar1_C_Tick) == 0x00003C, "Wrong size on Crosshair_SniperVar1_C_Tick");
static_assert(offsetof(Crosshair_SniperVar1_C_Tick, MyGeometry) == 0x000000, "Member 'Crosshair_SniperVar1_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_Tick, InDeltaTime) == 0x000038, "Member 'Crosshair_SniperVar1_C_Tick::InDeltaTime' has a wrong offset!");

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.SetImpactCrosshair
// 0x0001 (0x0001 - 0x0000)
struct Crosshair_SniperVar1_C_SetImpactCrosshair final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Crosshair_SniperVar1_C_SetImpactCrosshair) == 0x000001, "Wrong alignment on Crosshair_SniperVar1_C_SetImpactCrosshair");
static_assert(sizeof(Crosshair_SniperVar1_C_SetImpactCrosshair) == 0x000001, "Wrong size on Crosshair_SniperVar1_C_SetImpactCrosshair");
static_assert(offsetof(Crosshair_SniperVar1_C_SetImpactCrosshair, Show) == 0x000000, "Member 'Crosshair_SniperVar1_C_SetImpactCrosshair::Show' has a wrong offset!");

// Function Crosshair_SniperVar1.Crosshair_SniperVar1_C.UpdateCrosshair
// 0x0050 (0x0050 - 0x0000)
struct Crosshair_SniperVar1_C_UpdateCrosshair final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalSpread;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InnerScale;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrosshairDynamic_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Crosshair_SniperVar1_C_UpdateCrosshair) == 0x000004, "Wrong alignment on Crosshair_SniperVar1_C_UpdateCrosshair");
static_assert(sizeof(Crosshair_SniperVar1_C_UpdateCrosshair) == 0x000050, "Wrong size on Crosshair_SniperVar1_C_UpdateCrosshair");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, Spread) == 0x000000, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::Spread' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, FinalSpread) == 0x000004, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::FinalSpread' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, InnerScale) == 0x000008, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::InnerScale' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_FMin_ReturnValue) == 0x000010, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_IsCrosshairDynamic_ReturnValue) == 0x000014, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_IsCrosshairDynamic_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000020, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_FMin_ReturnValue_1) == 0x000024, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_MakeVector2D_ReturnValue) == 0x000030, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_MakeVector2D_ReturnValue_1) == 0x000038, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_MakeVector2D_ReturnValue_2) == 0x000040, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Crosshair_SniperVar1_C_UpdateCrosshair, CallFunc_MakeVector2D_ReturnValue_3) == 0x000048, "Member 'Crosshair_SniperVar1_C_UpdateCrosshair::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");

}


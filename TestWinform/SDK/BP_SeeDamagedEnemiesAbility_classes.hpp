#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeeDamagedEnemiesAbility

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SeeDamagedEnemiesAbility.BP_SeeDamagedEnemiesAbility_C
// 0x0020 (0x0090 - 0x0070)
class UBP_SeeDamagedEnemiesAbility_C final : public UTWAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0070(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ATWCharacterBP_C*>               EnemyClones;                                       // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         Custom_Depth_Stencil_Value;                        // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HpThreshold;                                       // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SeeDamagedEnemiesAbility(int32 EntryPoint);
	void BP_Update(float DeltaSeconds);
	void BP_OnReExecuted(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic);
	void OnHealthRestored(class ATimeWatchCharacter* Character, float NewHealth);
	void BP_OnResume();
	void BP_OnPause();
	void BP_OnFinished();
	void BP_OnPreActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, class UTWAbilitiesComponent* Caster_AbilityComp);
	void BP_OnActivated(class UTWGameplayAbilitySystem* InTWAbilitySystem, const struct FTWAbilityCustomDataHandle& AbilityDataHandle, const bool bShouldTriggerLogic);
	void SetDamagedOutline(class ANGDCharacter* Character);
	void SetOutlineOnAlreadyDamagedEnemies(class ATimeWatchCharacter* Controlled_Char);
	void GetEnemyClonesAndBind(class ATimeWatchCharacter* Controlled_Char);
	void TryActivateAbility(bool Should_Trigger_Logic, class UTWAbilitiesComponent* TWAbilityComponent, class ATimeWatchCharacter* TWCharacter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SeeDamagedEnemiesAbility_C">();
	}
	static class UBP_SeeDamagedEnemiesAbility_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SeeDamagedEnemiesAbility_C>();
	}
};
static_assert(alignof(UBP_SeeDamagedEnemiesAbility_C) == 0x000008, "Wrong alignment on UBP_SeeDamagedEnemiesAbility_C");
static_assert(sizeof(UBP_SeeDamagedEnemiesAbility_C) == 0x000090, "Wrong size on UBP_SeeDamagedEnemiesAbility_C");
static_assert(offsetof(UBP_SeeDamagedEnemiesAbility_C, UberGraphFrame) == 0x000070, "Member 'UBP_SeeDamagedEnemiesAbility_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_SeeDamagedEnemiesAbility_C, EnemyClones) == 0x000078, "Member 'UBP_SeeDamagedEnemiesAbility_C::EnemyClones' has a wrong offset!");
static_assert(offsetof(UBP_SeeDamagedEnemiesAbility_C, Custom_Depth_Stencil_Value) == 0x000088, "Member 'UBP_SeeDamagedEnemiesAbility_C::Custom_Depth_Stencil_Value' has a wrong offset!");
static_assert(offsetof(UBP_SeeDamagedEnemiesAbility_C, HpThreshold) == 0x00008C, "Member 'UBP_SeeDamagedEnemiesAbility_C::HpThreshold' has a wrong offset!");

}


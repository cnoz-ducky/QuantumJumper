#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WC_MatchOptions

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WC_MatchOptions.WC_MatchOptions_C.ExecuteUbergraph_WC_MatchOptions
// 0x0058 (0x0058 - 0x0000)
struct WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions) == 0x000008, "Wrong alignment on WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions");
static_assert(sizeof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions) == 0x000058, "Wrong size on WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, EntryPoint) == 0x000000, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::EntryPoint' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, K2Node_Event_MyGeometry) == 0x000010, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, K2Node_Event_InDeltaTime) == 0x000048, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00004C, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, CallFunc_IsHovered_ReturnValue) == 0x00004D, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions, CallFunc_PlayAnimation_ReturnValue_1) == 0x000050, "Member 'WC_MatchOptions_C_ExecuteUbergraph_WC_MatchOptions::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WC_MatchOptions.WC_MatchOptions_C.Tick
// 0x003C (0x003C - 0x0000)
struct WC_MatchOptions_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WC_MatchOptions_C_Tick) == 0x000004, "Wrong alignment on WC_MatchOptions_C_Tick");
static_assert(sizeof(WC_MatchOptions_C_Tick) == 0x00003C, "Wrong size on WC_MatchOptions_C_Tick");
static_assert(offsetof(WC_MatchOptions_C_Tick, MyGeometry) == 0x000000, "Member 'WC_MatchOptions_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WC_MatchOptions_C_Tick, InDeltaTime) == 0x000038, "Member 'WC_MatchOptions_C_Tick::InDeltaTime' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BaseMoveComponentType

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BaseMoveComponentType.BaseMoveComponentType_C.ExecuteUbergraph_BaseMoveComponentType
// 0x0008 (0x0008 - 0x0000)
struct BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType) == 0x000004, "Wrong alignment on BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType");
static_assert(sizeof(BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType) == 0x000008, "Wrong size on BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType");
static_assert(offsetof(BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType, EntryPoint) == 0x000000, "Member 'BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType::EntryPoint' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BaseMoveComponentType_C_ExecuteUbergraph_BaseMoveComponentType::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BaseMoveComponentType.BaseMoveComponentType_C.GetRelativePosition
// 0x0034 (0x0034 - 0x0000)
struct BaseMoveComponentType_C_GetRelativePosition final
{
public:
	struct FVector                                NewParam;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BaseMoveComponentType_C_GetRelativePosition) == 0x000004, "Wrong alignment on BaseMoveComponentType_C_GetRelativePosition");
static_assert(sizeof(BaseMoveComponentType_C_GetRelativePosition) == 0x000034, "Wrong size on BaseMoveComponentType_C_GetRelativePosition");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, NewParam) == 0x000000, "Member 'BaseMoveComponentType_C_GetRelativePosition::NewParam' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000024, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BaseMoveComponentType_C_GetRelativePosition, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BaseMoveComponentType_C_GetRelativePosition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

}


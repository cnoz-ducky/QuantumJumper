#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_Shotgun

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "TemporalWeapon_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_Shotgun.Weapon_Shotgun_C
// 0x0020 (0x0B30 - 0x0B10)
class AWeapon_Shotgun_C final : public ATemporalWeapon_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_Shotgun_C;                   // 0x0B08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPushbackFirearmFeelComponent*          PushbackFirearmFeel;                               // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeFirearmFeelComponent*       CameraShakeFirearmFeel;                            // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKickFirearmFeelComponent*              KickFirearmFeel;                                   // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpreadFirearmFeelComponent*            SpreadFirearmFeel;                                 // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Weapon_Shotgun(int32 EntryPoint);
	void CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState);
	void FakeTimeDilationSound(EFluxCapacitorStates GameState);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_Shotgun_C">();
	}
	static class AWeapon_Shotgun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_Shotgun_C>();
	}
};
static_assert(alignof(AWeapon_Shotgun_C) == 0x000010, "Wrong alignment on AWeapon_Shotgun_C");
static_assert(sizeof(AWeapon_Shotgun_C) == 0x000B30, "Wrong size on AWeapon_Shotgun_C");
static_assert(offsetof(AWeapon_Shotgun_C, UberGraphFrame_Weapon_Shotgun_C) == 0x000B08, "Member 'AWeapon_Shotgun_C::UberGraphFrame_Weapon_Shotgun_C' has a wrong offset!");
static_assert(offsetof(AWeapon_Shotgun_C, PushbackFirearmFeel) == 0x000B10, "Member 'AWeapon_Shotgun_C::PushbackFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Shotgun_C, CameraShakeFirearmFeel) == 0x000B18, "Member 'AWeapon_Shotgun_C::CameraShakeFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Shotgun_C, KickFirearmFeel) == 0x000B20, "Member 'AWeapon_Shotgun_C::KickFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_Shotgun_C, SpreadFirearmFeel) == 0x000B28, "Member 'AWeapon_Shotgun_C::SpreadFirearmFeel' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Crosshair_SniperVar1

#include "Basic.hpp"

#include "TimeWatch_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Crosshair_SniperVar1.Crosshair_SniperVar1_C
// 0x00B0 (0x03B0 - 0x0300)
class UCrosshair_SniperVar1_C final : public UTWLinearCrosshairWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HitAnim;                                           // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BottomBar;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLeft;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomRight;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_HitMarker;                             // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Center;                                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftBar;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MaxAccuracyIndicator;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Bottom;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Left;                                      // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Right;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Top;                                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightBar;                                          // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopBar;                                            // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLeft;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopRight;                                          // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         TranslationFactor;                                 // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TranslationConstant;                               // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TranslationOffset;                                 // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            SniperCrosshairOffset_Spread;                      // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Test;                                              // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RedDotAccuracyThreshold;                           // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Crosshair_SniperVar1(int32 EntryPoint);
	void OnADSExit();
	void OnADSStartExit();
	void ShowHitFeedback(const struct FLinearColor& HitColor);
	void Construct();
	void UpdateCrosshairColor(int32 ColorIndex);
	void OnSpreadChanged(float Spread);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetImpactCrosshair(bool Show);
	void UpdateCrosshair(float Spread);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Crosshair_SniperVar1_C">();
	}
	static class UCrosshair_SniperVar1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrosshair_SniperVar1_C>();
	}
};
static_assert(alignof(UCrosshair_SniperVar1_C) == 0x000008, "Wrong alignment on UCrosshair_SniperVar1_C");
static_assert(sizeof(UCrosshair_SniperVar1_C) == 0x0003B0, "Wrong size on UCrosshair_SniperVar1_C");
static_assert(offsetof(UCrosshair_SniperVar1_C, UberGraphFrame) == 0x000300, "Member 'UCrosshair_SniperVar1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, HitAnim) == 0x000308, "Member 'UCrosshair_SniperVar1_C::HitAnim' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, BottomBar) == 0x000310, "Member 'UCrosshair_SniperVar1_C::BottomBar' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, BottomLeft) == 0x000318, "Member 'UCrosshair_SniperVar1_C::BottomLeft' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, BottomRight) == 0x000320, "Member 'UCrosshair_SniperVar1_C::BottomRight' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, CanvasPanel_HitMarker) == 0x000328, "Member 'UCrosshair_SniperVar1_C::CanvasPanel_HitMarker' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, Center) == 0x000330, "Member 'UCrosshair_SniperVar1_C::Center' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, LeftBar) == 0x000338, "Member 'UCrosshair_SniperVar1_C::LeftBar' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, MaxAccuracyIndicator) == 0x000340, "Member 'UCrosshair_SniperVar1_C::MaxAccuracyIndicator' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, Overlay_Bottom) == 0x000348, "Member 'UCrosshair_SniperVar1_C::Overlay_Bottom' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, Overlay_Left) == 0x000350, "Member 'UCrosshair_SniperVar1_C::Overlay_Left' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, Overlay_Right) == 0x000358, "Member 'UCrosshair_SniperVar1_C::Overlay_Right' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, Overlay_Top) == 0x000360, "Member 'UCrosshair_SniperVar1_C::Overlay_Top' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, RightBar) == 0x000368, "Member 'UCrosshair_SniperVar1_C::RightBar' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, TopBar) == 0x000370, "Member 'UCrosshair_SniperVar1_C::TopBar' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, TopLeft) == 0x000378, "Member 'UCrosshair_SniperVar1_C::TopLeft' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, TopRight) == 0x000380, "Member 'UCrosshair_SniperVar1_C::TopRight' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, TranslationFactor) == 0x000388, "Member 'UCrosshair_SniperVar1_C::TranslationFactor' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, TranslationConstant) == 0x00038C, "Member 'UCrosshair_SniperVar1_C::TranslationConstant' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, TranslationOffset) == 0x000390, "Member 'UCrosshair_SniperVar1_C::TranslationOffset' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, SniperCrosshairOffset_Spread) == 0x000398, "Member 'UCrosshair_SniperVar1_C::SniperCrosshairOffset_Spread' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, Test) == 0x0003A0, "Member 'UCrosshair_SniperVar1_C::Test' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, RedDotAccuracyThreshold) == 0x0003A4, "Member 'UCrosshair_SniperVar1_C::RedDotAccuracyThreshold' has a wrong offset!");
static_assert(offsetof(UCrosshair_SniperVar1_C, NewVar_0) == 0x0003A8, "Member 'UCrosshair_SniperVar1_C::NewVar_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_GrenadeLauncher

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TemporalWeapon_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_GrenadeLauncher.Weapon_GrenadeLauncher_C
// 0x0040 (0x0B50 - 0x0B10)
class AWeapon_GrenadeLauncher_C : public ATemporalWeapon_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_GrenadeLauncher_C;           // 0x0B08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPushbackFirearmFeelComponent*          PushbackFirearmFeel;                               // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKickFirearmFeelComponent*              KickFirearmFeel;                                   // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTWProjectilePredictionComponent*       TWProjectilePrediction;                            // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_288925964717D9ECACC918A299C1316B; // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_288925964717D9ECACC918A299C1316B; // 0x0B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2D[0x3];                                      // 0x0B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FreezeDebug;                                       // 0x0B38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               DebugType;                                         // 0x0B39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3A[0x2];                                      // 0x0B3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastTriggerTimer;                                  // 0x0B3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LastFireDirection;                                 // 0x0B40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SimFrequency;                                      // 0x0B4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Weapon_GrenadeLauncher(int32 EntryPoint);
	void CustomEvent(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState);
	void ReceiveTick(float DeltaSeconds);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void FakeTimeDilationSound(EFluxCapacitorStates NewParam);
	void GetProjectilePredictionData(struct FProjectilePredictionData* ProjectilePredictionData);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_GrenadeLauncher_C">();
	}
	static class AWeapon_GrenadeLauncher_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_GrenadeLauncher_C>();
	}
};
static_assert(alignof(AWeapon_GrenadeLauncher_C) == 0x000010, "Wrong alignment on AWeapon_GrenadeLauncher_C");
static_assert(sizeof(AWeapon_GrenadeLauncher_C) == 0x000B50, "Wrong size on AWeapon_GrenadeLauncher_C");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, UberGraphFrame_Weapon_GrenadeLauncher_C) == 0x000B08, "Member 'AWeapon_GrenadeLauncher_C::UberGraphFrame_Weapon_GrenadeLauncher_C' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, PushbackFirearmFeel) == 0x000B10, "Member 'AWeapon_GrenadeLauncher_C::PushbackFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, KickFirearmFeel) == 0x000B18, "Member 'AWeapon_GrenadeLauncher_C::KickFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, TWProjectilePrediction) == 0x000B20, "Member 'AWeapon_GrenadeLauncher_C::TWProjectilePrediction' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, Timeline_0_NewTrack_0_288925964717D9ECACC918A299C1316B) == 0x000B28, "Member 'AWeapon_GrenadeLauncher_C::Timeline_0_NewTrack_0_288925964717D9ECACC918A299C1316B' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, Timeline_0__Direction_288925964717D9ECACC918A299C1316B) == 0x000B2C, "Member 'AWeapon_GrenadeLauncher_C::Timeline_0__Direction_288925964717D9ECACC918A299C1316B' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, Timeline_0) == 0x000B30, "Member 'AWeapon_GrenadeLauncher_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, FreezeDebug) == 0x000B38, "Member 'AWeapon_GrenadeLauncher_C::FreezeDebug' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, DebugType) == 0x000B39, "Member 'AWeapon_GrenadeLauncher_C::DebugType' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, LastTriggerTimer) == 0x000B3C, "Member 'AWeapon_GrenadeLauncher_C::LastTriggerTimer' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, LastFireDirection) == 0x000B40, "Member 'AWeapon_GrenadeLauncher_C::LastFireDirection' has a wrong offset!");
static_assert(offsetof(AWeapon_GrenadeLauncher_C, SimFrequency) == 0x000B4C, "Member 'AWeapon_GrenadeLauncher_C::SimFrequency' has a wrong offset!");

}


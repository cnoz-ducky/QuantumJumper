#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TWCharacterBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TimeWatch_structs.hpp"


namespace SDK::Params
{

// Function TWCharacterBP.TWCharacterBP_C.ExecuteUbergraph_TWCharacterBP
// 0x0560 (0x0560 - 0x0000)
struct TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameplayActive_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFluxTimelineState                            K2Node_CustomEvent_CurrentState;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFluxCapacitorStates                          K2Node_CustomEvent_OldState;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          K2Node_CustomEvent_NewState;                       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSpawnProtection_ReturnValue;           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UsedInLoop_ReturnValue;                   // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Event_InRotationToSet;                      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalTeam_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_ComponentBoundEvent_DynamicMaterial;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_NewState;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_TeamID;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetMeshTP_ReturnValue;                    // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        CallFunc_GetCurrentWeapon_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetMeshTP_ReturnValue_1;                  // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFluxAnimInstance*                      K2Node_DynamicCast_AsFlux_Anim_Instance;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFirstPerson_AnimBP_C*                  K2Node_DynamicCast_AsFirst_Person_Anim_BP;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsGhost;                       // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayColorScheme                   CallFunc_GetColorScheme_TeamColorsOutlines;        // 0x00C8(0x0428)()
	float                                         K2Node_Event_DeltaSeconds;                         // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorForClone_ReturnValue;             // 0x04F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_VerticalSpeed;                        // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFluxPlayerController*                  K2Node_DynamicCast_AsFlux_Player_Controller;       // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShake*                           CallFunc_PlayCameraShake_ReturnValue;              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue_1;                   // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue;                      // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53B[0x1];                                      // 0x053B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATimeWatchGameState*                    K2Node_DynamicCast_AsTime_Watch_Game_State_2;      // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue_2;                   // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0553(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue_3;                   // 0x0555(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlive_ReturnValue_1;                    // 0x0556(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0557(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP) == 0x000008, "Wrong alignment on TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP");
static_assert(sizeof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP) == 0x000560, "Wrong size on TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, EntryPoint) == 0x000000, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_AsTime_Watch_Game_State) == 0x000010, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_AsTime_Watch_Game_State' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsGameplayActive_ReturnValue) == 0x000019, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsGameplayActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_CustomEvent_CurrentState) == 0x00001A, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_CustomEvent_CurrentState' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_SwitchEnum_CmpSuccess) == 0x00001B, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_CustomEvent_OldState) == 0x00001C, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_CustomEvent_NewState) == 0x00001D, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_HasSpawnProtection_ReturnValue) == 0x00001E, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_HasSpawnProtection_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_UsedInLoop_ReturnValue) == 0x00001F, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_UsedInLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_Array_Get_Item) == 0x000028, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetGameState_ReturnValue_1) == 0x000038, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_AsTime_Watch_Game_State_1) == 0x000040, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_AsTime_Watch_Game_State_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00004A, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_Event_InRotationToSet) == 0x00004C, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_Event_InRotationToSet' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsLocalTeam_ReturnValue) == 0x000058, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsLocalTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_ComponentBoundEvent_DynamicMaterial) == 0x000060, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_ComponentBoundEvent_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_Event_NewState) == 0x000068, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_Event_TeamID) == 0x00006C, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_Event_TeamID' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsPlaying_ReturnValue) == 0x000070, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000078, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetMeshTP_ReturnValue) == 0x000080, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetMeshTP_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetCurrentWeapon_ReturnValue_1) == 0x000088, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetCurrentWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetMeshTP_ReturnValue_1) == 0x000090, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetMeshTP_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000098, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000A0, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_AsFlux_Anim_Instance) == 0x0000A8, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_AsFlux_Anim_Instance' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_AsFirst_Person_Anim_BP) == 0x0000B8, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_AsFirst_Person_Anim_BP' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsSprinting_ReturnValue) == 0x0000C1, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsValid_ReturnValue_1) == 0x0000C2, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_CustomEvent_bIsGhost) == 0x0000C3, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_CustomEvent_bIsGhost' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000C4, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetColorScheme_TeamColorsOutlines) == 0x0000C8, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetColorScheme_TeamColorsOutlines' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_Event_DeltaSeconds) == 0x0004F0, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetColorForClone_ReturnValue) == 0x0004F4, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetColorForClone_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetController_ReturnValue) == 0x000508, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_Event_VerticalSpeed) == 0x000510, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_Event_VerticalSpeed' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_AsFlux_Player_Controller) == 0x000518, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_AsFlux_Player_Controller' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_bSuccess_4) == 0x000520, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_Abs_ReturnValue) == 0x000524, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsValid_ReturnValue_2) == 0x000528, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetFloatValue_ReturnValue) == 0x00052C, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_PlayCameraShake_ReturnValue) == 0x000530, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_PlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsActive_ReturnValue) == 0x000538, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsActive_ReturnValue_1) == 0x000539, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsAlive_ReturnValue) == 0x00053A, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsAlive_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_SelectFloat_ReturnValue) == 0x00053C, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_GetGameState_ReturnValue_2) == 0x000540, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_AsTime_Watch_Game_State_2) == 0x000548, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_AsTime_Watch_Game_State_2' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, K2Node_DynamicCast_bSuccess_5) == 0x000550, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsActive_ReturnValue_2) == 0x000551, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsActive_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000552, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_BooleanAND_ReturnValue_2) == 0x000553, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000554, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsActive_ReturnValue_3) == 0x000555, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsActive_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_IsAlive_ReturnValue_1) == 0x000556, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_IsAlive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_BooleanAND_ReturnValue_3) == 0x000557, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP, CallFunc_BooleanAND_ReturnValue_4) == 0x000558, "Member 'TWCharacterBP_C_ExecuteUbergraph_TWCharacterBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.OnCharacterGrounded
// 0x0004 (0x0004 - 0x0000)
struct TWCharacterBP_C_OnCharacterGrounded final
{
public:
	float                                         VerticalSpeed;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_OnCharacterGrounded) == 0x000004, "Wrong alignment on TWCharacterBP_C_OnCharacterGrounded");
static_assert(sizeof(TWCharacterBP_C_OnCharacterGrounded) == 0x000004, "Wrong size on TWCharacterBP_C_OnCharacterGrounded");
static_assert(offsetof(TWCharacterBP_C_OnCharacterGrounded, VerticalSpeed) == 0x000000, "Member 'TWCharacterBP_C_OnCharacterGrounded::VerticalSpeed' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TWCharacterBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_ReceiveTick) == 0x000004, "Wrong alignment on TWCharacterBP_C_ReceiveTick");
static_assert(sizeof(TWCharacterBP_C_ReceiveTick) == 0x000004, "Wrong size on TWCharacterBP_C_ReceiveTick");
static_assert(offsetof(TWCharacterBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TWCharacterBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.GhostMaterialTransition
// 0x0001 (0x0001 - 0x0000)
struct TWCharacterBP_C_GhostMaterialTransition final
{
public:
	bool                                          bIsGhost;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TWCharacterBP_C_GhostMaterialTransition) == 0x000001, "Wrong alignment on TWCharacterBP_C_GhostMaterialTransition");
static_assert(sizeof(TWCharacterBP_C_GhostMaterialTransition) == 0x000001, "Wrong size on TWCharacterBP_C_GhostMaterialTransition");
static_assert(offsetof(TWCharacterBP_C_GhostMaterialTransition, bIsGhost) == 0x000000, "Member 'TWCharacterBP_C_GhostMaterialTransition::bIsGhost' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.OnTeamAssigned
// 0x0004 (0x0004 - 0x0000)
struct TWCharacterBP_C_OnTeamAssigned final
{
public:
	int32                                         TeamId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_OnTeamAssigned) == 0x000004, "Wrong alignment on TWCharacterBP_C_OnTeamAssigned");
static_assert(sizeof(TWCharacterBP_C_OnTeamAssigned) == 0x000004, "Wrong size on TWCharacterBP_C_OnTeamAssigned");
static_assert(offsetof(TWCharacterBP_C_OnTeamAssigned, TeamId) == 0x000000, "Member 'TWCharacterBP_C_OnTeamAssigned::TeamId' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.OnSprintEnabled
// 0x0001 (0x0001 - 0x0000)
struct TWCharacterBP_C_OnSprintEnabled final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TWCharacterBP_C_OnSprintEnabled) == 0x000001, "Wrong alignment on TWCharacterBP_C_OnSprintEnabled");
static_assert(sizeof(TWCharacterBP_C_OnSprintEnabled) == 0x000001, "Wrong size on TWCharacterBP_C_OnSprintEnabled");
static_assert(offsetof(TWCharacterBP_C_OnSprintEnabled, NewState) == 0x000000, "Member 'TWCharacterBP_C_OnSprintEnabled::NewState' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature final
{
public:
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature) == 0x000008, "Wrong alignment on TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature");
static_assert(sizeof(TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature) == 0x000008, "Wrong size on TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature");
static_assert(offsetof(TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature, DynamicMaterial) == 0x000000, "Member 'TWCharacterBP_C_BndEvt__CustomizationComponent_K2Node_ComponentBoundEvent_0_MaterialCustomization__DelegateSignature::DynamicMaterial' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.RefreshCharacterRotation
// 0x000C (0x000C - 0x0000)
struct TWCharacterBP_C_RefreshCharacterRotation final
{
public:
	struct FRotator                               InRotationToSet;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TWCharacterBP_C_RefreshCharacterRotation) == 0x000004, "Wrong alignment on TWCharacterBP_C_RefreshCharacterRotation");
static_assert(sizeof(TWCharacterBP_C_RefreshCharacterRotation) == 0x00000C, "Wrong size on TWCharacterBP_C_RefreshCharacterRotation");
static_assert(offsetof(TWCharacterBP_C_RefreshCharacterRotation, InRotationToSet) == 0x000000, "Member 'TWCharacterBP_C_RefreshCharacterRotation::InRotationToSet' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.OnGameStateChangedBP
// 0x0002 (0x0002 - 0x0000)
struct TWCharacterBP_C_OnGameStateChangedBP final
{
public:
	EFluxCapacitorStates                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFluxCapacitorStates                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_OnGameStateChangedBP) == 0x000001, "Wrong alignment on TWCharacterBP_C_OnGameStateChangedBP");
static_assert(sizeof(TWCharacterBP_C_OnGameStateChangedBP) == 0x000002, "Wrong size on TWCharacterBP_C_OnGameStateChangedBP");
static_assert(offsetof(TWCharacterBP_C_OnGameStateChangedBP, OldState) == 0x000000, "Member 'TWCharacterBP_C_OnGameStateChangedBP::OldState' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_OnGameStateChangedBP, NewState) == 0x000001, "Member 'TWCharacterBP_C_OnGameStateChangedBP::NewState' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.OnCloneStateChange
// 0x0001 (0x0001 - 0x0000)
struct TWCharacterBP_C_OnCloneStateChange final
{
public:
	EFluxTimelineState                            CurrentState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_OnCloneStateChange) == 0x000001, "Wrong alignment on TWCharacterBP_C_OnCloneStateChange");
static_assert(sizeof(TWCharacterBP_C_OnCloneStateChange) == 0x000001, "Wrong size on TWCharacterBP_C_OnCloneStateChange");
static_assert(offsetof(TWCharacterBP_C_OnCloneStateChange, CurrentState) == 0x000000, "Member 'TWCharacterBP_C_OnCloneStateChange::CurrentState' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.SetOutlineColor
// 0x0078 (0x0078 - 0x0000)
struct TWCharacterBP_C_SetOutlineColor final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AItem*>                          CallFunc_GetItemsOfClass_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem*                                  CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalWeapon*                        K2Node_DynamicCast_AsTemporal_Weapon;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetMeshTP_ReturnValue;                    // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFluxPlayerController*                  K2Node_DynamicCast_AsFlux_Player_Controller;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAlly_ReturnValue;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_SetOutlineColor) == 0x000008, "Wrong alignment on TWCharacterBP_C_SetOutlineColor");
static_assert(sizeof(TWCharacterBP_C_SetOutlineColor) == 0x000078, "Wrong size on TWCharacterBP_C_SetOutlineColor");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, Temp_int_Variable) == 0x000000, "Member 'TWCharacterBP_C_SetOutlineColor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, Temp_int_Variable_1) == 0x000004, "Member 'TWCharacterBP_C_SetOutlineColor::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, Temp_int_Array_Index_Variable) == 0x000008, "Member 'TWCharacterBP_C_SetOutlineColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'TWCharacterBP_C_SetOutlineColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, Temp_bool_Variable) == 0x000014, "Member 'TWCharacterBP_C_SetOutlineColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_IsDedicatedServer_ReturnValue) == 0x000015, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_GetItemsOfClass_ReturnValue) == 0x000018, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_GetItemsOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_Array_Get_Item) == 0x000030, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, K2Node_DynamicCast_AsTemporal_Weapon) == 0x000038, "Member 'TWCharacterBP_C_SetOutlineColor::K2Node_DynamicCast_AsTemporal_Weapon' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'TWCharacterBP_C_SetOutlineColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_GetMeshTP_ReturnValue) == 0x000048, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_GetMeshTP_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, K2Node_DynamicCast_AsFlux_Player_Controller) == 0x000060, "Member 'TWCharacterBP_C_SetOutlineColor::K2Node_DynamicCast_AsFlux_Player_Controller' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'TWCharacterBP_C_SetOutlineColor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_IsAlly_ReturnValue) == 0x000069, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_IsAlly_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_GetTeamId_ReturnValue) == 0x00006C, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'TWCharacterBP_C_SetOutlineColor::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_SetOutlineColor, K2Node_Select_Default) == 0x000074, "Member 'TWCharacterBP_C_SetOutlineColor::K2Node_Select_Default' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.DrawCloneTrail
// 0x0070 (0x0070 - 0x0000)
struct TWCharacterBP_C_DrawCloneTrail final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATemporalTrail_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_DrawCloneTrail) == 0x000010, "Wrong alignment on TWCharacterBP_C_DrawCloneTrail");
static_assert(sizeof(TWCharacterBP_C_DrawCloneTrail) == 0x000070, "Wrong size on TWCharacterBP_C_DrawCloneTrail");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_DrawCloneTrail, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'TWCharacterBP_C_DrawCloneTrail::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.UpdateSpawnAnimation
// 0x0010 (0x0010 - 0x0000)
struct TWCharacterBP_C_UpdateSpawnAnimation final
{
public:
	float                                         ParticleLerp;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FPVisibilityAlpha;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TPDisintegration;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoneLenghtMultiplier;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_UpdateSpawnAnimation) == 0x000004, "Wrong alignment on TWCharacterBP_C_UpdateSpawnAnimation");
static_assert(sizeof(TWCharacterBP_C_UpdateSpawnAnimation) == 0x000010, "Wrong size on TWCharacterBP_C_UpdateSpawnAnimation");
static_assert(offsetof(TWCharacterBP_C_UpdateSpawnAnimation, ParticleLerp) == 0x000000, "Member 'TWCharacterBP_C_UpdateSpawnAnimation::ParticleLerp' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateSpawnAnimation, FPVisibilityAlpha) == 0x000004, "Member 'TWCharacterBP_C_UpdateSpawnAnimation::FPVisibilityAlpha' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateSpawnAnimation, TPDisintegration) == 0x000008, "Member 'TWCharacterBP_C_UpdateSpawnAnimation::TPDisintegration' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateSpawnAnimation, BoneLenghtMultiplier) == 0x00000C, "Member 'TWCharacterBP_C_UpdateSpawnAnimation::BoneLenghtMultiplier' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.UpdateGhostMaterial
// 0x04B0 (0x04B0 - 0x0000)
struct TWCharacterBP_C_UpdateGhostMaterial final
{
public:
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bApplyDistortion;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ColorToUse;                                        // 0x000C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayColorScheme                   CallFunc_GetColorScheme_TeamColorsOutlines;        // 0x0020(0x0428)()
	struct FLinearColor                           CallFunc_GetColorForClone_ReturnValue;             // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UsedInLoop_ReturnValue;                   // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSavedVelocity_ReturnValue;             // 0x045C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0468(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSavedVelocity_ReturnValue_1;           // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0480(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_UpdateGhostMaterial) == 0x000008, "Wrong alignment on TWCharacterBP_C_UpdateGhostMaterial");
static_assert(sizeof(TWCharacterBP_C_UpdateGhostMaterial) == 0x0004B0, "Wrong size on TWCharacterBP_C_UpdateGhostMaterial");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, DynamicMaterial) == 0x000000, "Member 'TWCharacterBP_C_UpdateGhostMaterial::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, bApplyDistortion) == 0x000008, "Member 'TWCharacterBP_C_UpdateGhostMaterial::bApplyDistortion' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, ColorToUse) == 0x00000C, "Member 'TWCharacterBP_C_UpdateGhostMaterial::ColorToUse' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_GetColorScheme_TeamColorsOutlines) == 0x000020, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_GetColorScheme_TeamColorsOutlines' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_GetColorForClone_ReturnValue) == 0x000448, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_GetColorForClone_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_UsedInLoop_ReturnValue) == 0x000458, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_UsedInLoop_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_GetSavedVelocity_ReturnValue) == 0x00045C, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_GetSavedVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000468, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_GetSavedVelocity_ReturnValue_1) == 0x000474, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_GetSavedVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_Normal_ReturnValue) == 0x000480, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_VSize_ReturnValue) == 0x00048C, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_BreakVector_X) == 0x000490, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_BreakVector_Y) == 0x000494, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_BreakVector_Z) == 0x000498, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00049C, "Member 'TWCharacterBP_C_UpdateGhostMaterial::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TWCharacterBP_C_UpdateGhostMaterial, K2Node_MakeStruct_LinearColor) == 0x0004A0, "Member 'TWCharacterBP_C_UpdateGhostMaterial::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function TWCharacterBP.TWCharacterBP_C.GetTPMeshOccluder
// 0x0008 (0x0008 - 0x0000)
struct TWCharacterBP_C_GetTPMeshOccluder final
{
public:
	class UPrimitiveComponent*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TWCharacterBP_C_GetTPMeshOccluder) == 0x000008, "Wrong alignment on TWCharacterBP_C_GetTPMeshOccluder");
static_assert(sizeof(TWCharacterBP_C_GetTPMeshOccluder) == 0x000008, "Wrong size on TWCharacterBP_C_GetTPMeshOccluder");
static_assert(offsetof(TWCharacterBP_C_GetTPMeshOccluder, ReturnValue) == 0x000000, "Member 'TWCharacterBP_C_GetTPMeshOccluder::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weapon_SMG

#include "Basic.hpp"

#include "TimeWatch_structs.hpp"
#include "Engine_structs.hpp"
#include "TemporalWeapon_BP_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Weapon_SMG.Weapon_SMG_C
// 0x0030 (0x0B40 - 0x0B10)
#pragma pack(push, 0x1)
class alignas(0x10) AWeapon_SMG_C : public ATemporalWeapon_BP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Weapon_SMG_C;                       // 0x0B08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraShakeFirearmFeelComponent*       CameraShakeFirearmFeel;                            // 0x0B10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDeviationFirearmFeelComponent*         DeviationFirearmFeel;                              // 0x0B18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPushbackFirearmFeelComponent*          PushbackFirearmFeel;                               // 0x0B20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpreadFirearmFeelComponent*            SpreadFirearmFeel;                                 // 0x0B28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USprayPatternFirearmFeelComponent*      SprayPatternFirearmFeel;                           // 0x0B30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Weapon_SMG(int32 EntryPoint);
	void OnStateChanged(EFluxCapacitorStates OldState, EFluxCapacitorStates NewState);
	void FakeTimeDilationSound(EFluxCapacitorStates GameState);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Weapon_SMG_C">();
	}
	static class AWeapon_SMG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWeapon_SMG_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AWeapon_SMG_C) == 0x000010, "Wrong alignment on AWeapon_SMG_C");
static_assert(sizeof(AWeapon_SMG_C) == 0x000B40, "Wrong size on AWeapon_SMG_C");
static_assert(offsetof(AWeapon_SMG_C, UberGraphFrame_Weapon_SMG_C) == 0x000B08, "Member 'AWeapon_SMG_C::UberGraphFrame_Weapon_SMG_C' has a wrong offset!");
static_assert(offsetof(AWeapon_SMG_C, CameraShakeFirearmFeel) == 0x000B10, "Member 'AWeapon_SMG_C::CameraShakeFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SMG_C, DeviationFirearmFeel) == 0x000B18, "Member 'AWeapon_SMG_C::DeviationFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SMG_C, PushbackFirearmFeel) == 0x000B20, "Member 'AWeapon_SMG_C::PushbackFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SMG_C, SpreadFirearmFeel) == 0x000B28, "Member 'AWeapon_SMG_C::SpreadFirearmFeel' has a wrong offset!");
static_assert(offsetof(AWeapon_SMG_C, SprayPatternFirearmFeel) == 0x000B30, "Member 'AWeapon_SMG_C::SprayPatternFirearmFeel' has a wrong offset!");

}

